;#############################################################
;#
;#	CLIENT:		UNITING CARE
;#	JOB:		BLUE CARE STATEMENTS
;#	AUTHOR:		BEN
;#	VERSION:	1		-	FINAL LIVE VERSION
;#				1.01	-	UPDATED FINAL VERSION
;#				1.02	-	CHANGES TO EZYDEBIT + NEW ADDRESS FIELDS
;#				1.03	-	NEW BC LOGO
;#
;#
;#
;#
;#
;#
;#
;#############################################################
RECORD
	ALPHA	SORTORDER			L200
	ALPHA	CUSTOMERACCOUNT		L200

RECORD	;HEADER RECORD TYPE
	FILLER						L200	
	FILLER						L200
	ALPHA	NAMELINE			L200
	ALPHA	METHODOFPAYMENT		L200
	ALPHA	CUSTOMERGROUP		L200
	ALPHA	EMAIL				L200
	ALPHA	MOBILE				L200
	ALPHA	SITE				L200
	ALPHA	BPAYNUMBER			L200
	ALPHA	FACILITYNO			L200
	ALPHA	ADD1				L200
	ALPHA	ADD2				L200
	ALPHA	ADD3				L200
	ALPHA	ADD4				L200
	ALPHA	ADD5				L200
	ALPHA	ADD6				L200
	ALPHA	STATEMENTNAME		L200
	ALPHA	SUBURB				L200
	ALPHA	POSTCODE			L200
	ALPHA	STATE				L200
	ALPHA	OPEN_DATE			L200
	ALPHA	CLOSE_DATE			L200
	ALPHA	DUE_DATE			L200
	ALPHA	BILLER_CODE			L200
	ALPHA	dt_dpid				L200
	ALPHA	Dt_Postcode			L200
	ALPHA	dt_bsp				L200
	ALPHA	DtBarcode			L200
	ALPHA	Dt_Match_Type		L200
	ALPHA	sort_state			L200
	ALPHA	sort_level			L200
	ALPHA	sort_code			L200
	ALPHA	sort_pcd			L200
	ALPHA	npsp_code			L200

;	ALPHA	DTBARCODE			L200
;	ALPHA	DTBPSORTCODE		L200

RECORD	;DETAIL LINE TYPE

	FILLER						L200	
	FILLER						L200
	FILLER						L200
	ALPHA	VOUCHER				L200
	ALPHA	TRANSDATE			L200
	ALPHA	TRANSTEXT			L200
	ALPHA	TRANSQTY			L200
	ALPHA	TRANSRATE			L200
	ALPHA	TRANSGST			L200
	ALPHA	TRANSTOTAL			L200
	
INTERNAL

;ALPHAS
	ALPHA	PART				L1
	ALPHA	MOD97CHECKDIGIT		L2
	ALPHA	MOD10CHECKDIGIT		L2
	ALPHA	BILLERCODE			L4="3124"
	ALPHA	JOBNUMBER			L6
	ALPHA	RCOUNT				L7
	ALPHA	TEMPALPHA9			L9
	ALPHA	PAYSLIPTYPE			L3
	ALPHA	TEMPALPHA10			L10
	ALPHA	NEWKERNBCODE		L18
	ALPHA	TEMPALPHA20			L20
	ALPHA	SAVEDPAYMETHOD		L20
	ALPHA	S_SORTORDER			L20
	ALPHA	aPAGENUMBER			L20
	ALPHA	aTOTALPAGES			L20
	ALPHA	aTOTALIMPS			L20
	ALPHA	aHOPPER1COUNT		L20
	ALPHA	TEMPPAYBARCODE		L25
	ALPHA	TEMPALPHA26			L26
	ALPHA	TEMPALPHA50			L50
	ALPHA	TEMPDATE			L50
	ALPHA	PHONE_TYPE			L50
	ALPHA	PHONE_NUMBER		L50
	ALPHA	ENDDATE				L100
	ALPHA	DDDATE				L100
	ALPHA	DDDATE2				L100
	ALPHA	MONTHOFPAYMENT		L100
	ALPHA	GSTTOTAL			L100
	ALPHA	ISSUEDATE			L100
	ALPHA	FILENAME			L100
	ALPHA	TEMPRCOUNT			L100
	ALPHA	TEMPALPHA100		L100
	ALPHA	SPOOLNAME			L100
	ALPHA	SAVEDNAME			L200
	ALPHA	SAVEDCUSTNUM		L200
	ALPHA	SAVEDBPAYREF		L200
	ALPHA	TRFNAME				L100="BLUECARE_MONTHLY_INVOICES_V1.03.TRF"
	ALPHA	NAB1				L200
	ALPHA	NAB2				L200
	ALPHA	NAB3				L200
	ALPHA	NAB4				L200
	ALPHA	NAB5				L200
	ALPHA	NAB6				L200
	ALPHA	NAB7				L200
	ALPHA	NAB8				L200
	ALPHA	BPAY_BILLER_CODE	L500
	ALPHA	OCRLINE				L500
	ALPHA	TOTALAMOUNT			L500
	ALPHA	TEMPALPHA500		L500
	ALPHA	FULLNAB				L5000
	ALPHA	TEXTIN				L9000
	ALPHA	FRONT_GRAPHIC		L200
	ALPHA	BACK_GRAPHIC 		L200="BLUECARE_BG_BACK_v2.eps"
	DATE	SAVED_DUEDATE		L8

	;FIELDS FOR PRINT SHEET
	ALPHA	PRINTREP			L100
	ALPHA	FIRSTREC			L100
	ALPHA	LASTREC				L100
	ALPHA	SPOOLFILE			L100
	ALPHA	CLIENT				L100="Blue Care"
	ALPHA	JOBNAME				L100="Monthly Invoices"
	ALPHA	PRINTER				L100="BLACK"
	ALPHA	PROGRAMMER			L100="Ben"
	ALPHA	DTBPSORTCODE		L100
	ALPHA	aBRECOUNT			L20
	ALPHA	aTOTALRECORDS		L20
	ALPHA	aTOTALIMPRESSIONS	L20
	ALPHA	STOCKGSM			L20="100"
	ALPHA	STOCKSIZE			L20="A4"
	ALPHA	STOCKCODE			L20="BLC000 1002"
	ALPHA	PLEX				L20="Duplex"
	ALPHA	NUMUP				L20="1"
	ALPHA	PRINTREPLINE		L5000="<JOBNUMBER>|<CLIENT>|<JOBNAME>|<PROGRAMMER>|<SPOOLFILE>|<PRINTER>|<STOCKSIZE>|<STOCKGSM>|<STOCKCODE>|<PLEX>|<NUMUP>|<aTOTALRECORDS>|<aTOTALIMPRESSIONS>|<FIRSTREC>|<LASTREC>|<aBRECOUNT>\n"

	ALPHA	KICFILE				L100

;NUMERICS
	NUMERIC	DELFLAG				=0
	NUMERIC	STOREPAGECOUNTER	=0		;HOLDS STOREPAGE NUMBER
	NUMERIC	LOOPCOUNTER			=0		
	NUMERIC	TEXTYPOS			=0
	NUMERIC	FILEINDEX			=0
	NUMERIC	GRAPHICS			=0
	NUMERIC	TESTING				=0
	NUMERIC	TEMPNUM				=0
	NUMERIC	NOLINES				=0
	NUMERIC	LINECOUNTER			=0
	NUMERIC	RECCOUNTER			=0
	NUMERIC	PAGENUM				=0
	NUMERIC	KERNTOTALPAGES		=0		
	NUMERIC	TOTALRECORDS		=0		;COUNT THE TOTAL NUMBER OF RECORDS
	NUMERIC	TOTALIMPRESSIONS	=0		;COUNT THE TOTAL NUMBER OF IMPRESSIONS
	NUMERIC	BRECOUNT			=0		;COUNT THE TOTAL NUMBER OF BRE'S (HOPPER 3)
	NUMERIC	HOPPER1COUNT		=0
	NUMERIC	KERNPAGENUM			=0		;PAGE NUMBER FOR KERN BARCODE ROUTINE
	NUMERIC	IMPCOUNTER			=0		;IMPRESSION COUNTER
	NUMERIC	TRANSFLAG			=0		;FLAG TO TELL ME IF ALL THE TRANSACTIONS HAVE BEEN PRINTED
	NUMERIC	nTOTALAMOUNT		=0		;COUNTER FOR TOTAL AMOUNT PAYABLE
	NUMERIC	nGSTTOTAL			=0		;COUNTER FOR TOTAL AMOUNT OF GST
	NUMERIC	P1MAXYPOS			=0		;MAXIMUM LENGTH FOR PAGE 1 TRANSACTIONS
	;COLUMN POSITIONS
	NUMERIC	DATECOLUMN			=0.65	;LEFT JUSTIFICATION FOR DATE COLUMN
	NUMERIC	REFCOLUMN			=1.45	;LEFT JUSTIFICATION FOR REF (VOUCHER) COLUMN
	NUMERIC	DESCCOLUMN			=2.60	;LEFT JUSTIFICATION FOR DESCRIPTION COLUMN
	NUMERIC	QTYCOLUMN			=5.40	;LEFT JUSTIFICATION FOR QUANTITY COLUMN HEADER
	NUMERIC	QTYRJUST			=5.65	;RIGHT JUSTIFICATION FOR QUANTITY COLUMN VALUES
	NUMERIC	RATECOLUMN			=6.05	;LEFT JUSTIFICATION FOR RATE COLUMN HEADER
	NUMERIC	RATERJUST			=6.36	;RIGHT JUSTIFICATION FOR RATE COLUMN VALUES
	NUMERIC	GSTCOLUMN			=6.70	;LEFT JUSTIFICATION FOR GST COLUMN HEADER	
	NUMERIC	GSTRJUST			=6.98	;RIGHT JUSTIFICATION FOR GST COLUMN VALUES
	NUMERIC	TOTALCOLUMN			=7.85	;RIGHT JUSTIFICATION FOR TOTAL COLUMN HEADER & VALUES

;FONTS	- MISC
	ALPHA	DPIDFONT			L99="D#<N=FSBCA><P=18><C=ANSI>"
	ALPHA	OCR10				L99="D#<N=OCRB LT><P=10><C=ANSI><OUTLINE>"
;FONTS - UNIVERS 45 LIGHT
	ALPHA	UNIVERS5N			L99="D#<N=Univers 45 Light><P=5><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS7N			L99="D#<N=Univers 45 Light><P=7><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS8N			L99="D#<N=Univers 45 Light><P=8><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS9N			L99="D#<N=Univers 45 Light><P=9><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS10N			L99="D#<N=Univers 45 Light><P=10><C=ANSI><OUTLINE>"

;alpha	UNIVERS10N2			L99="D#<N=Univers-Light-Light><P=10><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS10N2			L99="D#<N=Univers LT 45 Light><P=10><C=ANSI><OUTLINE>"

	ALPHA	UNIVERS11N			L99="D#<N=Univers 45 Light><P=11><C=ANSI><OUTLINE>"
;FONTS - UNIVERS ROMAN 55 (SEMIBOLD)
	ALPHA	UNIVERS8SB			L99="D#<N=Univers LT 55><P=8><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS85SB			L99="D#<N=Univers LT 55><P=8.5><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS9SB			L99="D#<N=Univers LT 55><P=9><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS10SB			L99="D#<N=Univers LT 55><P=10><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS11SB			L99="D#<N=Univers LT 55><P=11><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS12SB			L99="D#<N=Univers LT 55><P=12><C=ANSI><OUTLINE>"
;FONTS - UNIVERS BOLD
	ALPHA	UNIVERS9B			L99="D#<N=Univers 65><S=BOLD><P=9><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS10B			L99="D#<N=Univers 65><S=BOLD><P=10><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS11B			L99="D#<N=Univers 65><S=BOLD><P=11><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS12B			L99="D#<N=Univers 65><S=BOLD><P=12><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS14B			L99="D#<N=Univers 65><S=BOLD><P=14><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS20B			L99="D#<N=Univers 65><S=BOLD><P=20><C=ANSI><OUTLINE>"
;FONTS - UNIVERS BOLD ITALIC
	ALPHA	UNIVERS11BI			L99="D#<N=Univers><S=BOLD ITALIC><P=11><C=ANSI><OUTLINE>"
	ALPHA	UNIVERS12BI			L99="D#<N=Univers><S=BOLD ITALIC><P=12><C=ANSI><OUTLINE>"

;###############################################################################
INITIALIZE 

	SETTABLE "0","ASCII"
	MODEL "HD,COLOR"
;	PROMPT "TESTING?"
;		TESTING EQ $Result

START
IF ($First EQ 1)
{
	CONVERT SORTORDER,SORTORDER,'U'
	IF (SORTORDER EQ "SORTORDER" OR SORTORDER EQ "SORT ORDER" OR SORTORDER EQ "SORT_ORDER")
		IGNORE CONTINUE
	GOSUB JOBSETUP()

	;GET THE ISSUE DATE
	CONVERT ISSUEDATE,$Date,'DFEZ '

	;SAVE THE FIRST NAME FOR THE PRINTSHEET
	CONVERT FIRSTREC,NAMELINE

}
	IF (SORTORDER[0]L3 EQ "EOF")
		IGNORE 
	
;###############################################################################
	;COUNT UP TOTAL NUMBER OF LINES PER MAILPACK
	FILEINDEX EQ $RecordPosition
	TRANSFLAG EQ 0
	LINECOUNTER EQ 0
	nTOTALAMOUNT EQ 0
	nGSTTOTAL EQ 0
	STOREPAGECOUNTER EQ 1
	;SAVE FOR LATER
	CONVERT SAVEDPAYMETHOD,METHODOFPAYMENT,'U'
	CONVERT SAVEDNAME,NAMELINE
	CONVERT SAVEDCUSTNUM,CUSTOMERACCOUNT
	CONVERT ENDDATE,CLOSE_DATE
	CONVERT SAVED_DUEDATE,DUE_DATE
	CONVERT SAVEDBPAYREF,BPAYNUMBER

	;SELECT THE BPAY BILLER CODE
	GOSUB SELECT_BPAY_BILLER_CODE()
	IF (BPAY_BILLER_CODE EQ "")
		PROMPT "BLANK BPAY CODE"

	;COUNT UP TOTALS FOR RECORD
	CONVERT S_SORTORDER,SORTORDER
	WHILE (SORTORDER EQ S_SORTORDER)
	{
		INC LINECOUNTER
		IF (LINECOUNTER > 1)
		{
			;CALCULATING THE TOTAL AMOUNT HERE
			CONVERT TEMPNUM,TRANSTOTAL	
			nTOTALAMOUNT += TEMPNUM
			
			;CALCULATING THE TOTAL GST HERE
			CONVERT TEMPNUM,TRANSGST
			nGSTTOTAL += TEMPNUM
		}
		IGNORE CONTINUE
	}

	REWIND FILEINDEX
;###############################################################################
;	PRINT THE FRONT PAGE
;###############################################################################

	;RESET IMPRESSION COUNTER
	IMPCOUNTER EQ 1 	
	INC TOTALRECORDS
	PAYSLIPTYPE EQ ""

	;SAVE THE LAST NAME FOR THE PRINTSHEET
	CONVERT LASTREC,NAMELINE

	;PRINT THE FRONT PAGE GRAPHIC
	SWITCH (SAVEDPAYMETHOD){
		CASE("CC")
			IF (nTOTALAMOUNT <= 0)
				SETXY 0.00,0.00,"BLUECARE_PAYMENT_SLIP_BLANK.eps"
			ELSE
			SETXY 0.00,0.00,"BLUECARE_BG_FRONT_CC.eps"
		BREAK
		CASE("DD")
			IF (nTOTALAMOUNT <= 0)
				SETXY 0.00,0.00,"BLUECARE_PAYMENT_SLIP_BLANK.eps"
			ELSE
				SETXY 0.00,0.00,"BLUECARE_BG_FRONT_DD.eps"			
		BREAK
		DEFAULT
			IF (nTOTALAMOUNT <= 0)
				SETXY 0.00,0.00,"BLUECARE_PAYMENT_SLIP_BLANK.eps"
			ELSE
			{
				PAYSLIPTYPE EQ "STD"
				SETXY 0.00,0.00,"BLUECARE_BG_FRONT_V3.eps"
			}
		BREAK
		}
	
;	;PRINT THE WINDOW FACE FOR TESTING
;	SETXY 1.20,1.70
;	DRAWBOX 1.50,3.70,0.01,0

	;PRINT THE SEQUENCE NUMBER
	GOSUB SEQUENCE_NUMBER()

	;PRINT THE PAGE HEADER DETAILS
	GOSUB PRINT_PAGE_HEADER()

	;PRINT THE ADDRESS BLOCK
	GOSUB PRINT_ADDRESS_BLOCK()

	;PRINT THE TABLE HEADING
	GOSUB PRINT_TABLE_HEADER(1)	

	IGNORE CONTINUE

	;PRINT THE PAYMENT SLIP DETAILS
	SWITCH(SAVEDPAYMETHOD){
		CASE("CC")			;CREDIT CARD
			IF (nTOTALAMOUNT <= 0)
				GOSUB ZERO_BALANCE_PAYMENT_SLIP()
			ELSE
				GOSUB CC_PAYMENT_SLIP()
			;SET THE MAXIMUM LENGTH OF THE TRANSACTION LINES
			P1MAXYPOS EQ 9.50
		BREAK
		CASE("DD")			;DIRECT DEBIT
			IF (nTOTALAMOUNT <= 0)
				GOSUB ZERO_BALANCE_PAYMENT_SLIP()
			ELSE
				GOSUB DD_PAYMENT_SLIP()
			;SET THE MAXIMUM LENGTH OF THE TRANSACTION LINES
			P1MAXYPOS EQ 9.50
		BREAK
		DEFAULT
			IF (nTOTALAMOUNT > 0)
			{
				GOSUB PRINT_PAYMENT_SLIP(1)
				;SET THE MAXIMUM LENGTH OF THE TRANSACTION LINES
				P1MAXYPOS EQ 8.10
			}
			ELSE
			{	
				GOSUB ZERO_BALANCE_PAYMENT_SLIP()
				P1MAXYPOS EQ 9.50
			}
				
		BREAK
		}

	;PRINT THE TRANSACTION LINES
	GOSUB PRINT_TRANSACTIONS()

	;PRINT THE TOTAL
	IF (nTOTALAMOUNT <= 0)
		TEMPALPHA500 EQ "Statement Balance"
	ELSE
		TEMPALPHA500 EQ "Total Amount Payable"
	GOSUB JUST(0.00,TEXTYPOS,UNIVERS12B,"R",RATERJUST,TEMPALPHA500)
	CONVERT TOTALAMOUNT,nTOTALAMOUNT,'$L2,'
	GOSUB JUST(0.00,TEXTYPOS,UNIVERS12B,"R",TOTALCOLUMN,TOTALAMOUNT)

	;END OF PAGE HANDLING
	GOSUB END_OF_PAGE_HANDLING(STOREPAGECOUNTER)

;###############################################################################
;	PRINT THE BACK PAGE
;###############################################################################

	IF (STOREPAGECOUNTER EQ 2)	;ANY OTHER VALUE AND THE BACK PAGE HAS ALREADY BEEN PRINTED AND STORED!
	{
		;PRINT THE PAYMENT SLIP DETAILS
		IF (SAVEDPAYMETHOD NE "DD" AND SAVEDPAYMETHOD NE "CC" AND NTOTALAMOUNT >0)
		{
			INC IMPCOUNTER
			IF (nTOTALAMOUNT > 0)
				GOSUB PRINT_PAYMENT_SLIP(2)

			;PRINT THE SEQUENCE NUMBER
			GOSUB SEQUENCE_NUMBER()
		}
		ELSE	
		{
			SETXY 0.00,0.00," ",'A'	

			;FOR TESTING
			IF (TESTING)
			{
				TEMPALPHA500 EQ "PAGE INTENTIONALLY LEFT BLANK\\(TESTING ONLY)"
				GOSUB JUST(0.00,$PageHeight/2,UNIVERS14B,"C",$PageWidth,TEMPALPHA500)
			}
		}

		;END OF PAGE HANDLING
		GOSUB END_OF_PAGE_HANDLING(STOREPAGECOUNTER)
	}

;###############################################################################
	;RESTORE AND PRINT STORED PAGES
	LOOPCOUNTER EQ 1
	PAGENUM = 0
	KERNPAGENUM EQ 0

	;CALCULATE TOTAL NUMBER OF PAGES FOR THE KERN BARCODE
	KERNTOTALPAGES EQ IMPCOUNTER
	IF (KERNTOTALPAGES > 1)
	{
		IF (KERNTOTALPAGES%2 EQ 1)
			INC KERNTOTALPAGES
		KERNTOTALPAGES /= 2
	}

	WHILE (LOOPCOUNTER < STOREPAGECOUNTER-1)
	{
		RESTOREPAGE LOOPCOUNTER
		INC TOTALIMPRESSIONS

		;PRINT THE PAGE NUMBER
		INC PAGENUM
		GOSUB PRINT_PAGE_NUMBER(PAGENUM,IMPCOUNTER)

		;PRINT THE KERN BARCODE
		IF (PAGENUM %2 EQ 1)
		{
			INC KERNPAGENUM
			;PRINT THE KERN BARCODE
			GOSUB PRINT_KERNBARCODE(KERNPAGENUM,KERNTOTALPAGES)
		}

		INC LOOPCOUNTER
		REPEAT CONTINUE
	}

	RESTOREPAGE LOOPCOUNTER
	INC TOTALIMPRESSIONS

	;PRINT THE PAGE NUMBER
	IF (IMPCOUNTER > 1)
	{
		INC PAGENUM
		GOSUB PRINT_PAGE_NUMBER(PAGENUM,IMPCOUNTER)

		;PRINT THE KERN BARCODE
		IF (PAGENUM %2 EQ 1)
		{
			INC KERNPAGENUM
			;PRINT THE KERN BARCODE
			GOSUB PRINT_KERNBARCODE(KERNPAGENUM,KERNTOTALPAGES)
		}

		IF (IMPCOUNTER %2 EQ 1)
		{
			REPEAT CONTINUE

			SETXY 0.00,0.00," ",'A'
			INC TOTALIMPRESSIONS

			;FOR TESTING
			IF (TESTING)
			{
				TEMPALPHA500 EQ "PAGE INTENTIONALLY LEFT BLANK\\(TESTING ONLY)"
				GOSUB JUST(0.00,$PageHeight/2,UNIVERS14B,"C",$PageWidth,TEMPALPHA500)
			}
		}
	}

IF (SORTORDER[0]L3 NE "EOF")
	REPEAT
;###############################################################################
;AGEEND
GAMEOVER:


	EOFENTRY TEST
	CONVERT aTOTALIMPRESSIONS,TOTALIMPRESSIONS,'L'
	CONVERT aTOTALRECORDS,TOTALRECORDS,'L'
	CONVERT aBRECOUNT,BRECOUNT,'L'
	REPLACE PRINTREPLINE,"<",">",'F'
	WRITE PRINTREP,PRINTREPLINE L=CALCULATE

	CONVERT aHOPPER1COUNT,HOPPER1COUNT
	TEMPALPHA500 EQ "HOPPER 1 COUNT = <aHOPPER1COUNT>\nBRE HOPPER 3 COUNT = <aBRECOUNT>"
	REPLACE TEMPALPHA500,"<",">",'F'
	PROMPT TEMPALPHA500 L=CALCULATE

;	TEMPALPHA500 EQ "TOTAL NUMBER OF RECORDS = <aTOTALRECORDS>\nTOTAL NUMBER OF IMPRESSIONS = <aTOTALIMPRESSIONS>\nTOTAL NUMBER OF BRE'S = <aBRECOUNT>"
;	REPLACE TEMPALPHA500,"<",">",'F'
;	PROMPT TEMPALPHA500 L=CALCULATE
	


TEST:
EXIT
;###############################################################################
SUBROUTINE END_OF_PAGE_HANDLING(PAGENUM)
NUMERIC	PAGENUM
START
	
	;INC IMPCOUNTER
	STOREPAGE STOREPAGECOUNTER
	$PageSize EQ 0
	INC STOREPAGECOUNTER

RETURN
;###############################################################################
SUBROUTINE JOBSETUP()
START
	EOFENTRY GameOver
	LITREC "NEW_WORDWRAP=ON"
	CONVERT FILENAME,$FileID,'U'
	REPLACE FILENAME,".DAT",""
	REPLACE FILENAME,".TXT",""
	CONVERT JOBNUMBER,FILENAME[0]L6
	LOCATE FILENAME,"PART",TEMPNUM
	IF (TEMPNUM NE -1)
		CONVERT PART,FILENAME[TEMPNUM+5]L1,'U'
	SPOOLNAME EQ "..\\SPOOL\\"
	APPEND SPOOLNAME,FILENAME
	APPEND SPOOLNAME,".PS"
	DELETE SPOOLNAME
	SPOOL SPOOLNAME,0

	;SET UP THE PRINT SPEC FILE
	PRINTREP EQ "<JOBNUMBER>_BC_INVOICE_PRINTSPEC.TXT"
	REPLACE PRINTREP,"<",">",'F'
	;DELETE PRINTREP FILE IF ASKED
	PROMPT "DELETE PRINTREP?"
		IF($Result EQ 1)
		{
			DELFLAG EQ 1
			DELETE PRINTREP
		}
	
	WRITE PRINTREP,"",'I'
	CONVERT SPOOLFILE,SPOOLNAME
	REPLACE SPOOLFILE,"..\\SPOOL\\",""

	;SET UP THE KIC FILE
	LOCATE SPOOLFILE,"_FS_",TEMPNUM ;FRASER SHORES
	IF ($Result NE -1)
	{	
		KICFILE EQ "..\\SPOOL\\"
		APPEND KICFILE,JOBNUMBER[2]L4
		APPEND KICFILE,PART
		APPEND KICFILE,"I"
		APPEND KICFILE,".KIC"

		IF (DELFLAG EQ 1)
		{
			DELETE KICFILE
			WRITE KICFILE,"",'I'
		}
	}
		

RETURN
;################################################################################
SUBROUTINE SEQUENCE_NUMBER()
START

	;BRE FOR CERTAIN TYPES ONLY
	IF (SAVEDPAYMETHOD EQ "")
	{
		TEMPALPHA500 EQ "<JOBNUMBER>-0<S_SORTORDER>-BRE"
	}
	ELSE
	{
		SWITCH(SAVEDPAYMETHOD){
			CASE("CASH")
			CASE("CH")
			CASE("CHQ")
			CASE("MO")
				TEMPALPHA500 EQ "<JOBNUMBER>-0<S_SORTORDER>-BRE"
			BREAK
			DEFAULT
				TEMPALPHA500 EQ "<JOBNUMBER>-0<S_SORTORDER>"
			BREAK
			}
	}		

;	IF (PAYSLIPTYPE EQ "STD")
;		APPEND TEMPALPHA500,":1"

	ORIENTTEXT 270
	GOSUB JUST(3.00,0.25,UNIVERS5N,"L",6.00,TEMPALPHA500)
	ORIENTTEXT 0

RETURN
;################################################################################
SUBROUTINE PRINT_PAGE_NUMBER(PAGE,TOTALPAGES)
NUMERIC	PAGE
NUMERIC	TOTALPAGES
START
	CONVERT aPAGENUMBER,PAGE,'L'
	CONVERT aTOTALPAGES,TOTALPAGES,'L'
	TEMPALPHA500 EQ "Page <aPAGENUMBER> of <aTOTALPAGES>"
	IF (LOOPCOUNTER EQ 1)
		GOSUB JUST(0.00,3.50,UNIVERS8N,"R",TOTALCOLUMN,TEMPALPHA500)
	ELSE
		GOSUB JUST(0.00,0.45,UNIVERS8N,"R",TOTALCOLUMN,TEMPALPHA500)
RETURN
;################################################################################
SUBROUTINE PRINT_TRANSACTIONS()
START

	;SET THE STARTING YPOSITION FOR THE DETAIL LINES
	TEXTYPOS EQ 3.95

	WHILE (SORTORDER EQ S_SORTORDER)
	{
		IF (TEXTYPOS >= P1MAXYPOS)
		{
			;END OF PAGE HANDLING
			GOSUB END_OF_PAGE_HANDLING(STOREPAGECOUNTER) 
			;PRINT THE PAYMENT SLIP DETAILS

			IF (STOREPAGECOUNTER EQ 2)
			{
				
				IF (SAVEDPAYMETHOD NE "DD" AND SAVEDPAYMETHOD NE "CC")
				{
					P1MAXYPOS EQ 8.70
					GOSUB PRINT_PAYMENT_SLIP(2)
				}
				ELSE
				{
					P1MAXYPOS EQ 11.20
				}
			}
			ELSE
				P1MAXYPOS EQ 11.20
			;PRINT THE TABLE HEADER
			GOSUB PRINT_TABLE_HEADER(2)
			TEXTYPOS EQ 0.90
			INC IMPCOUNTER
			;PRINT THE SEQUENCE NUMBER
			GOSUB SEQUENCE_NUMBER()

		}	

		;PRINT THE TRANSACTION DATE
		TEMPALPHA500 EQ TRANSDATE
		GOSUB JUST(DATECOLUMN,TEXTYPOS,UNIVERS10N,"L",6.00,TEMPALPHA500)
		;PRINT THE REFERENCE (VOUCHER)
		TEMPALPHA500 EQ VOUCHER
		GOSUB JUST(REFCOLUMN,TEXTYPOS,UNIVERS10N,"L",6.00,TEMPALPHA500)
		;PRINT THE TRANSACTION QUANTITY
		IF (TRANSQTY NE "0" AND TRANSQTY NE "")
		{
			CONVERT TEMPNUM,TRANSQTY
			CONVERT TEMPALPHA500,TEMPNUM,'L2'
			GOSUB JUST(0.00,TEXTYPOS,UNIVERS10N,"R",QTYRJUST,TEMPALPHA500)
		}
		;PRINT THE TRANSACTION RATE
		;TEMPALPHA500 EQ TRANSRATE
		CONVERT TEMPNUM,TRANSRATE
		CONVERT TEMPALPHA500,TEMPNUM,'$L2'
		GOSUB JUST(0.00,TEXTYPOS,UNIVERS10N,"R",RATERJUST,TEMPALPHA500)
		;PRINT THE TRANSACTION GST
		CONVERT TEMPNUM,TRANSGST
;		nGSTTOTAL += TEMPNUM
		CONVERT TEMPALPHA500,TEMPNUM,'$L2'
		GOSUB JUST(0.00,TEXTYPOS,UNIVERS10N,"R",GSTRJUST,TEMPALPHA500)
		;PRINT THE TRANSACTION TOTAL
		CONVERT TEMPNUM,TRANSTOTAL
		CONVERT TEMPALPHA500,TEMPNUM,'$L2'
;		TEMPALPHA500 EQ "$<TRANSTOTAL>"
		GOSUB JUST(0.00,TEXTYPOS,UNIVERS10N,"R",TOTALCOLUMN,TEMPALPHA500)
		;PRINT THE TRANSACTION DESCRIPTION
		TEMPALPHA500 EQ TRANSTEXT
		LENGTH TEMPALPHA500,TEMPNUM,UNIVERS10N
		IF (TEMPNUM > 2.70)
			GOSUB JUST(DESCCOLUMN,TEXTYPOS,UNIVERS10N,"L",2.60,TEMPALPHA500)
		ELSE
			GOSUB JUST(DESCCOLUMN,TEXTYPOS,UNIVERS10N,"L",2.70,TEMPALPHA500)

		TEXTYPOS=$YPosition + 0.10

		IGNORE CONTINUE
	}
	;FLAG TO SAY ALL TRANSACTIONS HAVE BEEN PRINTED
	TRANSFLAG EQ 1

RETURN
;################################################################################
SUBROUTINE ZERO_BALANCE_PAYMENT_SLIP()
START

	;PRINT THE GENERIC ZERO BALANCE PAYMENT MESSAGE
	TEMPALPHA500 EQ "Please note that your account is in credit and no payment action is required.\\\\If you have requested a monthly Direct Debit or Credit Card payment, none will be processed this month."
	GOSUB JUST(0.50,10.40,UNIVERS14B,"C",$PageWidth-1.00,TEMPALPHA500)	

RETURN
;################################################################################
SUBROUTINE CC_PAYMENT_SLIP()
START

	;SELECT MONTH OF ISSUE DATE
	CONVERT MONTHOFPAYMENT,SAVED_DUEDATE,'DFEZS '
	WORDS MONTHOFPAYMENT,TEMPALPHA500 L50,TEMPNUM
	CONVERT DDDATE2,TEMPALPHA500[0]L50
	APPEND DDDATE2,"of"," "
	CONVERT TEMPALPHA50,TEMPALPHA500[50]L50
	APPEND DDDATE2,TEMPALPHA50," "

	;PRINT THE TEXT
	GOSUB WRAP(0.50,10.45,UNIVERS11B,"C",$PageWidth-1.00,4)

RETURN
;################################################################################
SUBROUTINE DD_PAYMENT_SLIP()
START

	;SELECT MONTH OF ISSUE DATE
	CONVERT MONTHOFPAYMENT,SAVED_DUEDATE,'DFEZS '
	WORDS MONTHOFPAYMENT,TEMPALPHA500 L50,TEMPNUM
	CONVERT DDDATE2,TEMPALPHA500[0]L50
	APPEND DDDATE2,"of"," "
	CONVERT TEMPALPHA50,TEMPALPHA500[50]L50
	APPEND DDDATE2,TEMPALPHA50," "

	;PRINT THE TEXT
	GOSUB WRAP(0.50,10.45,UNIVERS11B,"C",$PageWidth-1.00,3)

RETURN
;################################################################################
SUBROUTINE PRINT_PAYMENT_SLIP(INPUT)

NUMERIC	INPUT

START

	IF (INPUT EQ 1)			;PRINT THE FRONT OF THE PAYMENT SLIP
	{
		;PRINT THE BOX
		SETXY 0.65,8.15;7.70+0.40+0.05
		DRAWBOX 0.65,($PageWidth-(0.65*2)),0.01,0

		;PRINT THE PAYMENT MESSAGES
		;SELECT MONTH OF ISSUE DATE
		CONVERT MONTHOFPAYMENT,SAVED_DUEDATE,'DFEZS '
		WORDS MONTHOFPAYMENT,TEMPALPHA500 L50,TEMPNUM
		CONVERT DDDATE,TEMPALPHA500[0]L50
		CONVERT TEMPALPHA50,TEMPALPHA500[50]L50
		APPEND DDDATE,TEMPALPHA50," "
		;DO ANOTHER VERSION OF THE ISSUE DATE MONTH
		CONVERT DDDATE2,TEMPALPHA500[0]L50
		APPEND DDDATE2,"of"," "
		CONVERT TEMPALPHA50,TEMPALPHA500[50]L50
		APPEND DDDATE2,TEMPALPHA50," "

		CONVERT SAVEDPAYMETHOD,SAVEDPAYMETHOD,'U'
		SWITCH(SAVEDPAYMETHOD){
			CASE("CENTRELINK")
				IF (nTOTALAMOUNT <= 0)
				{
					TEMPALPHA500 EQ "!S=0.18!Please note that your account is in credit and no payment action is required.\\If you have requested a monthly Direct Debit or Credit Card payment, none will be processed this month."
					GOSUB JUST(1.00,8.34,UNIVERS10SB,"C",$PageWidth-2.00,TEMPALPHA500)
				}
				ELSE
				{
					TEMPALPHA500 EQ "!S=0.22!You’ve nominated Centrelink to make your payments.\\No payment action is required."
					GOSUB JUST(1.00,8.42,UNIVERS12SB,"C",$PageWidth-2.00,TEMPALPHA500)
				}
			BREAK
			DEFAULT

				IF (nTOTALAMOUNT <= 0)
				{
					TEMPALPHA500 EQ "!S=0.18!Please note that your account is in credit and no payment action is required.\\If you have requested a monthly Direct Debit or Credit Card payment, none will be processed this month."
					GOSUB JUST(1.00,8.34,UNIVERS10SB,"C",$PageWidth-2.00,TEMPALPHA500)
				}
				ELSE
				{
					TEMPALPHA500 EQ "!S=0.22!The Total Amount Payable of <TOTALAMOUNT> is due for payment on the <DDDATE2>.\\Please arrange for payment using one of the below listed methods prior to this date."
					GOSUB JUST(1.00,8.42,UNIVERS11SB,"C",$PageWidth-2.00,TEMPALPHA500)
				}
			BREAK
			}

			;PRINT THE BPAY REFERENCE NUMBER
			GOSUB PRINT_BPAY_REF()
	}
	ELSE
	{
		;PRINT THE BACK OF THE PAYMENT SLIP

		;PRINT THE GRAPHIC
		SETXY 0.00,0.00,BACK_GRAPHIC

		;PRINT THE CUSTOMER DETAILS
		CONVERT TEMPDATE,SAVED_DUEDATE,'E/'
		GOSUB WRAP(4.70,9.40,UNIVERS10SB,"L",6.00,2)
	
		;PRINT THE OCR LINE
		GOSUB PRINT_OCR_LINE()

		;PRINT THE BILLPAY CODE
		TEMPALPHA500 EQ "4043"
		GOSUB JUST(1.86+0.10,10.765,UNIVERS9N,"L",6.00,TEMPALPHA500)

		;PRINT THE BILLPAY REFERENCE
		CONVERT TEMPALPHA100,SAVEDCUSTNUM
		REPLACE TEMPALPHA100,"CUS",""
		GOSUB CALCULATE_MOD_10_CHECK_DIGIT(TEMPALPHA100)
		CONVERT TEMPALPHA20,SAVEDCUSTNUM
		REPLACE TEMPALPHA20,"CUS",""
		TEMPALPHA500 EQ "<TEMPALPHA20><MOD10CHECKDIGIT>"
		GOSUB JUST(1.32+0.10,10.97,UNIVERS9N,"L",6.00,TEMPALPHA500)
;bb
		;PRINT THE PAYMENT BARCODE
		GOSUB PRINT_PAYMENT_BARCODE()
	}
RETURN
;################################################################################
SUBROUTINE PRINT_BPAY_REF()
START
;bb
	;PRINT THE BILLER CODE
	;TEMPALPHA500 EQ "279281"
	GOSUB JUST(4.03+0.10,10.46,UNIVERS9N,"L",6.00,BPAY_BILLER_CODE)		

	;PRINT THE BPAY REFERENCE NUMBER
	CONVERT TEMPALPHA500,SAVEDBPAYREF[0]L4
	APPEND TEMPALPHA500,SAVEDBPAYREF[4]L4," "
	APPEND TEMPALPHA500,SAVEDBPAYREF[8]L4," "
	GOSUB JUST(3.51+0.10,10.63,UNIVERS9N,"L",6.00,TEMPALPHA500)
	
	;BPAY REF NUM IN CREDIT CARD CODE SECTION
	GOSUB JUST(0.52+0.10,11.155,UNIVERS9N,"L",6.00,TEMPALPHA500)
	;GOSUB JUST(0.73+0.10,11.315,UNIVERS9N,"L",6.00,TEMPALPHA500)

	;CC CODE
	TEMPALPHA500 EQ "100603076"
	GOSUB JUST(1.38,10.975,UNIVERS9N,"C",0.83,TEMPALPHA500)
	;GOSUB JUST(1.54,11.10,UNIVERS9N,"C",0.83,TEMPALPHA500)
	

RETURN
;################################################################################
SUBROUTINE PRINT_PAYMENT_BARCODE()
START
ALPHA	TEMPCUSTNUM		L6
ALPHA	TEMPAMOUNT		L9
;TEMPPAYBARCODE

	;PRINT THE PAYMENT BARCODE
	;FORMAT THE CUSTOMER NUMBER
	CONVERT TEMPALPHA100,SAVEDCUSTNUM
	REPLACE TEMPALPHA100,"CUS",""
	CONVERT TEMPNUM,TEMPALPHA100
	CONVERT TEMPCUSTNUM,TEMPNUM,'L0'

	;CALCULATE THE MOD 10 CHECK DIGIT
	CONVERT TEMPALPHA100,SAVEDCUSTNUM
	GOSUB CALCULATE_MOD_10_CHECK_DIGIT(TEMPALPHA100)

	;GET THE TOTAL AMOUNT FOR THE BARCODE
	CONVERT TEMPALPHA100,TOTALAMOUNT
	REPLACE TEMPALPHA100,"$",""
	REPLACE TEMPALPHA100,",",""
	REPLACE TEMPALPHA100,".",""
	CONVERT TEMPNUM,TEMPALPHA100,
	CONVERT TEMPAMOUNT,TEMPNUM,'L0'

	;BUILD THE BARCODE STRING
	TEMPALPHA100 EQ "*4043CUS<TEMPCUSTNUM><MOD10CHECKDIGIT><TEMPAMOUNT>0"
	REPLACE TEMPALPHA100,"<",">",'F'
	CONVERT TEMPPAYBARCODE,TEMPALPHA100

	;PRINT THE BARCODE
	SETMARGIN 4.70
	SETXY $Margin,10.55+0.40
	BARCODE "128",0.28,0.009,0,TEMPPAYBARCODE,,'C'

	;PRINT THE KEYLINE
	TEMPALPHA500 EQ "*4043 <SAVEDCUSTNUM><MOD10CHECKDIGIT>"
	GOSUB JUST(4.70,$YPosition+0.15,UNIVERS7N,"C",2.76,TEMPALPHA500)
RETURN
;################################################################################
SUBROUTINE PRINT_OCR_LINE()

START
	;PAD OUT CUSTOMER NUMBER
	CONVERT TEMPALPHA500,SAVEDCUSTNUM
	REPLACE TEMPALPHA500,"CUS",""
	CONVERT TEMPALPHA26,TEMPALPHA500,'R0'

	;CONVERT AND PAD OUT AMOUNT
	CONVERT TEMPALPHA500,TOTALAMOUNT
	REPLACE TEMPALPHA500,"$",""
	REPLACE TEMPALPHA500,".",""
	REPLACE TEMPALPHA500,",",""
	CONVERT TEMPALPHA10,TEMPALPHA500,'R0'

	;CALCULATE THE CHECK DIGIT
	GOSUB CALCULATE_MOD97_CHECK_DIGIT()

	;BUILD OCRLINE
	OCRLINE EQ "<TEMPALPHA26>+030+<TEMPALPHA10>+<BILLERCODE>+<MOD97CHECKDIGIT>"

	;PRINT OCRLINE
	GOSUB JUST(0.00,11.537,OCR10,"R",7.70,OCRLINE)
RETURN
;################################################################################
SUBROUTINE CALCULATE_MOD_10_CHECK_DIGIT(INPUT)
ALPHA	INPUT	L100
START
	NUMERIC	MAXLENGTH
	NUMERIC	COUNTER
	NUMERIC	MULTIPLIER
	NUMERIC	TOTAL
	NUMERIC	RESULT
	NUMERIC	NUM1
	NUMERIC NUM2
	NUMERIC	LIMIT
	NUMERIC	NCHECK
	ALPHA	TEMPALPHA2	L2

	CONVERT TEMPALPHA100,INPUT
	LENGTH TEMPALPHA100,MAXLENGTH
	CONVERT LIMIT,MAXLENGTH
	MAXLENGTH -= 1
	MULTIPLIER EQ 2
	COUNTER EQ 0
	TOTAL EQ 0

	WHILE (COUNTER < LIMIT)
	{
		CONVERT TEMPNUM,TEMPALPHA100[MAXLENGTH]L1
		RESULT = TEMPNUM*MULTIPLIER

		IF(RESULT > 9)
		{
			CONVERT TEMPALPHA2,RESULT
			CONVERT NUM1,TEMPALPHA2[0]L1
			CONVERT NUM2,TEMPALPHA2[1]L1
			RESULT = NUM1+NUM2
		}
		TOTAL += RESULT
		MAXLENGTH -=1
		INC COUNTER
		IF (MULTIPLIER EQ 2)
			MULTIPLIER EQ 1
		ELSE
			MULTIPLIER EQ 2
	}
	
	TEMPNUM EQ TOTAL%10
	NCHECK EQ 10-TEMPNUM
	IF (NCHECK EQ 10)
		NCHECK EQ 0
	CONVERT MOD10CHECKDIGIT,NCHECK,'L'

RETURN
;################################################################################
SUBROUTINE CALCULATE_MOD97_CHECK_DIGIT()
START
ALPHA	TEMPOCR		L100
NUMERIC	MAXLENGTH
NUMERIC	MULTIPLIER
NUMERIC	TOTAL
NUMERIC	COUNTER
NUMERIC	LIMIT
NUMERIC	NCHECK

	TEMPOCR EQ "<TEMPALPHA26>030<TEMPALPHA10><BILLERCODE>"
	REPLACE TEMPOCR,"<",">",'F'

	LENGTH TEMPOCR,MAXLENGTH
	CONVERT LIMIT,MAXLENGTH
	MAXLENGTH -= 1
	MULTIPLIER EQ 1
	COUNTER EQ 1
	TOTAL EQ 0

	WHILE (COUNTER < LIMIT)
	{
		CONVERT TEMPNUM,TEMPOCR[MAXLENGTH]L1
		TOTAL += (TEMPNUM*MULTIPLIER)
		INC MULTIPLIER
		INC COUNTER
		MAXLENGTH -= 1
	}

	TEMPNUM EQ TOTAL%97
	NCHECK EQ 97-TEMPNUM
	CONVERT MOD97CHECKDIGIT,NCHECK,'0'
RETURN
;################################################################################
SUBROUTINE PRINT_TABLE_HEADER(INPUT)
NUMERIC	INPUT
START

	;FRONT PAGE TABLE HEADINGS
	IF (INPUT EQ 1)
	{
		;PRINT THE RE: LINE ABOVE THE ACCOUNT SUMMARY HEADER
		TEMPALPHA500 EQ "RE: <NAMELINE>"
		GOSUB JUST(0.65,3.25,UNIVERS8N,"L",6.00,TEMPALPHA500)

		;PRINT THE ACCOUNT SUMMARY HEADER
		TEMPALPHA500 EQ "Account Summary"
		GOSUB JUST(0.65,3.48,UNIVERS14B,"L",6.00,TEMPALPHA500)
		GOSUB DRAWALINE(0.65,3.55,7.20,0.01)
		GOSUB DRAWALINE(0.65,3.75,7.20,0.01)
		;PRINT THE TABLE HEADERS
		TEMPALPHA500 EQ "Date"
		GOSUB JUST(DATECOLUMN,3.71,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Reference"
		GOSUB JUST(REFCOLUMN,3.71,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Description"
		GOSUB JUST(DESCCOLUMN,3.71,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Qty"
		GOSUB JUST(QTYCOLUMN,3.71,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Rate"
		GOSUB JUST(RATECOLUMN,3.71,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "GST"
		GOSUB JUST(GSTCOLUMN,3.71,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Total"
		GOSUB JUST(0.00,3.71,UNIVERS11SB,"R"TOTALCOLUMN,TEMPALPHA500)
	}
	ELSE	;BACK PAGE TABLE HEADINGS
	{
		GOSUB DRAWALINE(0.65,3.55-3.05,7.20,0.01)
		GOSUB DRAWALINE(0.65,3.75-3.05,7.20,0.01)
		;PRINT THE TABLE HEADERS
		TEMPALPHA500 EQ "Date"
		GOSUB JUST(DATECOLUMN,3.71-3.05,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Reference"
		GOSUB JUST(REFCOLUMN,3.71-3.05,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Description"
		GOSUB JUST(DESCCOLUMN,3.71-3.05,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Qty"
		GOSUB JUST(QTYCOLUMN,3.71-3.05,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Rate"
		GOSUB JUST(RATECOLUMN,3.71-3.05,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "GST"
		GOSUB JUST(GSTCOLUMN,3.71-3.05,UNIVERS11SB,"L",6.00,TEMPALPHA500)
		TEMPALPHA500 EQ "Total"
		GOSUB JUST(0.00,3.71-3.05,UNIVERS11SB,"R"TOTALCOLUMN,TEMPALPHA500)
	}
RETURN
;###############################################################################
SUBROUTINE PRINT_PAGE_HEADER()
START

	;PRINT THE PAGE HEADING
	TEMPALPHA500 EQ "Statement/Tax Invoice"
	GOSUB JUST(0.40,0.40,UNIVERS20B,"L",6.00,TEMPALPHA500)

	;PRINT THE CONTACT INFORMATION
	TEMPALPHA500 EQ "PO Box 375\\MORAYFIELD QLD 4506\\ABN: 96 010 643 909"
	GOSUB JUST(0.40,0.65,UNIVERS9N,"L",6.00,TEMPALPHA500)
	;SELECT THE CORRECT PHONE NUMBER
	IF (CUSTOMERGROUP EQ "RES")
	{
		PHONE_TYPE EQ "Residential:"
		PHONE_NUMBER EQ "1800 976 833"
	}
	ELSE
	{
		PHONE_TYPE EQ "Community:"
		PHONE_NUMBER EQ "1800 708 061"
	}

	GOSUB WRAP(2.15,0.65,UNIVERS9N,"L",6.00,1)

	;PRINT THE LOGO(S)
;	SETXY 5.10,0.21,"..\\RESOURCES\\BLUECARE_LOGO_2_CMYK.jpg"
;	SETXY 6.22,0.85,"RESOURCES\\UC_LOGO_LR.jpg<SX=1.248><SY=0.315>"
	SETXY 5.00,0.30,"BC_LOGO_NEW.eps"


	;SETXY 6.22,0.85,"..\\RESOURCES\\UC_LOGO_LR.jpg"
	
	;PRINT THE DETAILS ON THE RIGHT HAND SIDE
;	GOSUB WRAP(5.00,2.15-0.20,UNIVERS10N,"L",6.00,0)
	GOSUB WRAP(5.00,2.15-0.20,UNIVERS10N2,"L",6.00,0)

	;DRAW THE TOTAL AMOUNT PAYABLE BOX
	SETXY 4.70,3.08-0.20
	DRAWBOX 0.35,3.15,0.02,0
	;PRINT THE TOTAL AMOUNT PAYABLE
	CONVERT TOTALAMOUNT,nTOTALAMOUNT,'$L2,'

	IF (nTOTALAMOUNT <= 0)
		TEMPALPHA500 EQ "STATEMENT BALANCE:  <TOTALAMOUNT>"
	ELSE
		TEMPALPHA500 EQ "TOTAL AMOUNT PAYABLE:  <TOTALAMOUNT>"
	GOSUB JUST(4.70,3.32-0.20,UNIVERS11B,"C",3.15,TEMPALPHA500)

RETURN
;###############################################################################
SUBROUTINE PRINT_ADDRESS_BLOCK()
START
	;PRINT THE DPID BARCODE
 	IF (DtBarcode NE "")
	{
		CONVERT TEMPALPHA500,DtBarcode
		GOSUB JUST(1.30,2.00,DPIDFONT,"L",6.00,TEMPALPHA500)
	}

	GOSUB MAKESORTCODE()

	;PRINT THE SORTING LINE
	TEMPALPHA500 EQ "<JOBNUMBER>-<Customeraccount>-0<SortOrder>"
	IF (DtBPSortCode NE "") ! APPEND TEMPALPHA500,DtBPSortCode,"-"
	GOSUB JUST(1.30,2.15,UNIVERS7N,"L",6.00,TEMPALPHA500)

	;PRINT THE NAME AND ADDRESS BLOCK
	SETMARGIN 1.30
	SETXY $Margin,2.30
	FONT UNIVERS10N
	CONVERT NAB1,STATEMENTNAME;NAMELINE
	CONVERT NAB2,ADD1
	REPLACE NAB2,"po Box","PO Box"
	CONVERT NAB3,ADD2
	REPLACE NAB3,"po Box","PO Box"
	CONVERT NAB4,ADD3
	REPLACE NAB4,"po Box","PO Box"
	CONVERT NAB5,ADD4
	CONVERT NAB6,ADD5
	CONVERT NAB7,ADD6
	CONVERT NAB8,SUBURB
	APPEND NAB8,STATE,POSTCODE," "
	CONVERT NAB8,NAB8,'U'
	CLOSEUP NAB1,NAB2,NAB3,NAB4,NAB5,NAB6,NAB7,NAB8
	FULLNAB EQ "<NAB1>\\<NAB2>\\<NAB3>\\<NAB4>\\<NAB5>\\<NAB6>\\<NAB7>\\<NAB8>"
	REPLACE FULLNAB,"<",">",'F'
	WORDWRAP FULLNAB,NOLINES,'L',3.55,UNIVERS10N
	MOVE FULLNAB L=$WrapLength
RETURN
;###############################################################################
SUBROUTINE DRAWALINE(X,Y,L,T)	;X POSITION, YPOSITION, LENGTH, THICKNESS
NUMERIC	X
NUMERIC	Y
NUMERIC	L
NUMERIC	T
START
	SETXY X,Y
	DRAWHLINE L,T
RETURN
;###############################################################################
SUBROUTINE PRINT_KERNBARCODE(SHEETNUM,TSHEETS)

NUMERIC	SHEETNUM
NUMERIC	TSHEETS
START

	ALPHA	JOBID			L4
	ALPHA	MAILPIECEID		L6
	ALPHA	SHEETID			L1
	ALPHA 	TOTALSHEETS		L1
	ALPHA	OTHER			L6
	ALPHA	TEMPALPHA6		L6	;FOR KIC FILE
	ALPHA	TEMPALPHA80		L80	;FOR KIC FILE

	NUMERIC	HOPPER1			=8
	NUMERIC	HOPPER3			=32
	NUMERIC	NUMOTHER		=0



	CONVERT JOBID,JOBNUMBER[2]L4
	IF (JOBID EQ "MPLE")
		JOBID EQ "0001"
	CONVERT TEMPNUM,S_SORTORDER
	CONVERT MAILPIECEID,TEMPNUM,'0'

	SHEETID EQ SHEETNUM
	CONVERT TOTALSHEETS,TSHEETS
	OTHER EQ "000000"
	NUMOTHER EQ 0


;	;DL INSERT HOPPER 1 (ONE OFF)
;	IF (PAYSLIPTYPE EQ "STD")
;	{
;		NUMOTHER += HOPPER1				;INSERT FOR HOPPER 1
;		IF (SHEETID EQ "1")
;			INC HOPPER1COUNT	
;	}

	;BRE FOR CERTAIN TYPES ONLY
	IF (SAVEDPAYMETHOD EQ "")
	{
		;OTHER EQ "000032"				;HOPPER 3
		NUMOTHER += HOPPER3
		IF (SHEETID EQ "1")
			INC BRECOUNT
	}
	ELSE
	{
		SWITCH(SAVEDPAYMETHOD){
			CASE("CASH")
			CASE("CH")
			CASE("CHQ")
			CASE("MO")
				NUMOTHER += HOPPER3 ;HOPPER 3

				IF (SHEETID EQ "1")
					INC BRECOUNT
			BREAK
			DEFAULT
				;OTHER EQ "000000"
			BREAK
			}
	}		

	CONVERT OTHER,NUMOTHER,'0'

	NEWKERNBCODE EQ JOBID
	APPEND NEWKERNBCODE,MAILPIECEID
	APPEND NEWKERNBCODE,SHEETID
	APPEND NEWKERNBCODE,TOTALSHEETS
	APPEND NEWKERNBCODE,OTHER

;pos 1-4: Jobid 
;Pos 5-10: Mailpieceid
;pos 11-12: Sheet id
;Pos 13-14: Total sheets for this mailpiece
;pos 15-22 other commands

	ORIENTTEXT 270
	SETMARGIN 7.45
	SETXY $Margin,0.40
;	IF (TESTING)
;		BARCODE "2OF5IL",0.20,0.0118,2.5,NEWKERNBCODE,UNIVERS5N	; 0.03 mm minimum width
;	ELSE
		BARCODE "2OF5IL",0.20,0.0118,2.5,NEWKERNBCODE;,UNIVERS5N	; 0.03 mm minimum width
	ORIENTTEXT 0
	DISPLAY SAVEDPAYMETHOD,1
	DISPLAY NEWKERNBCODE,3

	;WRITE OUT THE KIC FILE INFORMATION
	IF (SHEETID EQ "1")
	{
		TEMPALPHA80 EQ JOBID
		CONVERT TEMPNUM,MAILPIECEID
		CONVERT TEMPALPHA6,TEMPNUM,'0'
		APPEND TEMPALPHA80,TEMPALPHA6
		WRITE KICFILE,TEMPALPHA80 L=80
		WRITE KICFILE,"\n"
	}

RETURN
;################################################################################
SUBROUTINE SELECT_BPAY_BILLER_CODE()
START

	BPAY_BILLER_CODE EQ ""

	;SELECT VARIABLE BILLER CODE
	IF (CUSTOMERGROUP EQ "RES")
	{
		SWITCH(FACILITYNO){
			CASE("RL0047")
				BPAY_BILLER_CODE EQ "253286"
			BREAK
			CASE("RL0048")
				BPAY_BILLER_CODE EQ "267021"
			BREAK
			CASE("RL0049")
				BPAY_BILLER_CODE EQ "267039"
			BREAK
			CASE("RL0050")
				BPAY_BILLER_CODE EQ "267047"
			BREAK
			CASE("RL0051")
				BPAY_BILLER_CODE EQ "267013"
			BREAK
			CASE("RL0052")
				BPAY_BILLER_CODE EQ "267005"
			BREAK
			DEFAULT
				BPAY_BILLER_CODE EQ "279281"
			BREAK
			}
	}
	ELSE
	{
		BPAY_BILLER_CODE EQ "279281"
	}

RETURN
;################################################################################
SUBROUTINE WRAP(X,Y,TEMPFONT,TYPE,LEN,TRFNO)

	NUMERIC	X					; MARGIN
	NUMERIC	Y					; YPOSITION
	ALPHA	TEMPFONT	L99		; FONT
	ALPHA	TYPE		L1		; WORDWRAP TYPE
	NUMERIC	LEN					; LENGTH OF JUSTIFICATION
	NUMERIC TRFNO				; TRF NUMBER

START

	SETMARGIN X
	SETXY $Margin,Y
	FONT TEMPFONT
	TRFREAD TRFNAME,TRFNO,TEXTIN
	REPLACE TEXTIN,"<",">",'F'
	WORDWRAP TEXTIN,NOLINES,TYPE,LEN,TEMPFONT
	MOVE TEXTIN L=$WrapLength

RETURN
;################################################################################
SUBROUTINE JUST(X,Y,TEMPFONT,TYPE,LEN,STRING)

	NUMERIC	X					; MARGIN
	NUMERIC	Y					; YPOSITION
	ALPHA	TEMPFONT	L99		; FONT
	ALPHA	TYPE		L1		; JUSTIFICATION TYPE
	NUMERIC	LEN					; LENGTH OF JUSTIFICATION
	ALPHA	STRING		L500	; STRING TO BE JUSTIFIED
START

	ALPHA	TEMPSTRING	L500

	SETMARGIN X
	SETXY $Margin,Y
	FONT TEMPFONT
	CONVERT TEMPSTRING,STRING
	REPLACE TEMPSTRING,"<",">",'F'
	WORDWRAP TEMPSTRING,NOLINES,TYPE,LEN,TEMPFONT
	MOVE TEMPSTRING L=$WrapLength
RETURN
;###############################################################################
SUBROUTINE MAKESORTCODE()
START

ALPHA	TEMPSTATE	L50

CONVERT TEMPSTATE,SORT_STATE[2]L10

	SWITCH(sort_level){
		CASE("1")
			DTBPSORTCODE EQ "BD <sort_code>	<sort_pcd>"
		BREAK
		CASE("2")
			
			DTBPSORTCODE EQ "BR <TEMPSTATE>	<sort_pcd>"
			
		BREAK
		CASE("3")
			DTBPSORTCODE EQ "UR <TEMPSTATE>	<sort_pcd>"
		BREAK
		DEFAULT
			;PROMPT "Error!! Sort Level Wrong",Sort_Order
		BREAK
		}

		REPLACE DTBPSORTCODE,"<",">",'F'
	
RETURN
;################################################################################
