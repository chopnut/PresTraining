%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: BLUECARE_BG_FRONT_V6.pdf
%%Creator: Adobe Acrobat 19.8.0
%%For: Ernani.Danting
%%CreationDate: 10/10/2018, 11:56:57 AM
%%BoundingBox: 0 0 596 842
%%HiResBoundingBox: 0 0 595.2760 841.8901
%%CropBox: 0 0 595.2760 841.8901
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 16008 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 91.163280, 2018/06/22-11:31:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:CreatorTool="Adobe Illustrator CC 2017 (Windows)"
   xmp:CreateDate="2018-10-10T11:56:16+11:00"
   xmp:MetadataDate="2018-10-10T11:56:16+10:00"
   xmp:ModifyDate="2018-10-10T11:56:16+10:00"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False"
   dc:format="application/pdf"
   xmpMM:DocumentID="xmp.did:b9938657-ce51-b641-a1e7-49cd7c48cb65"
   xmpMM:InstanceID="uuid:fa2eb20e-996c-4d0a-b965-743ac8a35a64"
   xmpMM:OriginalDocumentID="xmp.did:b9938657-ce51-b641-a1e7-49cd7c48cb65"
   xmpMM:RenditionClass="proof:pdf"
   pdfx:CreatorVersion="21.0.2"
   pdf:Producer="Adobe PDF library 15.00">
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="184"
      xmpGImg:height="256"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBqN9aa&#xA;VZ/XdQvHjto3SN5GVWBaeRYowQiV+24G307ZKEDI0GMpACykA/MbyZ+9/wBzUjC3ScTOLeQqGgDt&#xA;JVhDx9RViZgg3KjlQjfLvymTu+5r8eHf+AjdN83+XdVubi007VHuri1SYTJDEzEG1ZFlYfuqM1ZF&#xA;AC15V+EHIzwTiLIr9rOOSJ2CFs/zC8pXsiR2+qXAaeRIo2e0niVWMhhFWlgVVEkqlKuaFgVG4IyU&#xA;tLkHMfaGEc8D1av/AMxvJlhqU2n3esvDdw3CwvCYJCPUPH90rCEq/wDeLy4kkVFSMY6XIRYGyTng&#xA;DRO6Z6B5h0fXkebSdQe7igKGVhHxX98gkWMl413CkEqPiWvxZXkxSh9QplCYlyTQQyAKDcSEgEEk&#xA;R1NehNF7dqZWzcIZKf70SfZ41pH1r9v7PX8PbFXGGQhgLiQEgAECOop1IqvfvXFXGGQkn13ALBgK&#xA;JQAfsj4eh+/FXejJWvrvTkWpRKUP7H2en4++KuEMg4/v3PHlWoT4q9K/D+z2p9NcVcIZAKfWJD8J&#xA;WpEfU/tfZ6j7vbFXGCWh/wBIkFVC1pHsR+19jqfuxVzQyHlSd15UpQJ8NOtKqevev0Yq36Ula+s/&#xA;2+VKJ0/k+z9n8ffFWlhkBUmd2oSSCE3B7GijYYq4QSgLW4kNAQSRHuT0JonUdqYq4wyU/wB6JPs8&#xA;a0j61+39nr+HtirjDIQwFxICQACBHUU6kVXv3rirjDIST67gFgwFEoAP2R8PQ/firvRkrX13pyLU&#xA;olKH9j7PT8ffFVyRuvGsrvSteQXevStFHT2xVJvO1poV35auoNekaPSy8DTcBzd2SeN4oUjCyNI0&#xA;sqrGsaqWctxUciMsxZDCXEObDJASFF515D8ueR9YgiutMstWTQr+4vBbNI1jPYSXSfWbeSQNZNcF&#xA;RGglSKRiIj8PEszLyyJa2Z51bVHTRjyV/KOufkr5Ss5dd03XzLBeCOxkkl5ySI0CzbyQxxLJGZBb&#xA;OSzqA3D4fevPqZZBRZ48IhyTLSvL35ZXF/FZ6Z5kjupWmDXGlw3trKLp4bqa+jSaNVLt6UhkICkf&#xA;Cp5VockdXI9B+ramI08fx77TLV/yh8oate3d7drP9ZvJZ53mjdY3WSeJIvhdVDlYxGWRGJWrNUEG&#xA;mGGtnEADoiWmjIknqyHy55bsPL9lNaWTO0c9xNdyNJw5GSd+bfYVFAHQCnTKMuUzNnupthARFBNc&#xA;rZpBefmD5CsrqW0vfMulW13AxSe3mvbeORHHVXRnDKR4HFUTb+bvKlxpU+r2+tWE2k2zenc6hHcw&#xA;tbxv8PwvMGKKfjXYnuPHFUytrm2ureO5tpUnt5lDwzRMHR1YVDKy1BB8Riq9XVhVSGFSKg13BoR9&#xA;BxVvFXYq7FXYq7FUFpWt6Lq8Mk+k39tqEMUhhlltJo51WRQCUZoywDAMNjiqmfMnl0NcqdUtA1kY&#xA;lvF9eKsJuBWESjl8HqfscvtdsVTBHR0V0YMjAFWBqCDuCCMVbxV2KuxV2Ksd/MFbceVLm5uJkgj0&#xA;+a01IPLz9Nn0+7iu443MaTOqyPCEZljYqDUKSKZKEDI0OZYykIizyeaaF5t8saXqF55fE8uleVdP&#xA;1B54LW4tIreJEjv5LpZ7GSz+sc4heo0DLNHEPTaNVKyxyetkDSZCLr7ms6iAPNe+i+XIrK+ks/MV&#xA;rZw68l1NYSv5fja1gt7ZJlmiKNGsXKNWuOavxZi5qDWhj+WnuK5eY6p8aPO0f5Ol/LzStTutT+vW&#xA;V1Laq7L6GgrYywyGcRUSSKAStKv11IWjFW+LcDkak6XIOn2hAzwPX8fjozfT/wAxfJmo3Vta2Woi&#xA;aa8YJa0imCyMyuw4uUCHaNgd9iKHfbIy02SIJI5JGaJ5HmyTKG12KsG8xfk75R1iDUE43MH6Snkv&#xA;b61F5fGxubl0IV7m0S4iR1WQRyUjKNVFHIDbFU6i8ieV00m90mW1e7sdRuEu7+O9uLi8aeWMRKhk&#xA;kuZJZGAW3jHEtxoKUpXFWPf8qE/Kf6xbXP6D/fWZ5Wz/AFu8+AiRpunrUP7xyd8VRtt+Tv5cW2ry&#xA;axb6OI9QlkuJnmW4uac7xGjnIj9XgOaORQLQdqYqiPLP5V+QfLF9Hf6HpK2d3FEYI5fVnkohLMdp&#xA;Xccvjb4qcqGlaYqyvFXYqknmzzdpnlmyiuLxWmluGdLa1jeCN5PRhe4mb1LmS3gjSKCGSR3kkVaL&#xA;SvIqCqwf8lPzO8oeY5ta8s6JJPH+hJ3ktLO6+qgpaTSt+5tntbm6jmt7WSscbRhUSJokHKnJlXnm&#xA;sT+QNO1aWxPkL65ewX0ljct+lb2eOKkSwwVEgHP1YWkQQrv+7ooagpkx0mQgEDY+5pOogDV7o6K1&#xA;8gapZz33+ApZRpdrZfXVj1W6cwWpitfq7BIyXdVjiqWVekfIn4q5E6eYIBHP9DLxo0TfJkvln83b&#xA;e2+q6BpHlv0LeJ1t7S1F2z/3l4bdW5vGeKfEh+M05N6deSnJS0mQCyPuYjPC6tMLD87Lhhcx6roi&#xA;aff244nT1ujcN6iXLQTEzRw+l6aAD4wSC1U69QNLkIuk+NG6tPtO86ec9Q0i31G18oNIt3paahbA&#xA;ahbBGnkBZbQswVlJXifU4cd96EZTKJiSDzDZGQIscmU6Rc6jc6bBPqVkNPvnUGezEqziNu6iVQoY&#xA;e9BkUozFWMfmVq1ppfkzULi9mtobJ1WC8e9FwYTbzuI5l/0UGbk0bME4/tUyUZGJBHMIlEEUerw/&#xA;X59JtLnV7t4/LiRJ+8uprgeYGRpLm7cRGRYwyemyQNsP92gEfDxbMj85lAq+Xuavy8D0R2p+ctFs&#xA;IDYLfaAbez06+jh9WHW5QI57lbWUSIBKQZr1ZBI28nGnE0PLIHUTu78/lyZDFHlX4LcmoeVtPZY4&#xA;m0iHUtRQWuoqw1xmknWSKRWRuXwH608DcudTWvPvkjq8hqzy8gxGCAvZT8v+Z9C0KQXsj+XrOyhi&#xA;t9TM1tFr7BZm/c2sg9SPhRobtqx/aq1SNqgT1OSXMpjgjHkGSv8Am15sj0q75at5a/S1qjSSf6Nr&#xA;H1VEWR15uwjLABbaYU/mpv8AzUNr0PyN540fzXp0kljdx3N3YsINREcVxCqTgbjhcxxOPdaHj0rg&#xA;V5Nrmk+cX8zXuow+YPNA0r9JXUptrX6uLc20Vx6MsEbNqcTRorRFUf01Ir9nfJcK2zLyd5xbSdFi&#xA;sJrXW9WnjNZb/UrnSRI7sKsFL3y/CCDRasVHfHhRaef8rFX/AKsd5/0l6N/3kMeFbd/ysVf+rHef&#xA;9Jejf95DHhW3f8rFX/qx3n/SXo3/AHkMeFbd/wArFX/qx3n/AEl6N/3kMeFbWy/mQkUE07aDfNHb&#xA;xvNL6dxpEjCOJS7twS/ZjRQTsMeFbT/URoOnTv5g1KWG0aCEWx1C6lCRwxSSAlVaRgkfqycOdKcy&#xA;qBq8VpFKK07UtO1KzS9066hvbOWvpXNvIssTcSVbi6FlNGBB3xVhlx5W/KLW9Rk1tns7u8nuUia8&#xA;hv3Fbt1T00X0pgqyleJUL8XcdcyY6vJEcIO3waZYIE2RunkXkLylFbX1tDp6xQ6lBBa3qpJKvqQ2&#xA;yenFGSGBACDiafa71yB1EyQb5fpZDFHfbmh2/LTyQ2rJqx0wDUI7j64k4lnFJufqcgofjTmS3GnG&#xA;pJpvkvzWTh4b2qkeBC7rd0v5ZeR5dSGpyaYDerM1wsvqzikjOZGoofiFLsW4041JNK4jVZKq9l8C&#xA;F3W7ILCxtdPsLawtE9K0tIkgt46luMcahEWrEsaKO5ymUjIknmWyMQBQV8il2KpB5/1ybQvJuq6v&#xA;Bcw2c1lAZUurlJJIYyGA5SpEskhT+bgpanTfFXj0n52661vcajF5j01dHBnIuf0ZrLNCnIfVyzfU&#xA;OP8Ad7uzChbptlP5nHxcPEOLutyJ6TNGIlKEhE73R5d/uTO4/MXz/wDpAJHrOkrZqZPUJsNV9UBZ&#xA;ZOG31Mqf3YjDbjfnT9mmZ4Eu77Q470ey1PUv0Jpkl1epJq11axz3AQrb2qsEjMz8poDLGnKVQqsn&#xA;P4hUfaIxcuThNdfft82E50mtuZnZIprx4rl05pGGt3DqoTm8X7sMyK0gXkVG/bcVlEkjdkC1dzQW&#xA;cM0tzqjxpboHm5GAFVYkLWqftEEL4nBPJGIJJ5IlIDmqETx3FqRdySpJKyOjCKhpG5pVUU7Mvjk2&#xA;TyvzBe6sxv8ATNNsIb6eWz1mdITaRXczFdfRGVUl2deDs3pk8SwB7ZYEMQtFXyz54883Pl6Kz0Ew&#xA;21veWccwCQW8kmmtI3qxKCI25kkxgUB26ZLmBaGU+SfOH5r6ve2mnadq/lPVYRa/XdRuLeTUbuaJ&#xA;pGDcZXVvSieRpDwiJWihuC8U44JADvUEpxcJ/wA5FCDTooH0BqsRqEzGYTBGCqDUJ6XNeTMOKEfC&#xA;NjuCPSnd6VZrcLZwLctyuVjQTNUNVwo5HkqRA79wi/IdMrSrYqxj8xf+Uauf+MF7/wB0+5yUeasM&#xA;/PTQ9du9X8m6vbTagug6Nc382sx6XdfU5VrZM8NxJM81nDHAiwyRyyNcRsEkKowZ8irvytS6vfPu&#xA;p67pEV9B5Qu9Fs4RJqWoLq7XV5FeXfF7a9S61NDHCvqK8a3A4swJTcNirGdE8h+VrTzHbzWV15Th&#xA;vtPvJbmKO31K+knWVng+r8opLh15F1owK0rw4jqMKstufPfnuMItvqvk+5dY2eVlvJEEjvFELeJA&#xA;0tVaW4kahNRwK/tHFVtl5x/MWWe4a417yV9WiiVYWhuLnkbqdR9XWTm1BFI7bcfibtgVNF84eZLi&#xA;KJo9Z8swLcz3ENtIbln9VYUUAxcZGVmWRZC69lpUA1wqti82edPrNu8+peV49OZYTNcCeZi6vaiV&#xA;5oaOV9Myn4OZHwb16VVd9e/O25VZ9NPla6sri3DWl0j3rx+sSDzdlO8RXkF4VNadq4FZ1ph1I6db&#xA;HUxCuo+kn1wWxYwCbiOfpFwH4cvs8hWmKpL+Yvlv/E3kvVPL31j6p+lY1tfrXD1PT9WRV5cOScqe&#xA;HIYq8zH/ADjbex+WLny/b+bWit7qH0JZDYqxI48Cd567jb7WYMuzsRyjIR6g7LL2rnyYxjkfSI8P&#xA;Loy7WvyV8q6zqdxql8ga+uuPrTR+rETwQRg0SVR9kb+NSeuZUcmqiKE41/U/484fFj/mn5/sZrNp&#xA;qzS285meO5hK8pouILqKFoyGD0RyASBvt1weHdEn1Dr3/fsWicQTY2VDp9q9o1pMgmtn9QPC6rwZ&#xA;JOVY2RQqsnFuNCN+9TvlkY0KUClr6ZaPctdMrNOQQC7yMoBXiVCFuIVtiygUJAJ3AOROMXfVHALt&#xA;Qawtra4sfRDKBIU4l3ZT+7lYsQxILszEs5+Ju5OGMBHl+Px9qiIHJ4t59j8rRarpd3rmsQaZI0ut&#xA;rax3mmTalDMIdXaaQfuZImDDioKjcg9svjalJPLeo/lRomralqM3mXT9V0/U/TW5s3065sbQLwlt&#xA;qfYug3ORHYkgCvTrkiCVFMwsPzH/ACY8omS60630bSm9ODlc2sVwHMV7CLmJeUVkX4yRxhuPiPHI&#xA;8MitgJp/0MN5AKM6anaPReaqDfVdeXGqVshyHLao2weGU2oL/wA5H+QZLKO7i1Gy4M0YlEj3ymLm&#xA;TUScbJyGojUHQkdQDXHwyjiCYS/nn5OjFmTf2RW9uvqSMZrhAknN46y+pap6aB4mHNtu/TfBwFNt&#xA;6p5z0bzVoWtw6bfWU76XZ30txHbzSSPtbT254q8MIZQ77spI+/EClej5BLsVfP3+J9OuNZ1cx2vk&#xA;t54la5tWOnajHObO0uTHOZ5/q+0kckQKcK/EtQKUOFVll5o0CIT6gbLymtr9ZgsbO4ayv3Y20f1a&#xA;eyLUhl+MW7seR4/H6f8ALiqpqnnI2YaxtLHyjNPFwlWBtM1JEjsrZiIZXpbkD05IpCijtQpWoqq1&#xA;onnrTzPY6dLaeUrBgJ5bCwTTr392sR4XTo6RmGMM8Nx14kgLUVJxVkHkiTW/MWlyWtpbeVpl0yWO&#xA;y1S1SyvhFxDPzhX60iniluYvT48k6j7PHFXrVjZWljZw2dnbxWtrAoSG3gRY4kUfsoigBR8sCq+K&#xA;pL50trG68sX9tf2kt/YzosV1ZW4YyzRO6q8acWRuTKaCjDFWP+V28geTtNktNA0rVbO0kZZpIl0z&#xA;WZ2Z5VLA/vIZHrRfi/lNAaGmKpw/nrSVuZIPqWrt6VBJKukakY/tcfhb6v8AHvT7Fdt+gJCqufN+&#xA;mrM0UlpqSsGkVWGm37qwiBLMGjhcAHiQvKnL9mtRVVda+bdLuX4RQaipAJJl0zUIRQEjrLAg6jp9&#xA;PTFXXXmq1huoLZLHUbh52Cc4rG49NOQJBeR0RAPgO9dtvFaqphd/39l/xmP/ACZkxV5P5ki1UXOn&#xA;zQXmo2Fkb3VI57m1uNOhh5/pd2CIt8aesyqxJKkFF4ftNSwIY/pE/mmGXS/Rt9fMCgIIRLoMFvdc&#xA;SzGTlLHGLgT3FynIhCeRrzkZlpI0hE38Go6Xb39rfP5gmGoIq6rBPeeXwtjFVY4wHcyIij64PT5M&#xA;pPD+SuBUJdW+sWt6+jX0XmG4na7mt4rh59DlmFlOhjVkDVPCH0klK9I6B24bElVLy8NdlnuLtYtY&#xA;+qRw2/OaO58ssRwuljk5yLHGwWaJeJqRyC8WZxTgn8c1ZZYQ6pLFpfmK8fV9L06yKXKaV6mhR29x&#xA;cGbjLI8iPBGzXAd7hiFTcuQ26JkfJLP/ADja2yeU9elSJFl/Rt2nqBQG4+ixpXrSuQHNKe4FdirD&#xA;bjyv+Yrshh87+iFuVlcfou1blACxaDdtuVQOfUUxV155W/MWSBEtvO5t5g/J5TpdrJyQRqoXiStP&#xA;3gLk+9BTriqrc+XvzAnu1uIfNos4CyM9kthbzqABGHRZW4MQxRzyIr8XsMVULvyr+ZMt/HNB55+r&#xA;2iSl3tRpVq/OMzvIIjIzVFIWWLkBX4eXU4qttvKP5hx2cizedVl1GSIR/pAaVaIwKmcg8AxBA9aO&#xA;in+Q/wA5xVFT+W/PjwWaQ+cWilinWS9lOnWz+vCGqYlWoEfIbct8VZPaxzx2sMc8v1idEVZZ+ITm&#xA;4ADPxGy8jvQYqtvrNLy1e3eSSJXKn1Im4OCrBhxbtuMVY4fy40j4AmpaxCkZYpHDql7Cg5OXPwRy&#xA;qp+Jj26bdMVXWP5d6RY3DXEN/qrSuQXM+o3VwGZePFmWZ5FLLwFCRUYqvt/IOlwTW0w1DVZXs5jc&#xA;QfWNQurgCQrxqyzO6vt0DAgdsVTz6pP/AMts33Q/9U8Vd9Un/wCW2b7of+qeKuFk/qxSSXMsnpMX&#xA;VGEYBJUpvxRT0bxxViWt/lJ5Z1qYS6k7XPCaaeBZrbT5jEbiV5pFR5rWSThzlY8SxyQmQikOv5K+&#xA;UE9PiqqYwgVhY6SGpGyMlW+pVahhTr4U6YeMrS2b8kfJc0000kSNNOQZZPqGkciRQjf6lUfZHTHj&#xA;K0qr+TflNZkmCoJI3MkZ+oaR8LtQsyj6lRSSoJp33x4ytLYPyX8o28EsEAEMc0XoSiOx0lS0RbkU&#xA;JFlXjy3p4748ZWlj/kl5NfToNOdQ1nbDjBGbLSiVFKGj/U+VWp8RrU98eMrTIb3yteXtnPZXXmDU&#xA;ZLa5jeGePhYLySRSrCq2oIqD2yNpT/ArsVdirsVdirsVdirsVdir/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpTPg:MaxPageSize
    stDim:w="595.275591"
    stDim:h="841.889764"
    stDim:unit="Pixels"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="Helvetica"
      stFnt:fontFamily="Helvetica"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="Version 1.3 (Hewlett-Packard)"
      stFnt:composite="False"
      stFnt:fontFileName="Helvetica_1.ttf"/>
     <rdf:li
      stFnt:fontName="Helvetica-Bold"
      stFnt:fontFamily="Helvetica"
      stFnt:fontFace="Bold"
      stFnt:fontType="TrueType"
      stFnt:versionString="Version 1.3 (Hewlett-Packard)"
      stFnt:composite="False"
      stFnt:fontFileName="Helvetica Bold_0.ttf"/>
     <rdf:li
      stFnt:fontName="UniversLTStd-Light"
      stFnt:fontFamily="Univers LT Std"
      stFnt:fontFace="45 Light"
      stFnt:fontType="Open Type"
      stFnt:versionString="OTF 1.029;PS 001.004;Core 1.0.33;makeotf.lib1.4.1585"
      stFnt:composite="False"
      stFnt:fontFileName="UniversLTStd-Light.otf"/>
     <rdf:li
      stFnt:fontName="UniversLTStd"
      stFnt:fontFamily="Univers LT Std"
      stFnt:fontFace="55 Roman"
      stFnt:fontType="Open Type"
      stFnt:versionString="OTF 1.029;PS 001.004;Core 1.0.33;makeotf.lib1.4.1585"
      stFnt:composite="False"
      stFnt:fontFileName="UniversLTStd.otf"/>
     <rdf:li
      stFnt:fontName="UniversLTStd-Bold"
      stFnt:fontFamily="Univers LT Std"
      stFnt:fontFace="65 Bold"
      stFnt:fontType="Open Type"
      stFnt:versionString="OTF 1.029;PS 001.004;Core 1.0.33;makeotf.lib1.4.1585"
      stFnt:composite="False"
      stFnt:fontFileName="UniversLTStd-Bold.otf"/>
     <rdf:li
      stFnt:fontName="UniversLTStd-Black"
      stFnt:fontFamily="Univers LT Std"
      stFnt:fontFace="75 Black"
      stFnt:fontType="Open Type"
      stFnt:versionString="OTF 1.029;PS 001.004;Core 1.0.33;makeotf.lib1.4.1585"
      stFnt:composite="False"
      stFnt:fontFileName="UniversLTStd-Black.otf"/>
     <rdf:li
      stFnt:fontName="ProximaNovaT-Thin"
      stFnt:fontFamily="Proxima Nova"
      stFnt:fontFace="Thin"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 3.014;PS 003.014;hotconv 1.0.88;makeotf.lib2.5.64775"
      stFnt:composite="False"
      stFnt:fontFileName=""/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
     <rdf:li>PANTONE 2768 C</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="PANTONE 2768 C"
         xmpG:type="SPOT"
         xmpG:tint="100.000000"
         xmpG:mode="CMYK"
         xmpG:cyan="89.411765"
         xmpG:magenta="77.254903"
         xmpG:yellow="46.666667"
         xmpG:black="72.941178"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">BLUECARE_BG_FRONT_V6</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmpMM:DerivedFrom rdf:parseType="Resource"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:b9938657-ce51-b641-a1e7-49cd7c48cb65"
      stEvt:when="2018-10-10T11:56:08+10:00"
      stEvt:softwareAgent="Adobe Illustrator CC 2017 (Windows)"
      stEvt:changed="/"/>
    </rdf:Seq>
   </xmpMM:History>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (PANTONE 2768 C)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/ColorLookup [
[0 0 0 0][.00350634 .0030296 .00183007 .00286044][.00701269 .00605921 .00366013 .00572088][.010519 .00908881 .0054902 .00858132]
[.0140254 .0121184 .00732027 .0114418][.0175317 .015148 .00915033 .0143022][.0210381 .0181776 .0109804 .0171626][.0245444 .0212072 .0128105 .0200231]
[.0280508 .0242368 .0146405 .0228835][.0315571 .0272664 .0164706 .025744][.0350634 .030296 .0183007 .0286044][.0385698 .0333256 .0201307 .0314648]
[.0420761 .0363552 .0219608 .0343253][.0455825 .0393848 .0237909 .0371857][.0490888 .0424144 .0256209 .0400461][.0525952 .0454441 .027451 .0429066]
[.0561015 .0484737 .0292811 .045767][.0596079 .0515033 .0311111 .0486275][.0631142 .0545329 .0329412 .0514879][.0666206 .0575625 .0347713 .0543483]
[.0701269 .0605921 .0366013 .0572088][.0736332 .0636217 .0384314 .0600692][.0771396 .0666513 .0402615 .0629297][.0806459 .0696809 .0420915 .0657901]
[.0841523 .0727105 .0439216 .0686505][.0876586 .0757401 .0457517 .071511][.091165 .0787697 .0475817 .0743714][.0946713 .0817993 .0494118 .0772319]
[.0981777 .0848289 .0512419 .0800923][.101684 .0878585 .0530719 .0829527][.10519 .0908881 .054902 .0858132][.108697 .0939177 .0567321 .0886736]
[.112203 .0969473 .0585621 .091534][.115709 .0999769 .0603922 .0943945][.119216 .103007 .0622223 .0972549][.122722 .106036 .0640523 .100115]
[.126228 .109066 .0658824 .102976][.129735 .112095 .0677125 .105836][.133241 .115125 .0695425 .108697][.136747 .118155 .0713726 .111557]
[.140254 .121184 .0732027 .114418][.14376 .124214 .0750327 .117278][.147266 .127243 .0768628 .120138][.150773 .130273 .0786929 .122999]
[.154279 .133303 .0805229 .125859][.157786 .136332 .082353 .12872][.161292 .139362 .0841831 .13158][.164798 .142391 .0860131 .134441]
[.168305 .145421 .0878432 .137301][.171811 .148451 .0896733 .140162][.175317 .15148 .0915033 .143022][.178824 .15451 .0933334 .145882]
[.18233 .157539 .0951635 .148743][.185836 .160569 .0969935 .151603][.189343 .163599 .0988236 .154464][.192849 .166628 .100654 .157324]
[.196355 .169658 .102484 .160185][.199862 .172687 .104314 .163045][.203368 .175717 .106144 .165905][.206874 .178747 .107974 .168766]
[.210381 .181776 .109804 .171626][.213887 .184806 .111634 .174487][.217393 .187835 .113464 .177347][.2209 .190865 .115294 .180208]
[.224406 .193895 .117124 .183068][.227912 .196924 .118954 .185929][.231419 .199954 .120784 .188789][.234925 .202983 .122614 .191649]
[.238431 .206013 .124445 .19451][.241938 .209043 .126275 .19737][.245444 .212072 .128105 .200231][.24895 .215102 .129935 .203091]
[.252457 .218131 .131765 .205952][.255963 .221161 .133595 .208812][.25947 .224191 .135425 .211672][.262976 .22722 .137255 .214533]
[.266482 .23025 .139085 .217393][.269989 .233279 .140915 .220254][.273495 .236309 .142745 .223114][.277001 .239339 .144575 .225975]
[.280508 .242368 .146405 .228835][.284014 .245398 .148235 .231696][.28752 .248427 .150065 .234556][.291027 .251457 .151896 .237416]
[.294533 .254487 .153726 .240277][.298039 .257516 .155556 .243137][.301546 .260546 .157386 .245998][.305052 .263575 .159216 .248858]
[.308558 .266605 .161046 .251719][.312065 .269635 .162876 .254579][.315571 .272664 .164706 .257439][.319077 .275694 .166536 .2603]
[.322584 .278724 .168366 .26316][.32609 .281753 .170196 .266021][.329596 .284783 .172026 .268881][.333103 .287812 .173856 .271742]
[.336609 .290842 .175686 .274602][.340115 .293872 .177516 .277463][.343622 .296901 .179347 .280323][.347128 .299931 .181177 .283183]
[.350634 .30296 .183007 .286044][.354141 .30599 .184837 .288904][.357647 .30902 .186667 .291765][.361154 .312049 .188497 .294625]
[.36466 .315079 .190327 .297486][.368166 .318108 .192157 .300346][.371673 .321138 .193987 .303207][.375179 .324168 .195817 .306067]
[.378685 .327197 .197647 .308927][.382192 .330227 .199477 .311788][.385698 .333256 .201307 .314648][.389204 .336286 .203137 .317509]
[.392711 .339316 .204967 .320369][.396217 .342345 .206798 .32323][.399723 .345375 .208628 .32609][.40323 .348404 .210458 .32895]
[.406736 .351434 .212288 .331811][.410242 .354464 .214118 .334671][.413749 .357493 .215948 .337532][.417255 .360523 .217778 .340392]
[.420761 .363552 .219608 .343253][.424268 .366582 .221438 .346113][.427774 .369612 .223268 .348974][.43128 .372641 .225098 .351834]
[.434787 .375671 .226928 .354694][.438293 .3787 .228758 .357555][.441799 .38173 .230588 .360415][.445306 .38476 .232418 .363276]
[.448812 .387789 .234249 .366136][.452318 .390819 .236079 .368997][.455825 .393848 .237909 .371857][.459331 .396878 .239739 .374718]
[.462838 .399908 .241569 .377578][.466344 .402937 .243399 .380438][.46985 .405967 .245229 .383299][.473357 .408996 .247059 .386159]
[.476863 .412026 .248889 .38902][.480369 .415056 .250719 .39188][.483876 .418085 .252549 .394741][.487382 .421115 .254379 .397601]
[.490888 .424145 .256209 .400461][.494395 .427174 .258039 .403322][.497901 .430204 .259869 .406182][.501407 .433233 .261699 .409043]
[.504914 .436263 .26353 .411903][.50842 .439293 .26536 .414764][.511926 .442322 .26719 .417624][.515433 .445352 .26902 .420485]
[.518939 .448381 .27085 .423345][.522445 .451411 .27268 .426205][.525952 .454441 .27451 .429066][.529458 .45747 .27634 .431926]
[.532964 .4605 .27817 .434787][.536471 .463529 .28 .437647][.539977 .466559 .28183 .440508][.543483 .469589 .28366 .443368]
[.54699 .472618 .28549 .446228][.550496 .475648 .28732 .449089][.554002 .478677 .289151 .451949][.557509 .481707 .290981 .45481]
[.561015 .484737 .292811 .45767][.564521 .487766 .294641 .460531][.568028 .490796 .296471 .463391][.571534 .493825 .298301 .466252]
[.575041 .496855 .300131 .469112][.578547 .499885 .301961 .471972][.582053 .502914 .303791 .474833][.58556 .505944 .305621 .477693]
[.589066 .508973 .307451 .480554][.592572 .512003 .309281 .483414][.596079 .515033 .311111 .486275][.599585 .518062 .312941 .489135]
[.603091 .521092 .314771 .491996][.606598 .524121 .316601 .494856][.610104 .527151 .318432 .497716][.61361 .530181 .320262 .500577]
[.617117 .53321 .322092 .503437][.620623 .53624 .323922 .506298][.624129 .539269 .325752 .509158][.627636 .542299 .327582 .512019]
[.631142 .545329 .329412 .514879][.634648 .548358 .331242 .517739][.638155 .551388 .333072 .5206][.641661 .554417 .334902 .52346]
[.645167 .557447 .336732 .526321][.648674 .560477 .338562 .529181][.65218 .563506 .340392 .532042][.655686 .566536 .342222 .534902]
[.659193 .569565 .344052 .537763][.662699 .572595 .345883 .540623][.666206 .575625 .347713 .543483][.669712 .578654 .349543 .546344]
[.673218 .581684 .351373 .549204][.676725 .584713 .353203 .552065][.680231 .587743 .355033 .554925][.683737 .590773 .356863 .557786]
[.687244 .593802 .358693 .560646][.69075 .596832 .360523 .563506][.694256 .599862 .362353 .566367][.697763 .602891 .364183 .569227]
[.701269 .605921 .366013 .572088][.704775 .60895 .367843 .574948][.708282 .61198 .369673 .577809][.711788 .615009 .371504 .580669]
[.715294 .618039 .373334 .58353][.718801 .621069 .375164 .58639][.722307 .624098 .376994 .58925][.725813 .627128 .378824 .592111]
[.72932 .630158 .380654 .594971][.732826 .633187 .382484 .597832][.736332 .636217 .384314 .600692][.739839 .639246 .386144 .603553]
[.743345 .642276 .387974 .606413][.746851 .645306 .389804 .609273][.750358 .648335 .391634 .612134][.753864 .651365 .393464 .614994]
[.75737 .654394 .395294 .617855][.760877 .657424 .397124 .620715][.764383 .660454 .398954 .623576][.767889 .663483 .400785 .626436]
[.771396 .666513 .402615 .629297][.774902 .669542 .404445 .632157][.778409 .672572 .406275 .635017][.781915 .675602 .408105 .637878]
[.785421 .678631 .409935 .640738][.788928 .681661 .411765 .643599][.792434 .68469 .413595 .646459][.79594 .68772 .415425 .64932]
[.799447 .69075 .417255 .65218][.802953 .693779 .419085 .655041][.806459 .696809 .420915 .657901][.809966 .699838 .422745 .660761]
[.813472 .702868 .424575 .663622][.816978 .705898 .426405 .666482][.820485 .708927 .428236 .669343][.823991 .711957 .430066 .672203]
[.827497 .714986 .431896 .675064][.831004 .718016 .433726 .677924][.83451 .721046 .435556 .680784][.838016 .724075 .437386 .683645]
[.841523 .727105 .439216 .686505][.845029 .730134 .441046 .689366][.848535 .733164 .442876 .692226][.852042 .736194 .444706 .695087]
[.855548 .739223 .446536 .697947][.859055 .742253 .448366 .700808][.862561 .745282 .450196 .703668][.866067 .748312 .452026 .706528]
[.869574 .751342 .453856 .709389][.87308 .754371 .455687 .712249][.876586 .757401 .457517 .71511][.880093 .76043 .459347 .71797]
[.883599 .76346 .461177 .720831][.887105 .76649 .463007 .723691][.890612 .769519 .464837 .726552][.894118 .772549 .466667 .729412]
]
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -841.89 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.89 li
595.276 841.89 li
595.276 0 li
cp
clp
false sop
.94 .73 .11 .01 cmyk
%ADOBeginSubsetFont: HAAAAA+UniversLTStd-Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /HAAAAA+UniversLTStd-Bold def
/FontInfo 7 dict dup begin
/Notice (Copyright 1987, 1991, 1993, 1994, 1998, 2002 Adobe Systems Incorporated. All Rights Reserved. Univers is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Bold) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 65 /A put
dup 72 /H put
dup 79 /O put
dup 80 /P put
dup 84 /T put
dup 87 /W put
dup 89 /Y put
def
/FontBBox {-167 -250 995 938} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 720 743 503 522 697 707] def
/OtherBlues [272 285 -199 -192] def
/FamilyBlues [-19 -0 720 741 502 519 692 708] def
/FamilyOtherBlues [274 283 420 421 -209 -190] def
/StdHW [120] def
/StdVW [155] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/A <1C60D8A8C9B6079F3517E07AF94A2D65C8168C84BA8A3C733C18A9FAC1D2
D0C909FE35EF27C473B76F3BBA37DF97C5B55B4C9DAB1D9EBB4CF3191BABD345
C703B799523F871B1C551E9AD5EBF0DCF0AFE2F4613D1E556E745CEF74> |-
/H <1C60D8A8C9B6079F3517E07A18A765480CA8D0BD41A25B393776C131AEF8
4A3715D96BBCD2ED070FC129BBFF0353148EAE082CEBC1441F5835EB416A44E0
DE892D0A> |-
/O <1C60D8A8C9B6FF867B794D4D85693C84B21C8F59379EBBE6B8702C1D931D
416A31ED0136A8270F742834B92D80A60DA39F2158B951257D80A9938D06514C
30BDEB973A59CD65DE5A9030F815C19BD6A36A35EDDDDA4F8A5B45EF0444170D
9FB18DAD0C39DAEB0403D0963207D59C7DC8C7E6E98F02FFA4F1BFCB89553DA0
FF58E11D3BC8DDB65476D9655A8DBEC105FB930A5F8B> |-
/P <1C60D8A8C9B7D8BE41A64DA520F669A0830CBF170E7C49AA34BC9AB5057C
97B22DDB072C711EE3C3329D5D7877CB82EF9D2BFB1B15746A9098A906556ADD
406C8E5B3B2DFCE2DFC2942A52C0D8B9A1BD5A850375CB89724D4A003888D6FB> |-
/T <1C60D8A8C9B7D8BE41A64DAA7A6F07001B053F2BD67993CDA0E79F3E867F
39DBEB9B0C695F7258DBB32A0C59BDCED8> |-
/W <1C60D8A8C9B5EE31644014551DF67113468C2FF0E9C8960AB7028081EDC8
19EB4B309AD15C46495B9D0EFA6294F8F9A8294C65D0EC35067214415A92C450
1C5ABA12BB69F1FB434219A087597467419EBB660D31C7A394E5FA4B828EEAAD
7E6615AA41A207661A437E> |-
/Y <1C60D8A8C9B64EDFA3F30AEA5B91F27E42249F21EABD49C4152FBF66390C
91BEBE1FB9E74FBE7D61C6960D9F0EFA3F93649A39AD01BA27163650> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GVGHYD+UniversLTStd-Bold /HAAAAA+UniversLTStd-Bold findfont ct_VMDictPut
/GVGHYD+UniversLTStd-Bold*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A 6{/.notdef}rp /H 6{/.notdef}rp /O 
/P 3{/.notdef}rp /T 2{/.notdef}rp /W /.notdef /Y 166{/.notdef}rp]
GVGHYD+UniversLTStd-Bold nf
GVGHYD+UniversLTStd-Bold*1 [20 0 0 -20 0 0 ]msf
18.4263 669.476 mo
(HO)
[14.44 0 ]xsh
48.0263 669.476 mo
(W  )sh
76.1463 669.476 mo
(TO)
[11.4198 0 ]xsh
103.126 669.476 mo
( )sh
108.686 669.476 mo
(PA)
[10.2198 0 ]xsh
130.646 669.476 mo
(Y)sh
0 0 0 1 cmyk
%ADOBeginSubsetFont: HAAAAA+UniversLTStd-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYD+UniversLTStd-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B6079F1E211B4604E4ADF0369E292F982E12AD4778C6A7F01D
98F061101D777A146FFDC5B0815216ED315E4390EFE5ED3EF8E4B411D56BAFC5
E2B6714656BF9058B4D61A65DF4FB363A53E55935F658BDE5DC067C72BF588ED
D5BBB9DFFC0393210A1D2A67FB1E8872943D5E> |-
/b <1C60D8A8C9B7D8BE6A3D5D653D67569C82FAFD31D0EFF0104943473A64E5
548050C70FC377EF11ECD14D28AB286C234EBE8FAB2671F1F27816700758B63F
1A7525C04EE386684E7C58B5D79FAFF77538B8F61ACFE5AEE1AD42B1EB3E174C
E81FD68C571B9DD09D19F7351F116A2949DBA1B2EFB008C7A0D8779DA1259927
FD3E61> |-
/c <1C60D8A8C9B7A73D30434F2D60662274F2AFB0A9FEA9C86EFC07A729E208
0CB727A9646D736DD85A836F70A9378B80A506CBCA40208B63E68D0525BF2972
F520208736BEFAD9CAA4BBB6DDBD541E1477358636C1FABF092E194A1377E947
C6215F55850D3BDD12E0273042734BF2B1678B8994500D87376FD627C0565700
84B64D78E849D7D024ACD85D2B377BA0A7ECDB2FAB> |-
/e <1C60D8A8C9B7EF32A4493C880DA10B2F4BB3CED4F27741689527517380D4
E97E7CA2858241F5395F97AD3D366B08AEB82BA58EEE072E8472B61873304338
E00255F4EF60ECF3C460607E37F2C0FBC7BAE262F740CB09059807EA4F59BB24
F40B6B02EDCBCC53E18947C80997CE7C1CBDDA81E692AACFDCD705CC> |-
/i <1C60D8A8C9B854D0A3953AFCE8C1406E3BFABD73B69C38D5750D88BCE3F7
7596814C817C09B3395635250AFA93213EC4EE72A191BADCE782393647968E13
732222EE5D46AE75F4> |-
/r <1C60D8A8C9B7361F55E947F9E21F0B434C34045163E32B2BC352C3A1722C
12DFE6FD8572C3DD6DFC0C10B9829ECCFF7E8CEAED49B8C9A7C8B1B2E75044D6
D1D665FEEDE7EBC1FC5CBC9C> |-
/t <1C60D8A8C9B7361F77FEB56FA79A7366B39321CF7A40560F467ABAC2821B
662538C8826AB5BE9687A3B861AC977B8A4300D17BCBE16174460B32BE1D52F6
E0BB9BB2D877DD5AA658853B47A0D53E43360DA2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYD+UniversLTStd-Bold /Encoding get
dup 68 /D put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 114 /r put
dup 116 /t put
pop
%ADOEndSubsetFont
/GVGHYD+UniversLTStd-Bold*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A 2{/.notdef}rp /D 3{/.notdef}rp /H 
6{/.notdef}rp /O /P 3{/.notdef}rp /T 2{/.notdef}rp /W /.notdef 
/Y 8{/.notdef}rp /b /c /.notdef /e 3{/.notdef}rp /i 
8{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
GVGHYD+UniversLTStd-Bold nf
GVGHYD+UniversLTStd-Bold*1 [10 0 0 -10 0 0 ]msf
421.918 692.304 mo
(Dir)sh
435.508 692.304 mo
(ect Debi)sh
474.418 692.304 mo
(t)sh
%ADOBeginSubsetFont: IAAAAA+UniversLTStd-Light Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /IAAAAA+UniversLTStd-Light def
/FontInfo 7 dict dup begin
/Notice (Copyright 1987, 1991, 1993, 1994, 1998, 2002 Adobe Systems Incorporated. All Rights Reserved. Univers is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Light) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 44 /comma put
dup 58 /colon put
dup 67 /C put
dup 68 /D put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
def
/FontBBox {-151 -250 1000 957} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-15 -0 722 737 502 517 692 707] def
/OtherBlues [277 283 -198 -192] def
/FamilyBlues [-19 -0 720 741 502 519 692 708] def
/FamilyOtherBlues [274 283 420 421 -209 -190] def
/StdHW [60] def
/StdVW [65] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
20 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/comma <1C60D8A8C9B854D0F87DD114E64A81950ADABA1665C908A94630FC92
1218AF92> |-
/colon <1C60D8A8C9B854D088FC013F90DF8BE7D5CC589EC8D055A3AAC8B17F
CF9B674DCF1FE8CF0B1FB13469> |-
/C <1C60D8A8C9B64EDF7FBA5F4BD26FD6318D0FFD8813873BF4769E25F75773
807DAE924FFBE924291BD894812B1005E5C5318A034BB13397F250506A181890
665414D359C29C077BB8782365E83BA48C1DC5AD7345C44739E15DEC2ACF27> |-
/D <1C60D8A8C9B6079F1E112A411FB4ACB84494CF6F47373CFA5311A5B16F71
8FE36EFD4C76D3C5EB2BBED9358641094FC51D623C60ACD4D6188D1332CE54A4
89C2EC0A2CECB44CFB2707EACF5F8E77DA05CB> |-
/T <1C60D8A8C9B7EF327C10274B068D7840E7725738B621D67B9BCC2A026C30
9741A7AA47A72CAF0A0903D2C47ABD894A4489> |-
/a <1C60D8A8C9B7A73D3288275B389C45E81BC14002F5254C95B8DF569C3907
C86C1C224AB8BF0A580D3CD9B35C65B1D533C65413A37ADD09A2F7E17C33485C
3861A988CA006096262040ACE0516F9D201BC33571A9BE32B18D3A6EA8096E49
4729504A8EA586276D94D0F490FE3D0BA534B61EFE232B6B67D3FF542D52E5EC
9B29447DE4D7352676506870EE15735C63CE11CF59AC6D586F09B90E64BC5E84
AC> |-
/b <1C60D8A8C9B7EF32A0AF12CC7B484E148BB7A5AF6E8A97DFC60809FFE6CF
C736E32FAF4C71BCB0559B52C52333A51819F4328AB5826E2FC98C1682FC550B
BA86FFC50CBE8E2F784A4301A348BA8CAB0FC9D86AF4E5495361BBF9AB79E903
5B23CAEEE257AB44A71A224930DE30292FD5895C801EDB013E53E918C8370DC2
81D1EA10951360DF41A1C19C3E> |-
/c <1C60D8A8C9B7A73D3288275466FF2FC15B9B7D454964415DF8E6FFFEF995
0F14E4274BD8AA7CE0327F78DEBAA4D1B10C74D4D59883BA361165346AB0E274
E58868216B7711EEAF59AB1FDAA65C8EEE50C8FF00013536070853> |-
/e <1C60D8A8C9B7EF32A0AF12C356850DE8D8482A1DED4A8148D9C789100588
8732F0CAB4F8FD8E312557325ED5595166C16B657D7F4414282FDE7784EB3381
EE265C8DEF815E37BE5362ECC1BCA79009A13AE82CAC2D4A074C6D72BEA81057
6F012A987E76AE> |-
/i <1C60D8A8C9B88C082599D5E943A55C88E058019932C0A740A45D2764891E
2BE7848F4008D4B047F5A2E9637246DACE61C07640B266E7917D625E0FC482F3
91> |-
/l <1C60D8A8C9B88C082599D5E89C8BD9F5B80D41B48460FBFDA12D9BAE8B98
62A8> |-
/n <1C60D8A8C9B7EF327C10274A3CF9E5CCEC4692781856B6BA5F69F1B607E0
FDBE3639E30730CD50E78EE44AE25C8ED8FCCE185F3D70EAC05E635FD472D05B
4D9AB452B17DE70017C5C76CA2EEB6381500D29E675C7DB9CED2CB357BF756DD
E5CFB2> |-
/o <1C60D8A8C9B7EF32A0AF12CC7B484E5A936FFA6C4263194474ED7165CA11
B26153A3E19016C1EA48AACE98D9D99DA3A231AF1F97A789D9063CA82914B197
6B13D7B4F843A0B029544F6E58BD9494AF1958E5704C3EE2A50E96FBFEE86ED7
7F> |-
/p <1C60D8A8C9B7EF3227E37316635635D7BC82E494F41F6866FB99A8F40C82
647B5D6FBDAAA177247ED4C090346472979E905794A2C2BA70B2EF4A49939DDB
96756CF03DA119D06C62BE7BC66AA24B40BAAFB8E529A616B7B1F41BB70BBAE4
B1FCD4BDF0969D28BE06597CBA5807250B9E20D51C8DDD61D1F6372A1FF4E64C
5D8B5896E83CAD634385> |-
/r <1C60D8A8C9B81F2C6DADD030A4CB3676A3B6E19A7F5F82333E621B6E51E2
3179690F5611DEB0EE91A3AEAB9C12DAE2F35BFC086BB10975C979D4F58A09C6
ED27AF5188E8BA6706FE5560C58F940CFA7464DBA98F0E74> |-
/s <1C60D8A8C9B7A73D3288275466FF2FB2B2B0A70DED26E779D487ED6C4D35
DBE9D85354C0B209F7E34A4A8EDCA700E6D321ECB39FCEE48FBC3B2CF493BD1A
A66DDCF926BF3D59F737742C2BB4A1E32205954EFB49412C1B215A15E26F5045
B7AE19BD849FDE920135FD7D83DD67863CB1142463FD0C2F21F41E8EEE06EDFE
F104A91C29A0807F0B372203974EAFE7851FF245823E5F0CCB636A974475E7F1
98> |-
/t <1C60D8A8C9B81F2CB1724358EDBCDE371ECA00241A5802C058CE028E3006
142404101A34AD86F09C31EE519823EB7CC3CD49F9A48FAF9340B280508170F8
9D2227567B4002BAB84C0D3014AF04E69544> |-
/u <1C60D8A8C9B7EF32A0AF12CC939342F6581B5BCF2EEAD05D7DBD824FC814
A5C587A2E757CF0D99C3D74132E5D0A80666B1983F5D6B4DE83ABBDC80520033
403D359812A2E249DBC291DC38A66CDC0A37290F02DC195D6E11F33CF699515A
24B946> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GVGHYE+UniversLTStd-Light /IAAAAA+UniversLTStd-Light findfont ct_VMDictPut
/GVGHYE+UniversLTStd-Light*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 13{/.notdef}rp /colon 8{/.notdef}rp /C 
/D 15{/.notdef}rp /T 12{/.notdef}rp /a /b /c /.notdef 
/e 3{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 
/p /.notdef /r /s /t /u 138{/.notdef}rp]
GVGHYE+UniversLTStd-Light nf
GVGHYE+UniversLTStd-Light*1 [9 0 0 -9 0 0 ]msf
421.918 704.312 mo
(To)
[3.96899 0 ]xsh
430.891 704.312 mo
( set)sh
445.669 704.312 mo
(up a Direct Debit, Call us on:)sh
.94 .73 .11 .01 cmyk
%ADOBeginSubsetFont: JAAAAA+UniversLTStd-Black Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /JAAAAA+UniversLTStd-Black def
/FontInfo 7 dict dup begin
/Notice (Copyright 1987, 1991, 1993, 1994, 1999, 2002 Adobe Systems Incorporated. All Rights Reserved. Univers is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Black) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 48 /zero put
dup 49 /one put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
def
/FontBBox {-153 -250 992 986} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-16 -0 720 742 502 520 691 716] def
/OtherBlues [274 283 -198 -190] def
/FamilyBlues [-19 -0 720 741 502 519 692 708] def
/FamilyOtherBlues [274 283 420 421 -209 -190] def
/StdHW [140] def
/StdVW [200] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/space <1C60D8A8C9B81F2CC3> |-
/zero <1C60D8A8C9B64EDF7E58A698E145702B7453C84874D6A71B904C16515
9F3F138938F022B4CE967CC460272931A14E0FD4DF412281EB0156988185A0D0
D436ABDBBC8F04164BE5DD4A189DA90E0556E8F07EE74338F344173FDCDC7909
5A11B61BB897D4E382FF5089E118B03261C7CAB1CE3DB4702AA745BFA615FAAC
11C7522C47FEF7B> |-
/one <1C60D8A8C9B64EDFA3F30AEA75AACA71BAF6A3C030B5A07BBD26AB49CB
AEEB38DE850166D8EF209C41CA0DF718A98B72FC38DB> |-
/six <1C60D8A8C9B64EDF7E58ABA30C5C47D40F8E3E057D6AD953A063AC144E
495343849C3AD18018C160605BC5CD2EA860EF1FA04E8853468660F48D6B5850
996C9A39D53CD4081AB5843E6BE869F06B7EF23B19CCAE1803297215270E167A
FD1D7F50AB8203CD23CD52D496B09DA858F9DADA11DAF197F8411F71DB3E299D
4C73FD0C9C1A15BB2B7F2985A27E944054BD096D661E0077461342B35D05FADA
2F73E03A84BB3B0F17E984243FD9F9D1487F25DCF8573AAF535AF14D42FFC942
E824FCE185000AA4E8666FC3A12BB8FDE9D4559614CDF9833799E0D6E4F60620> |-
/seven <1C60D8A8C9B64EDFA3F30AEBB747234DDBD8EA81B9BEA2A9CD7B5FC5
C882152A7F6A4BEB8E137E7B8634EE387BD978E2> |-
/eight <1C60D8A8C9B64EDF7E58AFDA493B115E2F290D9E81C1514C8EBD26D3
53EC0505E0840F43C0C1BF0A7077E4F0FF5A2A6914E4040D0AEFDFFEF5F53D80
EB5D7A92B84B5BD31AF4A2AC3E3E24EBDE9EF63362A02D4CFF0D158793DED5F3
470C36CDD2693DCA6C424C537373BFF7A3414F79962A34089C063380EBCBF551
8C6934ABCDD5D71F79DEEDBBAE0945986934B84D2752AC280890B61D506D1BB6
A2EDEE96F7895B56017B1525E075A6E26DF43E8A1D8221F291643AB64536A5D1
BB90AF870EDE75A22487BB7260AB56A9EE41E489734D75F8D8E61CA14F90FBC0
D07B47ABF39DE6C68ED6D71F1C1DCC87C63D1409F9490D4FBD3D6A5ED00C3482
9C6F6AAFADBC4B897BFE15FA7A81EEC7897A687370B38D9285D0833731A9C18B
CD7CBE2B> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GVGHYF+UniversLTStd-Black /JAAAAA+UniversLTStd-Black findfont ct_VMDictPut
/GVGHYF+UniversLTStd-Black*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 4{/.notdef}rp /six /seven 
/eight 199{/.notdef}rp]
GVGHYF+UniversLTStd-Black nf
GVGHYF+UniversLTStd-Black*1 [15 0 0 -15 0 0 ]msf
421.918 719.312 mo
(18)
[9.33011 0 ]xsh
441.253 719.312 mo
(00)
[10.6051 0 ]xsh
461.863 719.312 mo
( 708 061)
[4.99487 10.0051 10.0051 10.0051 4.9949 10.0051 10.0051 0 ]xsh
gsave
377.86 716.955 mo
412.5 716.955 li
412.5 684.265 li
377.86 684.265 li
cp
clp
377.614 717.339 mo
412.702 717.339 li
412.702 683.931 li
377.614 683.931 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.89 ]ct
[35.088 0 0 33.408 377.614 124.551 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 147 
/H 140 
/M[147 0 0 -140 0 140 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 147 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 147 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 147 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 147 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
ZN("k%+5-J!!+k]joC;>!Ab)Z!.k3&!9*tZ<Z7_5c2[l9't41S!!,V*b5eC>!#aVnP5k\Gc$ofe!.k4M
!!>!eDutjrl2UoA[r2;<!7h,P,N*VDYlMZA":LmCa@F2LY5e\4O0uAZf`7KA"::'oZTdaVL&_=EpuNuW
!:g*n0YYEGKEdbCh>d^.XK]-U"KMOF!!OgOY-`6Q^At\B";]DPnn6ANUAtK)RE3.Xb?O-0NrT@gLpjFg
\5E,'JcPWI"pTjiX/ra+O9"AB"d&?<l0VBE!7CiP-bR=2^W;oT\H'>D#9g(NXf]!j$dA[O!!a[FY,eV0
M[\PEi;g:d#8>,Hk2l<5!S%1F!!34]ao/sUa`IRK!07*]!I_ETXT>kDr;_ELq>^QtHaNaP!OQL&!9F1c
HM6I_k3)5GV?#$E![=thrP&ERWYW2H^&S3STsFX!!jn@.cN'sF!Z[i:rMp"*QP/<YQ2gsl]C>d]!qWN%
pAfgG!!31Pc2><Y^<1j*N<&>G!HYgKXTH"L!MKMI!!31A\,33-[VZ&Q!6"p=I.dF"!p05ga8iIF!^4E;
r4`<Kb#dC!SH&^KYH[r,!j8t+nGnCG!]@*_rMp%$XL(WT!;$6m,M__bjoXi43gp',!!3\$a8<UQb)HS.
!6bEE%#hUkXTGt\"2b,K!!3RdZhpd)[<r).!2BMqXnCfRjoY+4#O;AN!!4O\_Y_(Mb@U_SJcPWI![=YK
qlKn/=HigJ!!4=BY5>7#[TKI.dJs=^c0tPl!VK$s!58F7#*-e%^B2HL'[Zo\!!3@S[JR'-[#Yd[!9!pd
!!3=PZhpd)ZAoLL!20AoJahk#joY+C!UTlH!!41K`;@:MbBSU=p](@4U9aZu!Oup2!9=+](ne)0Wr]YD
WW:BG!XZ^4r8n+En8e]H!5&:5",P+s^B2BX)q+ec!!34H\GNB0ZCMfp!0dHb!I(sKWrfMq(]+2a!!E9%
!d457joa`7apa@3l2Ul"VoS\L!m-E,V#]'H!YCU'qlKq.I0R4^_>jWLPHt(d!jm=ZblFmH!XYUkr8n(D
nVZ6)R/d:A_8?)a!R5'G!/1CS.'9`NXT?"6M?*,G![k(Pql9b,<Ls3G!!4%hmJQ)JkjMHU!6>-A%@kH8
^B2HG&'"[W!!3Od[/6s,[>YOK!2';n$Al(cWrfVc%.=1T!!<C^nE9c4!TiqRTS!7<!!47M`;@:Na`7EM
!9*t[)Pj\9XT>nAX8pNG!ZIf;ql9b)AAA2V!!3A?nbhMNkjDU'!2]_t!fkD"^B2EO($P_W!3uS+!IqTU
XTGkn&`!GY!!31M[JR!+Z'#^h!/U[WL%j^-joac<T*L)NoDeq4Yf6LS!m63"RfM@H!Z%?5qlKq/FoniI
bQ%\[S?_sl!k!+P_Z71H!X5k$r8n(BpM&1YU]:GtI)u3"!lVPplN!"H!Wd/GqlL",U`]X;JcPZJ!Wd/E
ql9e&U*,[#jo>I&n`Ti4!q<c7VuY6G!Y)!HqnE3QUCb*=^&S3BPdL=i!k"1#d/^0H!Xk0sql9e)O:C:O
Q2h!i\b,"^joa`>T`b)jJcGlQ/%W[r^B)GpNWADG![O\KqlKn-@%mYR!!4FBYPY@$Zs^<B_uKiEa7B/j
!pB&IaoJXG!X4\-qnE3QVA.nfS,`TmJ%#6V!je+'o)ORH!X!qZri?%!!jRq#L]HuG!JpCFjoY(I$_.4R
!!4+F`;I@O^<:u0!6P9C(SJ)2XT>tN_uR4G!Z.H4ql9b+DqG&a!!3G:nb_GLpMoO"i;ft[!JS\n^B2?Y
,2iNi!!.8QqlKq*SfID'K`D0s[]B>,!jJ48M?*/H!s*K8kPXHDn@f=&!8IPU&?3_I^B2N=#."<N!!3Xs
[JR'-[XeV&!42_-%[OHuWrfYY"ks$M!!3D-o).VPkO=N;mf87G!IW,g^Au+O]ISX8p&G,0\biK1YcB+<
!9*tZCq';B!j8LLX8pNG!FYWujoXr)+M[ug!!3Y#anrgSa.O!o!2]_t$]DIjXTGkj%d<tV!!3Oc[/6m*
ZAf@m!.k4L!!<J!puVG9!V<"I!9aCa+h#>d^B)N$V?#*G!Z[u@qlKn/BY"2Z!!418YktI%[V*kcX8i;B
`:!Qc!pB,aiW,;F!KG4u^B2BP)YX5a!!%BH\,39/Z]l2`!:BgfHaWaO!jRn'TE*[G!dXS&rT44Doq;Dn
!6,!?+LB&a^B2Q=#KZtO!!4(4Zhpj+[t"\=!1j/l)P=;3Wrf\X#4V]P!3-##$G,j+joP4.j8bJG!X+/!
qnE3N]IipZJcGiSFh%=N!jS^ONWAGH!X!PQql9e%V^A,<fDkr!pA<tRn\u0L!5nj='VWSE^B2HI&'FsW
!!3^m[/6s,[>bUP!1X#j&<='nWrfVc%.aIS!!JMZjlY\.k2te"Q%oA1!!.#^qnE3K_E47fh>dRb\biK1
YHBXb!6P9B@(,s5!j/OZ_uR4G!`edSr8n(Icl:U;U&Y6%Q,rj;!lh&Lm/W.H!XXUhqlKq,P7N6Fq#CI%
KX:QV!j[t"Q2otG!KQaJjoY+N%&s<S!!4IW_Yh.N^<;35^AtnH![">Er2g(&\9%f$!2ol!+Ju=>WroB1
F9C\+PQ1b$f'WCt!p08rq>c*I"98E)Mokk2!lVMsO9"SH!X!hZqlKq*UElW8f)PjSHaWaO!jA:C\,aDH
!sXJLkPXHDn@TL[!3Q;'*37'U^B2NA#N5ZO!!3t)Zhpj+[tFqX!9!pT!!3t(Z2:R'[=e_J!0R<`#-IFm
joY1C#lOaT!;lftEm+?p!lDW*OoX\G!G/e<XTG]+.]*3q!!-W=ql9e#W@>CY^]4FAq;qP:!pn\bc2apG
!YhNNqnE3QU_;\fQiI1!PI14h!jn.%pAfjH!>1FoZ2:R'ZB5ZV!:Kmi$CL>Gr8n(OTEChegAh<WBZIpd
^B26j6F6a5!!<7+[''>/!jAmja8iOH!s)T1XSf+#Xfsh@!1j/l6gEq6joXo,..@4o!!3FnaS`dT^VmE$
L&glH!XFRjqlKq)TH0I$i;`o`LU6lY!jA18XoQZG!g<9=rT44Dn&uB\!4W"1+h,De^B2N@$.f0Q!!4+8
ZMUa*[Y"kO!0@0^)l'Y7Ws#e]#QOjV!;c`t$G>s,joY(:"-`fK!!3:VaSW^R_nRq)!7LoL"*M$KXTG`/
/%bks!!37EZhpd)Y,a)"!3-##Hh?M!joXu(+liWh!!3k<`V[COa.<n=!9!pP!!3_'Zhpj+[#PX`!0.$\
&Y--'WrfSc%Y=]V!!<M:oB#r5!p0*?PlTnG!Wm\iqnE3K_aCF(d/X4KCUX,B!jAgh^&YhH!Wd&Cql9e#
Xuau2VuQm1m-+B0!pnA]joCVG!XP+5qnE3PVAB%/JcGoR!!\.bqlKq,Pn9#WlMptjKsUZW!j\"%U]AsG
!M8u^joa`<Ws?-7_>jU;anrgS^r/mi!3Q;&9=F`"!j8dnhuK2G!DBfsWrfB+5kG&2!!>dVkiVj+!p\Ys
M#d&G!X=b-qnE3N\M'NSh#IKZJ%#6V!j\^QZ2huH!X*tYql9e%V('CaZiC/Sn`Ti4!q<i;g&RcG!ZA8^
qnE3SQOE6^MuWnoT!S<r!4Do`#_W3P!!3n+YktI&["\jR!94%\#.O+!joY:@"KVUK!!7r!^AP_I_S.tE
!4i.3GIXaPXTG],0@U!!!!7>PWr/n!Xf=&<!0R<`EVSYnjoXo!+T)5u!1j/l&uWhJ^B2HQ%e0OV!!3Xq
[f!60XgF<$L&glH!Y1I%ql9e(P73l[i;`of\Foa]!qEE*XoQZG!H?3Y^B26j7D]&7!!-W>qlKq'Z9?b=
U]:F*[JR!+Xg("R!0@0]I/3[%!pT2>rW%NMqZ$[#QHB$=!lMDqPQ9kH!X".bqlKq)U*HT:df9FOKXCWW
!jA7A]E#YG!f6[6r8n(K_%G#oWW3*(aM@_g!l2rfj8bJG!`$/+r2g%'[T</'JcGjIZ`O)*!j&b/N<&>G
!_DbDr8n(Flp@BGf`2'TMTYh2!lDW*[K+8H!WdYWqlKq(X")6lYlFh+HF<XN!j8INh>j&G!I4>8joY"u
)"IZ_!!4(<`W!XO^B2HL'Slb\!!3n%Zhpj+[#koi!8dbX'pZ'$WrfSf&?l/X!!<;!p#Z/7!p0'B_Z7+F
!IN#e^B29j8([g9!!-oGqlKq'Ys%FRNW9)q[em*-Xfjkfi;f;H!b_)er8n(Jf-p7kL&_;dTZ=hF^B2BT
)N"Ob!!3Rj[/6s,Z^DQ"!8RVV%?7[jWrfPm's[h\!!/\^r8n(Bor5n1ZiC/BcG'4k!l2iRg&RcG!aWC=
r2g%'ZUaE`MuWoa\>oJ-!N`O+7Y:^8!!69ujo"6BlJ=dm!94%\#*I%)^B2<g1op]'!!3@U[em0.Z)oUn
!4r44"bF&XWrfK*/CXZt!!<UonE9`3!q=YUkQ$bG!a<a^qnE0UCA\'`!;um!::@>&XT>q;OT=VG!_p&'
ql9b+>bqGN!!51Hl29ZFkjDB[!5JR8IEVN&!l;`=c2apG!H5OGXTG]/38sq*!!.#Hql9e#X>fhQKE)$o
q"s1TmF!2:!:Kmh)m@9Y^B2HR&tf6Z!!3t+[/6s,[$D3/!65'@(RhZ,WrfSl&'+aW!!3S.nb_GMnuiMX
!1s5m!dDfa^B26j7dpD9!!317\GNB0Y-L4O!1*Ze!GAh;WrfB,4no#/!!63mkPXHDlKU<f!:9af#*6k&
^B2<_0VSR#!!3:Q[em0.Z(reV!6"p>"b*fTWrfK".EVXq!!34Yp&!kQn%KXq!1X#j:W:-H^B)Mknc4IG
!_0N!riH=*Xff0<LB-oG!_'>pr2Tn#[Tf4$hZ*^Ck3;g+!pT2R^An<TIu*`Nb_6.PN4He%^B29c28fLn
!!3sVH,"M)FF0phqlKq(X"Ds(kl:c$Dg&j9!dUWEql9e$W@dH:eGoXS<*R+>"'&IKmJH#JmF3-V_#OO4
aMu3;qSWBMpqHjQFhdtY7'j2PYii4kYHIZ&!P)jY!!5QnYO/LAXoYZ+po=G(B#"BJ0u_GQaofc0j6-:$
!V0@?!:^$k)6h&o^;0KX!l;lLjoF3;!u7E5XhLt4XTGZ46i$f)!!<t+YcGL>pT"@sZ9lD.!sGq%kgJ__
klBrBjoXi76,N[("cUUb^WsRq`3CH'!!3:O\+m):XTGf")pA<X!!3:N['?Y5YFQZk!9=+\P4u6D!qEK!
oDm8=![P@q[D2[T!l2o`kQ'E=!Zn8FZ)n)1[8Hi%aT)A`VQdb7orA.qZVeX@!Y*<CdH9EM!pS]-`;frK
SB1WC!PlnRblPo%p:nhd!lV`+`W-&JNOA\d"0T/E\b`i;[BIEK!jS^Rc2dY?!Xjpmr2Tk"[eR<4Z`V'E
!jALNiW/'?!s5.gjo4BCjm;a8!VP`ojoY(s'(u=Q!!5!m_Yq4N^q?65QiaM8_T9Lg^B)Mo`W-&lY-@l,
!j8P`pkf-E\?Objk,eZn?H)sH/Zc,RWrfB#N;/21S@5TiX4"$L[9giQ!Z]_VrT4.Feb?NT_"R0Y_r_$a
lqbY%!XkXAr4`<NYRgL/!t.Da`PT@k_8Jt$!:9af$')FkXTGbs$hs](#WRaJ_Q<mCYX%[Xf`2'[NO/P`
!jA%#p](C%3/OlVWrfE,5f`p,%&WRmjoP+9p&G1JT],.ek3_:4m+!W-!!5:"_>M%L_m('P!!G9b`4s(c
_#D+E_#D+K_"tkF^B)-drk\ZNrkJ6DotLROJH<jm!]7*ar2g%*S.tYs">QFPXf_Q)s/l(!riPsurN-+'
YPta+Y5YQuY4\mt\8oXj!]-s\rMp%$YF?7"!!G!FYcFi'XT#9rXT#9qXSo1#XKDK)!3H1#poO.h!Od!u
!;$6m0B_WujoP(=o`,CGZh*;AlKRTuk2tmmr947Il2KfGkj&*1!UAnIjoFWDl2^)JjoO`3qrn.HkP"$=
pNc!'i;`ogW5e_L!lM8^r;ZpWHo1s'!"203_8!Xq]=bnn^:X<U#.qXl^q[Onr4E'B^&GbRa2FgDSX[43
^qRGW]E,XYp:g[Ea&;m:bl@ePQF-Ok!jS72r;ZmNCb5Ja$TbMqXJi%pW3*5&VYm=rVQ@80XfA8rVZEZo
riHL7Y`t*+N2O+eXSSgrVl$NgXTGZ38'1f5$C%jnWrfJo(B"47/Scs9!"1fiXfA7qV5C;pWMTNi#,S?,
XK/:qr2'LkVuE_(ZEB@JN/FI=XK&,nV?*Nmp8\7rYt)n9!NttijoP(>qu?d7:EKE6$74[!fXnc,^uO_.
!4_s>#.VeKl0-I&r4E6DalqmNn]h$A"iTlqiOul#]E5Rml1a<AlJjnJ!!37Oa83OP_m(0[!!N?qbg(;3
r;\$jd#T(\(+-E7DA<p&'GD2r)H48j@MKXo'bh>q8BJ]bC``NT"r(IdY8S)ir>#JL'77pr^B2<d2UDI&
!!37@[/-m+Z()U.!!GNr\mtj?!#BLdIM3;*+JQJV&.oKb%M00e8>iq!&H37I&.f@;[]coC)Z9X>&QH00
'bC3S!tYr[\G!$+Z)KA:!9jIb")bIAWrfJo(B"495IS(4!W<!BDRt61&J6.Y\R6!^&eGNb&J[g4[9!nP
&ePZd%mRG'X^<"F!!X$6ZCM^@&cNCG&J,Ii[e?a'YGa)K!7UuMD=?]cjoP(>qu?gOqX[;V!!6j6Jc5WO
$e>2nq>^X"4NckRq>^[_o]k:Q#5eH&4PA0X!!.iKroX%=!q4&Fli>uE!ZJD`qS**LYoEWA"A-SUSHf#m
!__!srW!$,Z-m"T!!<Urcr0]?">%a<P7m`m!Y:j+p](>1c1SgQbA71'!!3q0ZML[)Z()U.!!GKk\Vp^j
!!5L&G5_ID#b\n3q#CL%L:g.T!!Fa\[Y#.g!!3RgT_e`g!!-N>p8nD![p[D[!Z%E4qPs\$Rhkr&"?s&u
M?NkX!^XMCrW!$+T"J%u!!<I[\k2_u"=U^cJe7eZ!XssXp](>&\Flm'[9q,X!t)U0jnn0@o9T:S""`a9
Fo24@3r=I,!!3b`quCa3!!7]:4o,-]5kFW&%f-/,QIl66!!.lLp>uG?nQF*:!X=>"q7d'MYo<ZC"onWp
`5Jktr;[-^c\_l+!"uTbAc;Z2A?%ln!!66P=8i163IQ3tMohb3!!!4FLB@MV-b"8H4T5<`*d)Ip`V$tI
_S8+Z!;um!"Eh0KXTGbt(B"495-_Dc(&\+=1VJ):!!!S(]itC8!a1pLrW!!o_,(%1'JF6:ApUnK&c_n8
AU=FX!$e=OC,>hh";kZXNjA>[!jA[[joFWG!X*SOq5XS#Rhkr&"?s#nSJD)'#r9);!rr<4T=\8*!!65g
2Z<[X9YO:$!#.)$BkDXuO:qTo"_Dr\!!"7=Anj.$!!F0M@#_D`WrfE'1&:n"!!-g,q;q_LQM^^c/ElQ?
%K-8./a8#h!!<ter,_i;!_'mQrW!"(mR$mQ$k,Tr5BH^o"TSN)AW6Tg"=V&Q4<+8""q!CFT^q7-pZ;PE
boY.1!\1[tq7d!KYoEWA"A-PM[NGGJ#rp7g"TSN8ZI*7_!!8#C@K$6.C=?8`!"*#M^:_,$JcPiO'a_=f
59:k*YeJ1erW!$T]Y(rL^B)K%c2[njUp9`t!jS72r;ZsaZ*L/Dr;[-\]m9b\!"bj;>5eL'HIYsn!!6E@
:]:=u:91:hW46sK!"'=4Yr3I;0V,5L<W2t$.B'2FY4Sgs\8':h![FGCq5XS#Rhkr&"?s#nUDj(2#rB/<
!rr<4T=\8*!!7Dn;uQau>eNo3!!Z2uVPC#sF8c.H&YZEe)&Y,uWNfJ&!!FdKVPpTgWr]YCc2[n[\FB=V
!V;WT!!Fk:mG/ER!!4h=LAh/T("W;(rW!"*s#L&Y!`nbVrW!-@Q^O#Hr.b1N$4P&+%0-D=WQ<.]rW!'C
]=HGUp#Z>=nQk#PnGiUmO3774!lM8^r;Zsl`5Snnr;[-]c\_l+!"uTbAc;Z8*]4N0(im72=8i1($QC!&
Ia;R(!!56p_Z%FU_S<n1AGuQ11;Lct^B26l9Cr5?!!34O\+m',Z()U.!!GKjZC_^,!!tEoH34-I&>?d@
rW!3B0+IssAuN17rW!-/(DR[&]3,%4$8SWcYck75Xff3;rW!!MY-@W%rN-.)ZU3"=!WmhYpo=J"Rhkr&
"?s#nS.PW!#r0#:!rr<4T=\8*!!jJr%KI5SVR91u!!W`G'btVr=8i1)0rV7XXf\\)!j&k5rW!!MXKM,p
!j/^ncN"$#qW7P8!V;WT!!Fk:n@Au*!!4b:LAh/T("W;(rW!6=0a[mj@*[e!!;c`t;X?[J!"'Rrm*j%t
b2DU^C]4;9-KjdZoB$,=njq+-![tOppqHmJYoEWA"A-PPTEtJr!^"bd"pFu,'!fnrq>^XTWQN:`q>^S5
crp>J"'*4S`W!m[^q\'&rW!!T^VTKU"2<!:"jm;O,Gh[@XTP]1S/2&'"?s)uNX,L_#r]MD!rr<4TtOY+
!!Fm@\$]$.!!6E;:&Y,"8[#>([C*BEXghL4!!4[QYO\dtXLNQYg&UmJ![=DBpo=J"Rhkr&"?s#qN!K:]
#rT>?!rr<4T=\8&!!Fm=[BiX)!!6H99`>#!8?K#!Za6s=X0u+/!!4[OXn&LpWj[0TmJu;J!Z/`ApuVVK
QM^^c/Eun\!rW*#1@Bkq!!<ter,_]7"<O-.ha7/>!^blgrW!9Kf^8D.q"X1:p1aL+![Zplo&^#8qLnnM
dJs=TS]UW@!lM8^r;Zpod)/-H!"";*M$3kZ'!fnrrW!3i5m./f'W0/WrW!-ZEGfQec>*=Y$6m(#Tp1e,
[DC$rrVupR!PcJ@^B23oB[Qk^#)p"bXTGbt(B"486G0Q`qu@%D]m0\[!"bj;>5eL-2E:m?!"kL.:]:=s
.pu[fO9)t#rW!9FW3VSALkqh0\6/_1!\:CVnZ;kq\6IA]!X=RipT"A!Rhkr&"%'T%3;`a_Ek?T!!!!S&
]35+5#W=XF!!!Up\PE,("tO(f>`Q@$rW!9FVQc/9Knc>([TEG.!\:=RnZ)_m[9CrX!LNKRjoP(>r;Zs#
/E5&3qu?e4s+1.L!u9DbF8c.@'IX+`!!9+_6N-rh$9UI6MtLEU!"':pkG4iJT[N-!C&S)6-04=\joXc9
9[`tC!+O.F^B2<X)uTa<%OMqg!")34b)$9%!"uTbAc;Z2IG%3k!!6la=8i1(8<f0qOM["V!"''jOTtjd
%]I@iA,ZH01;CZp^B29a1["i*!!-01p8nD$S/2&'!Xp:dqu@'dYder\!!!S(]itC8!cGq@rW!"(^eaq0
#!ITgIXnVMrW!93H\)A#!"5+!\6/_1!\:CVn>ubrW%7cGfDkqQ[J$X&YF?=+!!3QQ')V_:40H#;!rr<4
T=\8*!!6uR5Q1Wa>J3f2!!YT<IXHUII/X*Q$$q.*!!!ClZ*ma5!!4[OXo,6mWrfH$.e!H"!!<7,lfe**
!V;WT!!3?@#Q+Q(+QE9LrW!$8f)0Ug!!6'i0)bhP>44fW!!X*UDJF"@P5YF_"*pX>!!B(ip1aL+![Zpl
nE'fAa:Zo%!YD$Fp:g[HYoEB:$PnW?aGC'#!"uTbAc;Z2GLB^p!!69R=8i1)&0`8?34$"DrVusI/cG_Q
0>bQKA,ZH01;CZo^B)Jue,TOZOL4_`!jS72p&GI5HF:2,!rr<4TtOY/!!6lJ9`>"n:;Ka*!!<ZO*#o&6
T;*_3!!+;lrW!'OYHGB;rW!!MXfq2q!OlXi!!3UiZM(=#YF?=$!"'?aZa4oZ!!!S&])Z"5!!6cE:&Y+o
9tsI&!!`rR*#gN&TdB[<!?roj!!FdRXL;40!!4[OXm`:kZt.Yd!s?(*jnIm<o9T@Up](EtK^JMbrW!$8
f)0Ug!!5^\.fKDL@.-G]!!`Q4#R:^@^'FW;!>I'`!!F\$lh5&l!!4J-l1!g:kj)3u!!3:Man<CM_ls[J
!!iZ=0SmK`^<)*.!!<G1dU)nQ!cZVFrW!!Xc;FE<"VRrY_/gOn!!WolS]/@f>Q+U(-bmLd^B26k:$M`G
!!37?[e6a(Z'u-t!!iT6.X8#$XLE?O!!<Ct^/Y(3!b8rkrW!!R\k2_u"V$m.X^r7G!!WfbNO#[s;>pOs
+g%s:XTG]46iI)=!!37>[.UI$YF5jq!!iT7.<qhtWjHpJ!!<Cr]Mne0!b&`grW!!R[n->q"V$j*X(<"D
!!WfaN3K@l;#UFr+fhaDX7N@nXft.B!!7<5kP"$=oT8eI"sA6?n`KRlrW!$)ec'@`!!57PS,NBh4PDdj
!!Sbfe8PBfr;[!ES+5Y8@/^--(ZaiLjoXo,0@g+)*OE`X^B29Y4SgE9950^3a2#I0P:@q-27:\Pr[.c#
cD:Fe!_9nBqBlh=Z,=YpH9<Q&0OgWj^q\!3r[.bB^VT?Q!m?<"f)PjiTX4<n!jJ:SqBH#+=Ug+l[B?X=
JgDWd0Vc3orZ_Jf\s<7>!^<SpqBHP0S[#W&C,7(Z.TDD3Y-#-FrZ_J4Xfq/p!k<CSf)PjhT<\?qq5XS"
Si$9g%mX9NZ*UO4Z@O;H,;>h$C&T=YFL[S7,6C$+A,7D]2OptXVeIt4,:QTMY,n\2B)X"V7'!HXWrf\O
!TX7Q!!3J;oC_5Hn>5k4#+"0@kN;B%r\"@=g%UF(0*5bSc2K?t6c!F20*JBIpsi+;0*XA'i99=pKDmM*
9]YF+joX`<G4u!p!!._po=k=AbPKHbaiD9s^BhQkbg"DU^qRhfblYht_Z%d]b.ksmbmV_1^V@S'bK\;U
a27hj!PZSQblGlX^\GPEa]m?s!HbgBXT>T7qRH[:['9M2!N`R*\HB@EXL%o:!j\o2rj`*>Xg@l7#.Uh<
Xff"?rj`-=YcY#/XfSl.\H')(XT>h+f)Phm[.C=!XL@u7!k#>:rMot!YPu!5[]HL6rjMs5Wic90"1>27
\,3W=[]HO1XKf55[fNh<ri6("Z2V34[-OanZVT0Q!cI_np#Z;:m.^2SmH=K2!Ti_Jp&k!NjR3$@!qPI;
rq6EdlLF]D"RG13kk+fH"mkF7k2l(2p&OaOjoXf,5M,r;'X#FJ^])"D_?%KgqnE-HrPAWN^VTod!l2Rd
rPATM_>1tH^Au(J_>qCL^Au+L_>qF<^B2NC#MoIY!!3b%Zgt3uYPPI(YHIc)!3Z:)!j/T-ricI,XfhZ-
!jA`/qQKt'rN-+'YPta+Y5GC%Y5YX*YNr:l[YG%W!9aCa&XorpWrT9uXoYZ+ql9^urN64&X/u<'!j&H(
riQ=)X/u0#!3Q4#!N`F&XoPR$WrT7#XoPTkWs#K(["\b;!!32,naklCkP+6AkPXHBkl0iLl/q-lrosRL
k3)^.!U&_Cl2^#HjoFZDl2^#GjoFWEl2^)8joXZ<PM#p;#*$^C^Xg.$b%Lh1!!3:O[b7e#XTGZ7>M9&Y
"am]EX08Q*XL26c!!34En,VYBk5"2HjoXc8<9jPR!!60A_"5;A^;]lj!QW$a^B;<h3<7h7!_Kf&nuVnu
ppgF5YJmX6XTG]/1@tS1!!5d!XR`ClZ1ta.Z`Ud=rMp"%X>8N1!^5i4oB$,<n*Tu>"7Z!MkK`5SjoXl#
38=K8$C&X&^B)-Kq31uHZHC&D^XU"!b(&1H!XF@cnuVqqRJ;R>T=;&uXh_%>[rL1'!XOCanuDemQMuU9
K`d($[B?p<!OZq%!!/5SoB$/<j0tf\V$3Zn]^>1L[cRVdNpQi9!!-QQo"P7Aa&;[4":RMoahG7!!Pl\T
;r%ES<k._&!j8n%p](F'2j^tSafY$6!j8k"h#IIU[dpI#XKb=k!!EWfQ*dRIX4sZVXKb:O!!5d\kk!p<
m+*QY!!4IBp[I=cjoXf45McAA%[kB.^B23k=n_mu!*I1UqnE0I_>V.M_8,r_!PlPM^];4H^B;9f_8,u`
!PlPL^]D9em(WY:acQne!!3Oa[J?s$XTGZ4:\Fbi:U@8%XT5O$Y5ka&XT5O$YPG:&Y-5%3r2ft%qQBn%
m&^Ak[t"\H!;HNq$\l"YWrfB-:A+Yh:9^ktWr]<(qlK[qqlBe"q5XV!XKAT%X8&d^Wrf\Y#5eJ]!!8#O
jn%U9m+=,f!!6$ZlMTcEkPFHEl0&$-!9a4D!9a7A!9a@H!9sIE!9a.BpZD23!p06+h>dS#bON=K^rKXW
!!>-156:]_!F*_E^B2-VZMh*2ZEq7C^B2-UZMh*2ZGji]^BD9YZa.%<^B)$TqQg41^?`N7b%ff6!G].7
XTGZ4;#L@q05riI!!,p*r2g%%Tq;4U!hZ-erN-1&TV%nVTE:^k[/I*1Y,n@iStl7d!ir#er1F+`TrdR^
!OlCm!!-fBnZ)_mYtt;u!\SCLqu?ao[Jm30X/i7nT)G8_StE%]Wrf8mT)G8_S[#L!Ws,T(TUq^KrMp"!
TUu(R!hQ'bl`1&o>i,M^Gkggk!pnPsr;Zm575+Q=!^H#6roO:GhRWNm#.rgVk2tm\qR6LcoDRePkhH*G
"i''[k3:Im[fX/"kO%C5kjM@,!!<32V8r,@!l2i[r;Zpj`htWk!!4OW_>_1O_7+;hrF-@HBstjm^V[0e
?XdDN@U=u+_Z%:Y_m!l`??s3"^Vd!]@/OI9?td!cm(WVCS-nrili7(oPI9q_!j8n,r;Zp`Ya-m>!!4@A
YPtX+YbYT%rDO;*>,AF)Xg"<s;,^=h;bqhCYl:a5Z(>)q:M?`2Xg+0m;>a>p;-B^!nu_ek!k+!mi;`oe
P-a\Z!j&Y&r;Zp_YEUX;!!4=>Xo>@'XeK-!rDO;+>,/4#X0.mm;H$Ik;c%h?Y5YI1YFJco:hZc/X07ag
;Z0Ms;c6bmY3`1jZ\\tH!!3M7p@78Hm+=2o!!=4E^Gc#j!Y`E;roO=O]ehD@0FBHp_<g=Hn>\,p0`<X+
Nns%#joOt^r\"LBc0aZaTeA(s0EWshe*QG`!q_ZWi;`q2bJ*M]!l2i[r;Zsf`QaqWr;ZkDbPo6X`N0mT
!<)s+"0KJU^W)`L!!!<2rW!H^[_okpaINP9!%tau^WD3)!!0(=lb<JCH/S`)F1A=AXTGZ4;#L@s3jH;V
!rW*"Cq0JH!j\1*qZ%!,S$B)t[#"qd!!WZ,!"UKRZ)t.9N!'+\-)7`I[WV?F!L^:[XT>qHi;`q![]9>-
oW&%pYtt;u"?EZrN!'"Y!Gf.CWrfMl')MY:"IZHoX0RNc!!!3-rW!HWUT^`!Z\nqd!%"ACX0d$E!!/Ik
l`1&pC@;/o!!7'5jmhI7m+=2o!!=1as0DP&!J1"EjoP+Lq#CShn`K!-M"q#T("DX5k4GSM!!Kk&k4aE%
!!38ImHis8k5k!UiW'$T_nkiW!l2i[r;Zsf`5nS_r;ZkDbPo6k`2t*]!#C*HMiYEa^V@aZ&HDfQbY%j7
&Z*O_^W2rX!!"md_nX'lKnr(p!!Z8XLUk79^[8c;^rK@J!:0[e6a3c`XTGZ4;#L@s3j?&R$iL&+Cq0JH
'sa5E!!!XNJ9uaDY-"h4M[TRcBt$>+!"kL'Xf]!k$ig8XUp7&+STK'7rW!'iHZl?ko<%hj!j8q'irB-I
Y-%2o!j&Y&r;Zs\Y-a2tr;Zk6[f3<BYa?:.!"s3uH$uNjX/iL`%0-B@[6OWj':#l(X0R]n!!"OEYH+gq
F*9JB!!N?kH$#mbl`1)gZUs0W![lmlnE'f=fJWU-!uoD\W;HVrLA(W/!VE5f!"&a/C1D#'lK77&MuE\[
>h1q9!!<DImcN[(W;Q]$]CG%PZr9m5rW!'Q=^'GBlfJ96n4r$E!X+J'n%Sq>a'/EA"@L,KT+Cl#!I;lf
^BDKW*rl9D+0<Dm^AYed`L[YA!.F';!!!D/`P91.T+Cu&27UQ=^VIe0AGuQ2G0\"@lG!G8bDlYc!!37M
[I:4!Y-_%)!!N?`YdTQ!r;Zk7\GiT:ZC)O0!#V')V5X?p*4(P3!!%)h:]LJ%S?f9![>kXq!%XkMXf\b1
ZrR)*!bf-Jl)b&h\:4P@!!3:MZi-rrWrfB-:]17r3Nf`K$iL&+CUX5C$*]d7!!!n&X/)WkWuSC&%0-BJ
cqj]B$(A*!X0R]n!!"OEYH+_*Y-M(,!!6fBXm)kgWj[?Wnc8:^!s3c:kO@U8m+=2o!!=1_r2BMn!J^=I
joP+Nr;[.VUmS(@kN:q#MuE\XK`=47!!UL5k2u<7r;[)7n`K#kb/GS(!!Hc^alDRNjoji/pPT(6!!63D
_!f#>^rKXW!!G[-aIs1D!!.>frkB>hXWINC!Y5qU5J=nJ^VucV!!!f\"9C6X`W!UWa.EnC!&_:(rkANN
`a\oI!d)W$rkIa5!Qo!8!!5g&Y4&IoY-_%(!!G?e[ZCmq!!-lFriI'DR2>o(!XoPI263p_Xg<oo!!!`W
!rsd;ZMps-[>kXu!!"OFZ2Uj,YHq1,!!6cBY32nf[oh_l!_]o%n#HMkYtt;u"?EWlNstse!G](BWsc/!
)#sX<$kEb'WN?W1X0IQl!!!`V!rsd9Yl:[.ZAf7m!%XhJri6+&YuCW%!bJgAkGnWk=QKMa3:#esjoXo%
2>mLY)p8)Z!!)uu!J^=IjoP+Nq>^^8hs0@dp5AnM$QgGj!""bUkN:q!W;Q]$]CG%GkNq:WrW!"<q<@,*
!pAl>jo>GbNQLk.qS**Ia'/EA"@L,NTFCc!!Hu]d^B2?U+8Z$C+hYY+^VucVqu?g#7'FT/^B_fO&-)\f
\AS<\!l2carVut@b3$G?adWM$!;lfu!I_EEXTGZ4;#L@s3j?/V#lO`(Bt4/E!j\42qZ$j?WirP,Z\o7i
!!<6^S[8<t#ITR#!!"OFZ2Uj,Y-M"*!!-]@k,e`oM$*hB!!34L[-jsrXKbS"!!G<b[uLdn!!-cAri6+)
Ql5c$#99\EX/iL`%K$2.!BQ^Sri6:0N=5de/#0<IWrfB,;uQatA[V64nZ)_uM$2r@!IOJ,joXo%2>mLW
)pJ>bqu?bNpAX1ToVMBa"r,qZk2uAqq>^a6V"3^2k4GVN!!Bk'k2ld.l/F&h!!.!2k2l^;Qf\8L?HL"N
^B23k>5\F'7Ei55r;Zm0T#L]D'#^mo!!!^UKR]0"^q[Y'Se1r&&RMV:!!!1_`kT:/T+Cu&27UR'^B23i
@f??.FNW^[!Qf6B!!6$*Y3rCnY-_%(!!>?mUd4kY":L3qXfWnOZC)O0!"`aaDh5$nXf\pf$ig9.SOWY[
"+7JXXgO/t!!"OFZ2Uj,Y-M"*!!-]@jfJQl@-7Lk;7!@lWrfB-:]17q41(bJr;Zm-N3WA_,d<XR!!!UB
Ec$?-XK/D,M[]Xd<1?>W!!@SRX/iOc$ig8XUTaZt!j&V)rVut1[H4FiZsVtr!DMq^l0d[8m+=2o!!=+G
`\[Pn!XP=froO7RV>^H%!C]p[ETZKIk4X`4!!6WR7K*8jB(P0IoVh]g!P@n$joXf,-N3uGDYE5T!pJrI
q#Kma!XG.7mCr_<a'/EA"#,dA%/g/-35E?/^Bqi\*rl9_Xhq]arP',eSe1r&IHudl!!%)]^V@g]&-)\f
\AS<\!l2carVut@b4!+>^B2EP)!M#%#)K_TXTGZ4;#L@r.=G&"r;ZmQY-.c+$*os9!!!k&XJMloXVS7$
$ig9KeU%;s!+N@<XgO/t!!"OFZ2Uj,Y-M"*!!-]@jfJTkPSE?^!X=CdmAg;iYtt;u""ARn$N0r+0W_AT
WsQ"t)#sXSQ)UOUrMp=2M[]XdERT16!!$I8Z`C.4N=5de/#0<IWrfB,;uQatA[UX#!j[t'kl:eeNqh`(
joXo%2>mLV%8T7e!!4J!lMfoHoVMKd$%JM/V;g\#k4X`4!!7`OD#OD<4nRn!oVh]g!P@n$joXf,-N3uG
DYE5T!p0*FkPtZna2%)W!l2i[r;cZo!^3p/rP')cXWINC!u;ak.^?k*^VucV!!#<!)?'UDGf[Y7a.EnC
!&_:(rkANM`FAfH!HcKF^B2T6!U9Xd<4/n*Xn8^sY-_%!!!4sLZMgm?ZC)O0!!<iJ'-s3SXf\pf$ig8e
=V^o9$YZrMXgO/t!!"OFZ2Uj,Y-M"*!!-]@jK/HmGk1q0!!6-*XR3%iXKbRp!!5!LYPkL:Ya?:.!!<iJ
'-j'NX/iL`%0-Af=r%#:$YcrJX0R]n!!"OEYPtR(XKYY&!!-Z=kc=Z_!k*:Rl2UlKmHEs"!pnPsp&G./
[.+%V!VE5b!!WP(nE/m,MuE\X)E/''!!Q^#k2u<7r;Zl1nc%YPl/F&h!!.!2r9!8+!V_3C!:Tsi3Q8i$
^B23l<;HRu&/n?;`kqYg!lV/UqZ$j-Y/A#h`LR83!"K\`Bu[s'^W2oN!!"U\_u@CP^r9UY!!.)_nA"Y2
!l2iZlMpuAZ`i_t!j8n&q>^[-'h"(gYl(U)ZBu1"!!`e"Z)t.7M?EbV%M'Fa['$O5[>b7g!$e;EriH=+
Z;(B"!WZ`>jK/KdZq]id!\pp]m&L2hZ:Xlm"Ul,5Nj,\aWrfMl&GlG4#b%rtX0INbqu?d/).!]VXK/D-
Mus%[,bqRBWrfB,:At4o@^Y9t!j&\%lMpu=jm29q!pnPhp](FPT&]8#rT4.RT`+rh!!Stak2uDlq>^a)
J+Vpdk4PPK!!0V#roO:HiYqdr!G2#djoXf/60eLPDp5r^^BMElE[NIl#VI_\/n]R2bJX4l"2hE4.K(k=
.Qk#R^V@^c3[ua5.6;C"\&H(r^W!07.k"E0_Z%:T^r1LH/1cRsj1bZ;QNujW!b8gCqQ9@k"0StA,Prkl
=DO84Z2:X*Z(<s%r?r7(25%1UXg43I,q(,d11#%!Zi7'3Z^3Hp,>"f;riHF.Z"YF1-?uoXXTGqd"nhrj
!!-Q<l`1,hY[f!W-jD%I=DF/1YPY@&YFR^"r?r7(1nLkNX0@gC,q(,d11#!sZ2Ud/Ya.$j,>"`7ri6:*
YA#4/-?lc[X8Aq!["S\M!!-j0lfJ96h-Bh1"Y_`%ZgI>\joP"XqC`%1Z0pc:nt,b4#r+,@hXBRgk4,kY
0*3iGn,DGNki5P>0*-k"rT<>+!p006li7)[a2.&U!ku\!qof,^`PM>a!PlkTbQ5o&rP&BLbPfWebJqK9
rP&EJ_92o(c,far"i\a1bf%6U^B;9nD#s&)!^O)ql)arlqRH[7Z`j/+!Nrp/\H9:DXo>F'YIOPA"1Y_D
Y5PI,XKT.E\[J[<XT5^,\H0";j/iBc[peY(!^O#ml)OfhqR6O3Z*!f%!N`^+[fNq=rMot$[f*Z;[^*-=
r2U"'[^W`QXS]$uZ2V35Yc?`a!j&b:m/R2<jQlC!q;q_@o(ht[o]l87!TiYCp''dDk2tdlqXss\kPaND
jm)g<!U8_DjoG#Pp&XXDj5pF+ok3^n!rr=Mb36S?_>;%K_"PMC_>;%G^\bnJ_"thF_>qFK^Au(K_>qC1
^B2HO&+0DuDn"r4!3Z1&s/u't!3c:(!3c:%!3c@*!jAc0qQ0k'Yct>-XT5O'YQ1j!XmN4l[?:sd!!-rE
kc4]bqQBk"p8\1qqlTq$ql9_!rN64(XK;9!"0J`/Xo5="WrT7#XoPQ^WrfVi%.4)sDt<)UjoFZAl2^)C
joFT?l2^#GjoFTDlM]uJkkjKBkPaZGkPOBAl2KrJki1_,jnGMRmf3Ad`mqi.^B)N/mf3DZZEEJpS?2h%
F70)07^2ilLoUQbEW#n/!!5"7lBCB&joXZ<EUNl.N68$4hnK33ZMkd5!!.MX\uj/X!OSO!(@hG+HaV/"
\#TP8T)KMr!!7NAjl>KujoP"brXn`%!`R+Tp:l['!PZ_UP5,+T!!5d"Y)BFYXT>N4rds_A!_K]"T<%+T
!NNR,Jb&jC46Pmmk4.R6p\p$A!!4X^_YV$L_VN'/_u@mP!!4CDYkkK<YfO'J\b#k',GqX?WrT9QY-bA2
\+BY%(=2CFjoFT/lCmJCli-MJ!!6ZQ_#1qK^;8"lc&BpHf(oCD!!600Y5GC'XKT-t\bEZ6_Xmg0<OJq+
Wrf<'[\pUp\,O28!!5U[kPXHCjm0MOd.RJ6rr;Wk!]\$5qnE3PX#A9O\0pqL!]%!aqlKq,R4mSFUa,O4
!]$p]ql9e(QnS1YO<aDu!A<C4m/,oGoXg#7r\+7*o`,#4c2,0UbD2\igAh7b])&N0\9P=[`rH-M\GE6,
[WfalZN(#1pA3nPpkIN'TE#$K^;Bc^!lguPmf8:H!\CCUqlKk*!Ke%K!;?Hp/#o`KWrfPe':8d[!!4Os
lholHjn>"@!71]I!d2W]^B)Q!^AtnH!WcuCqQ0e/ACCOW!!315[/-g([q"S$P5kZ+p?2A9!pK2XqZ)3J
"98Ec`k_Jd!lpc<O9"SH!]IBfqlKq-M[?0Zi;iTP!]@6aql9e)M$]OLirB-3iTg=&!qMNUX8pTI!["Yc
qnE3K^F[,"]Dr!OS[83q!jA[Odf?<H!ZIQ5ql9e#W[?m/PQ1amZgdkS!q"VYqZ)3J"98F$ahdkh!lp]9
O9"SH!_Kf'qlKq-L^9dVf)PkDZ`X,*!jdUe\,aDH!^,`5r8n+EnV[Xr!3cG)-FLbg^B2Bb+l<9i!!4==
Z2:X)ZDJW5!/LUV+JH"<X8].$Yb`=q!:p0l%)DB0joY%l$Ch+R!!-QOqS**SN<6<ab5_QD\,*3.[snIt
!4Mq/<OM\(!k!IYfDqZH!^c/8r8n(Bpl+M=O8o>/\A\9Z"NIS[!!%TNqZ$[?V6^!#!jnF0PQ9kH![+;C
ql9e(RM)P!df9FWa79&h!qir,]E#\H!Fa(G^B2N$!mgqJ!!63/Y5>=&[V5d'!1*Ze<3iV&WrfYB!VcYI
!!#Lik3Dm,!pB<'Mu`;H!]7^0qnE3QSdV1ki;i`T!\CIXqlKq-N<tgLk5YQ7X02?#!jdglVuY9H!Z08O
r8n(Bp6N;j^]4EQXMt(O!lVVscN($H!Yh*0qlKq*VBOt"QiI1%R'HOh!jJIDpAfjH!=bh)nGD>Ln];2u
!:Kmh6HR%?^B2ND"eYkM!!50hY5>=&[YFsl!65'@3OGmbWrfY^"3:JK!!4qAlMK]Eoon,1TE#$/Xi:1P
!lVGkmf8:H!Y_'0qlKk'!MUWg!;?Hp':H*%WrfJt+.*&g!!3S;n,)5Kn@K(0!7(WH;THWO^B;3nM?1Km
])Vn'['0D0!j&q[df?9G!_9Ptql9b+HKP9l!!5@Kl20TDpOi>CJcGoR!$&;^qnE3PW=t?nlMpu'TX"Br
!jn:+U]B!H!Z7Q5ql9e'Q4^V,_Z0`D[ds=X!q<E*bQ+gH!DU]5^B2-nG2E:h!!,KqqlKq$\nCU7LB%?B
Zi7$)Wrf<1B8?QY!!5:Cl29ZFjnN,O!9!n\!!"L\`;@:NaI*<q!:'Ud,H.pFXTGqf#,D7N!!4FDYPY@%
Z\Jap!5ed<&&n&8joY+C$-WCR!!3LlaSW^R_n.\]!1X#j#DBP_XTGc+.e<Xr!!3CX[/R-*WrfK%.Yn)r
!!37Zp&!kQn&#j0!8dbX1VL[&^B2N>$*XEQ!!4[MYktO([t"_%!4Mq0/#]WJWrfYX#M9$O!!4(bmJQ)J
jnO;j!0@0^-^i'Q^BDH\,ldps!;c`t+,IB&XTGc#+-Zcg!!46tZhpd)YFZi7!7LoL#at;]joY(a%_MeV
!!7MP_u%1MaccqU!36)$BV)L+XTGqa"QTQL!!6f(YPY@%["AMV!.t7O+T]4HqrRqPTSrm=!.Y~>

%%EndBinary
grestore
np
grestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: HAAAAA+UniversLTStd-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYD+UniversLTStd-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/colon <1C60D8A8C9B854D088EA672A0E0770489BD40CDD639AFDC2E398009A
1C59D09A935EDBD8B9728B5155F911C1A063DB> |-
/B <1C60D8A8C9B64EDF8848D7D4C3CC35CF89F0A5D4A73C4FFD92694FF31FEA
4949BB2777DD946FAEC8687587ECE6212733645F7CB5D740F44C478BBE0727DE
B3407F4BAE571A8637A238806C8612A32445CAF08169EF6E2D9AF9D0D44AC66F
93F9FFBB1C4134694AD84E8208E35F81D681C2DD31B93B3A3EFCEB74A31E18FD
BBDBDA80CCD09942343C93BECE94BE5EB289B4D2FD5D49E834A080C9A471B03D
76120E087FCFE5A567EF5DABEEDEE629B2FA0D0F59EC4CDA> |-
/R <1C60D8A8C9B64EDFA3F30AE4D057524C5F308B76E02F943FB6AB932B7CFF
EE5769E8BE1BAC233DBF8E0972008F65820E64B8439553282E9ECA9B91076619
3B57F717EEB0A8CFA281D63957969AC7804FA8C1575A5D7D5E96AD79DCD3BB61
2A338BECE162751C890EA35BAF6636E86E61BC96D1856039055498A7257893EC
8FA96B22628311E8414AEDE16D2C9714DE899EEA9233> |-
/f <1C60D8A8C9B81F2C6DADD030E2F3DF31F8FA4F21A2B5F7CF9AFEBED3B2AF
BC5255D003B907A3CF8BF156551B3A7911969D75CD03C4BE365606826842EA25
968B410C25B78453E46B9A8C798061B2D52D9898203AC68E436B04D24BFD26F5
2FFB8A68F67E47F7239A08F258029FAB> |-
/h <1C60D8A8C9B7D8BE41A64DAAA5AB5C17294026010139E36D80807A2D30EE
D4199A9013C5488E5B17E67CEA993EA05D679623731AAB38FA1FE6E487DB20AB
0E708D4594D51253F8C7062FE542298593508B4C8F0016> |-
/n <1C60D8A8C9B7D8BE41A64DAA1A5899D686DCE828457654E22FBAD087BBCB
368774DE5DDE67C7F213E255E54257BFE216A647868CF94446533B5EBBA45AF6
19DF52AAC2D88CC24D0088C1D18A64302AAEC1BAFC2F20B58BC82CAA50BF7B56
48F536F05A476BBEEE378FD1748F28C7F2DA3D5B1EB02AEC0D80ED345F752C70
A6FDDB3EAFFC440F03DFA581B2240818> |-
/o <1C60D8A8C9B7D8BE9805F21CADBB49AA1195D694371D05212F2BB06984A3
14788F5886949C59AB1C3E617A7C896D30B158277798FFB24A04A87B45630C6E
7AF06F9011B6A4298D746F4ABD96701B6F72954691DD1CE95C39DBFF39> |-
/y <1C60D8A8C9B7EF3227E37316E78854A53918CFC1E16E1055C7B9D534A7CE
E84B1A418B47F8D3E67F8B0B76D3E5B503BCAB4CD3B46E25391C49267AD5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYD+UniversLTStd-Bold /Encoding get
dup 58 /colon put
dup 66 /B put
dup 82 /R put
dup 102 /f put
dup 104 /h put
dup 110 /n put
dup 111 /o put
dup 121 /y put
pop
%ADOEndSubsetFont
/GVGHYD+UniversLTStd-Bold*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef 
/D 3{/.notdef}rp /H 6{/.notdef}rp /O /P /.notdef /R 
/.notdef /T 2{/.notdef}rp /W /.notdef /Y 8{/.notdef}rp /b 
/c /.notdef /e /f /.notdef /h /i 4{/.notdef}rp 
/n /o 2{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 
134{/.notdef}rp]
GVGHYD+UniversLTStd-Bold nf
GVGHYD+UniversLTStd-Bold*1 [10 0 0 -10 0 0 ]msf
53.0122 687.734 mo
(By Phone)sh
GVGHYE+UniversLTStd-Light*1 [9 0 0 -9 0 0 ]msf
53.02 699.734 mo
(Call us on:)sh
GVGHYD+UniversLTStd-Bold*1 [8 0 0 -8 0 0 ]msf
98.856 791.218 mo
( )sh
22.584 796.218 mo
(Ref:)sh
.75 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
177.138 825.123 mo
19.764 825.123 li
19.764 745.445 li
177.138 745.445 li
cp
@
%ADOBeginSubsetFont: HAAAAA+UniversLTStd-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYD+UniversLTStd-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B5D6EF151AEEAFAD865A0F09AA1DF85899EA1DC8BDAF0EA98A
46195A9D0AF3B7C57D0215E12BA2831A67401DB4084FF5B588D0A40CE489D065
8376A22073749ADA2BED> |-
/a <1C60D8A8C9B7EF327C102745D4263E42EC020B70BA5C2AA9680326F2AF73
ADA0330371F0F09B65B6979AF5BC5679D8C7205DE0119408C12BEB13B31D7D0A
9655259D28DF5C9210C92B67C21E95AB682A698B0C625BC004820A699FCD983F
5615138DE9C3298C90CBAD3DE27132BC06ADC18B83004CFA2A4D31BAA7F6EB2A
BB2748337D5B21406864903BEB99E738966B75031544F4B294B3A8AE258219FC
1405B5CD4154089C5C677D6E2597A1FCF0DF99F0B92B3FBAE5EA836D33D15B65
7627D468DDBDF896FD71C7E1F587282C26F6E359D1E157CDC6B53BC1DBFDAC4B
06D5D0E07DA35D27C92FE90FAAB3C1D493DDB1034D9BCC5F654E13379341B98A
E6B4E25139942BEAF273AD00449B9EB34F95A72321D7642C20A29B08E28A2416
EA94191C61A5DC941D4101193FDE3D3A77C9691E381A37> |-
/l <1C60D8A8C9B854D0A3953AFD535C2C7849636AA0276E9F356F370BDA50C8
F6FD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYD+UniversLTStd-Bold /Encoding get
dup 77 /M put
dup 97 /a put
dup 108 /l put
pop
%ADOEndSubsetFont
/GVGHYD+UniversLTStd-Bold*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef 
/D 3{/.notdef}rp /H 4{/.notdef}rp /M /.notdef /O /P 
/.notdef /R /.notdef /T 2{/.notdef}rp /W /.notdef /Y 
7{/.notdef}rp /a /b /c /.notdef /e /f /.notdef 
/h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]
GVGHYD+UniversLTStd-Bold nf
GVGHYD+UniversLTStd-Bold*1 [10 0 0 -10 0 0 ]msf
421.918 742.796 mo
(Mai)sh
439.698 742.796 mo
(l)sh
%ADOBeginSubsetFont: IAAAAA+UniversLTStd-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYE+UniversLTStd-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B64EDF887895670E515983BF5904354C7EDDB3AB7135789E10
3DCCD72808669E0917CFE052624B65938C6E52D5FC1AFC67FE0EC52AFAF5D86F
A1DCADD2C72D7254690F4A881EEA5A77795DDF849EB4DEF9FA346730C8B51B4A
911533BAA983B6088614DA3D6588B3953532C2897C372A6132BA5B182FF56EC8
70E2C152B05BA7D8B20E13F357F40B1EC1A053EFF6AA5459CF3AC3D984F61EAD
29A670F1ED011E1F4C5B3EC0178A81F906FDB2> |-
/P <1C60D8A8C9B7D8BE41A64DA543FD3106A5D2A2D20E0E5BDE8ED14D31EBE8
612A67FE68AAF11854CC5F1C5B0D3588DB4CF873C56B2E2B7025FEC221BEAD11
65EDE401D7A74E86CBDF667563CA33E56E88D9CDD5DCCAB344> |-
/d <1C60D8A8C9B7EF32A0AF12CC7B484E148BB7A5C7CF39A91E3BB8071333B9
1B277B4E1E451D0D10AB091B1241F29B396D3843D8B44F50832403F7CC3CFB74
AE18BBAC9EAD2C9C48D8D9D3FE6BED6C48DABD2B38236FDBB3B00151FCBD4982
009819D4A11E0D29462390641C2D5D6A735223B943694A2BEF5BDC482519381C
9FBAB3CFF048F424CB68103ED54612759254114D0BE0353B150D1F28F0594C5F> |-
/h <1C60D8A8C9B7EF327C10274A3CF9E5EEF31B070BC421C07E793205CC205D
84809563AFBEEC272F7C0C2859ECD2B401BB2B16C7A306E57AE7A04BA1AA9B8D
0CD773D0159024D2D31A1BE517AB8C> |-
/m <1C60D8A8C9B59F85CAA3DC8D2C8113E7713BB94EB126AF4CA71754285BD0
DB9F81C4691DD178B1D5B776F8F7E914C87290BA74BE7DDC9A705692B0DC1EE9
1FF27CB6C033868B2FCF2C9CDA427BE3DC4369316CD5FA559BD7C96CD8E586F0
A0BC107DDEE46BCAA7755153D361A5223C644F417E2AA964A7B54BFF2591EA73
401D695675B6B98137> |-
/q <1C60D8A8C9B7EF3227E2412AA7DD3988998D3670026877F5ADE5E91C7B9F
3ACF3B57DF19273D0160A99F02E831533D3E49BA2D4E3E8C352A70F163182CEF
A4680BD938F32E5910CFF3E860E3F2DF704357692DECD00E619A8043C7C42967
18CE450A4978FD2651D69A9B429D35E4F5ABC63E1FEE4944513FE44ADE38819B
667568DDFA9A73DA1B6F7F09A0> |-
/v <1C60D8A8C9B7A73DEE9439F99F88A93E654870538DD9390E890383E21E98
035F4A2207421024A2B583B33085594566A82BF1B88B1957F2CE0861733760AF> |-
/w <1C60D8A8C9B6B41CEC825914C7CF6A4FD4DEF2A43D1235EAFE6D3B414511
EAA1C11982BD7553F42B064AE5A13E100CCF5900444528A1D946053ED0B87FC5
F7491B401D02430761A5585D8C28A6B6250D13338C74C5A263921692DF3530D5
36C827E86EE28CD9ECC87C1A78B62546771EBFE3B0> |-
/y <1C60D8A8C9B7A73DB5D3D2DD8802CEA615C99A45BB15DC502C21304EC335
259FDF1A255CD0DDAEB1D0E70B2E5CDE2969C6B5E5BF5BA0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYE+UniversLTStd-Light /Encoding get
dup 66 /B put
dup 80 /P put
dup 100 /d put
dup 104 /h put
dup 109 /m put
dup 113 /q put
dup 118 /v put
dup 119 /w put
dup 121 /y put
pop
%ADOEndSubsetFont
/GVGHYE+UniversLTStd-Light*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 13{/.notdef}rp /colon 7{/.notdef}rp /B 
/C /D 11{/.notdef}rp /P 3{/.notdef}rp /T 12{/.notdef}rp /a 
/b /c /d /e 2{/.notdef}rp /h /i 2{/.notdef}rp 
/l /m /n /o /p /q /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
GVGHYE+UniversLTStd-Light nf
GVGHYE+UniversLTStd-Light*1 [9 0 0 -9 0 0 ]msf
421.918 754.796 mo
(P)sh
426.922 754.796 mo
(ost this pa)sh
468.25 754.796 mo
(yment slip with y)sh
536.578 754.796 mo
(our c)sh
556.144 754.796 mo
(heque )sh
421.927 766.784 mo
(made pa)sh
456.253 766.784 mo
(y)sh
460.582 766.784 mo
(able to Blue Care, in the )sh
421.927 778.781 mo
(addressed en)sh
475.784 778.781 mo
(v)sh
480.095 778.781 mo
(elope pro)sh
517.436 778.781 mo
(vided to:)sh
%ADOBeginSubsetFont: KAAAAA+UniversLTStd Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /KAAAAA+UniversLTStd def
/FontInfo 7 dict dup begin
/Notice (Copyright 1987, 1991, 1993, 1994, 1998, 2002 Adobe Systems Incorporated. All Rights Reserved. Univers is a trademark of Heidelberger Druckmaschinen AG, exclusively licensed through Linotype Library GmbH, and may be registered in certain jurisdictions.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 4 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 44 /comma put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
def
/FontBBox {-168 -250 992 947} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 720 741 502 519 692 708] def
/OtherBlues [274 283 420 421 -209 -190] def
/StdHW [86] def
/StdVW [100] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
34 dict dup begin
/space <1C60D8A8C9B854D00D> |-
/comma <1C60D8A8C9B854D0F87F349ABA1B87B1C28CF6037700BEB3FF620ED0
67490E17563200> |-
/one <1C60D8A8C9B7EF327C10274B6461B05F4590E213A3BC0ACF0BB951D2FB
0984C4D82F4D6720F06BD82970F21F899165> |-
/two <1C60D8A8C9B7EF32574A9B88B32C4DC36D86A07CA73204FB552DAE08C6
F868C7EEC47310756C9D2A7D060E7C4CEE032573C89F9E5A279EB6BA1D35BBF4
7F5BC13AB78A1C4D341B8EF6C662FD3F78B5E984AE112261891A405E65C57159
AB98EC33EBA7BFCD2832570546> |-
/five <1C60D8A8C9B7EF32A7CF18F667F1E5D7C22AF0483DA8CA636F8505221
CEC6B464C230F340C951138A9F844D7C5C01F8A9DA8A8B848372E481FCA36944
3C4A8C51E3BCC80783016B13A76B804E331E5ACE8320BA9881EF793CEFB3F0BF
21D53C65AAD2A1AC0AC853697F7A9A48FAB74C69A6C6FBF24A43C71A1A2> |-
/six <1C60D8A8C9B7EF32A0BAF021B1D4028903F8CA25B8DE3B0812D36662E4
5B18AB7957DAD74975CCDE4C437B0D4374C53EF66207775326DF5511E961C530
64389A50662AD4983832C0E3BBC39984A9DEDBFEB5AAFB1E291FCBD50D4D05B3
D21681E12BF5E705DC89D25B9F5FA5C384D308EF2CF13CEC410522540D71DD8B
C76AB29B5032E4DE3C> |-
/seven <1C60D8A8C9B7EF327C10274AAB621461E53B3C03AF7A3E8737064271
5D6ED53EA91A43354158747B8CB871C387D7> |-
/eight <1C60D8A8C9B7EF32A30330AB919608CB0A43776A724D24FF310A1AFA
675A3EEE7A6B9EBD98B305D71008AF4BB92819A7DE9883046F97207739BBB5B2
797A3A7019597877A80CF0188A45B23091B1D22DEBAF3EDF4D6AEEFC28BD5865
E93316E98764D40CEAF1818D0DB41E20AFF7B9CFDAC017876A5DF25BF0E67421
00E5799B2DFBD4EAF331FBCE2385A3A5E1B8DF6CD499ABC4CE1C489E406E15A6
FA2FA739441B0F0E247BDE741FB9A98140257E4419B59CB78FB7707E6E30BB84
A286A1F5854F5E8659217C8A01B32FCFFE2A420A8CD7B01B6CB98A49152ADB96
D71A6D17BC9B7CBDE54046F3EBFFAB1BDDFDC600A6BE00C8C4422C2FE805C0EC
CDDE6B1B2A> |-
/B <1C60D8A8C9B64EDF8863A409F8570CA21289790738C479CC5BA5FA081DAD
989CD37D67FEAD3228A61B082CBB984D88F433A207EB6696B2E12DABED0B80A3
2F27035C4DA9DC7F9FBB5D20A1DF816D9172DDB268A1E654FDC7BE7A5C59216A
482A5A870DBB88F7D8A029EB067EDF846600A7397D985C5AD3B2FC819B1AA2FE
4402EC87842F765F4DB1E92752AC0850CAF9237165CFD8235BEEAB02EA298CE2
D155D315344EAA9B8AE17290D5DED51BC541429237688850> |-
/C <1C60D8A8C9B64EDF836A47F3CC3A3709AD79CC8F811D75BDDCDE4A72A495
6D61A38764C63E2915F39C9264FDD9D0CD2225B303605ED277F32C841647CC7C
D3F19EC48C384205721DBBD0B2044E4B9254A2A0786DFB4237373B46380FA46A
4344A16A837722> |-
/E <1C60D8A8C9B7D8BE6A3C8FA32A2702E10E5CD31DE1C1D33DE4DC51FDE603
5EB72756505F96AD4C0AAC70ECBAFE6AACCC49FD9EEF93A6714A> |-
/N <1C60D8A8C9B6FF86A27735046EDAA6C336148DFC9A9B97412D1FB1E4453F
DF793AB79A291D505424CDC3D4C0C85ABD6C8B247883CAF22247D96920860F03
4E61AF9CCCED96C4F4B536E1B6DEEEF1671594440B3A7CA4651A46> |-
/O <1C60D8A8C9B6FF8678C3263F9E97227BEF8239703BA484AB5B707F0D5037
C6F4346C20BF9AC9FE234AAB75FC96DE81E55CBBF1A3BAD4B97795F5EF20AFCC
99C84B56CC14053C1E3EB759CBA4A2F67F89A434F9C24D2938D8129C3D161D66
3D5C35688F07CA3D329974A4D3187A6E537F7B9C5A6D0A> |-
/P <1C60D8A8C9B7D8BE41A64DA558F634D51E623676B744302FCE7CE44B2552
9589E8D4D9D1F0DB0D9F0943D2BFF262076E00B300FE1EF55C85E302AE76B36C
E430AA0B20EAFBC3269233B7D9B1FE54539CE4D7E0E93495159CBC83F85B> |-
/R <1C60D8A8C9B64EDFA3F30AE4B28F65B0310ABD116D5BF3EA11E45B4A76F4
35BD3EDBF261359B8B9D9B98B19797375D70174D0848921C57400BABF7485F78
EFCF2161CFB0E43E08B12A3AEE3BCF309265D23D89DDED920E1631640DE90563
22FFE161AD92CEDBDE753E9AB1F5573B6BE79F44710E9277EC3450AD1FFF9986
94412F2F> |-
/S <1C60D8A8C9B64EDF794704714CF27AF3BD9C0D9FFBB66015F2854E3FC4CB
BF46119948E46D9BDB67C45145C88CE8F878209C674BFE37D222145E5AC698CE
93728E71DBA8469CF6A55B07CA56984F111B5AD2CB0B382C47192670991279BD
C86BF26D4E25E05A6486F5669B789167A7F3BE8821E372D30569AEED07C765B3
24EAE7A15DE96BAB7840287BFD92441030C3> |-
/W <1C60D8A8C9B5EE315A50F20FA5C234F0AE1E7359B7D1797FE6B37433A200
BE1085853166637C307C35A5B996F45EEFD80DD16E4A0FD7E6A86E8B9420F096
87DF0B437DCD449324E5B5D3EBFB720B75F945747AC65592B9602DBE569A5AB3
74D9275D0DE577177C> |-
/a <1C60D8A8C9B7EF327C102745DDC5E2F909DB5A685B9DBEE582CED7CCA76B
A36ED3B18894B646675BC054A3BB5710F6EBB3C0991A0C7B9CD9E7E3A5388653
6B57D385EAE05A257B1A2365BFA0B0CF2080308FF33CE676F3F6B46B2A40F940
D7A6CE95D42BCBF188BD2037D95666A03704F766B39DA473EF56BB56E20C1AE0
409924842EBACA53CEEE0AC1540FFF1143DDA5B5DD71461F8D6CE48A861D1823
8E2188FC2DB2E436AC88E73D96EC03E23E09D9259C6F32FBBEEC07543F496E56
3683D3E58A222369330C7801934FC7F52B4B32BBAE371DECED99E1CBE3CE3BF8
ABA00D690BFFC1A70B4C8E550F6AEE8DBEDB84BEBB2AF1> |-
/c <1C60D8A8C9B7A73D307FAE58D98DD8A0BC0910702F4E3A8D5E2BE42D6B40
4A9E10BBFE89460809A4D893EAF52B13C3B148BE46B9D8D922844D6CD569EA1F
5B1F176DD4860F33AB9EFF4FA34CF765EB0F0C619C57F09F6BAE43C7AE8CB8FA
925F637D16BF1992659DB9ED4BE79D0BA2AF9D2A43088048965C4AEA13A8310F
1CCB33B18230> |-
/e <1C60D8A8C9B7EF32A0A2963A96D43772B142509C953CFC38D67B78079DEB
AA9564F2DB18923BC114D593507C34E183C09C4845A2377B57B4B5AE848D1FD1
5C79658B02712130E3F4DA22EE2108B078908D70FF66411B5B55381362CC04CF
5EF0F38C3D57703A55E07F3194086FC81E72CC> |-
/g <1C60D8A8C9B7D8BE1A00274F047439BD4720CD25E4B19F209F56FD9B437D
257AB33679D69039D106219E56D2723A7E1972F437BCB24568212C3F66518FC8
0DE6EF82E72EB49208DD4A771F9E6E1E6DF59AC4E159EC4549BF8BE5365CCCB5
344527CDCFE9547E8D654D41BC1BFC0DC558773E4FFE32D825DC5D99D01485C3
EAD80D1FC018C7411F779300F7E659D619DCF5A3C2B70A051ED30922AED186D0
5F6196B0FF9B4B23A895AA0A5110D917807055CC066939283CD8EF076A63A9C6
61477BC2002F8A241049D855> |-
/h <1C60D8A8C9B7D8BE41A64DAADEE9BDF6C46664B5143E27F9E9FC3BD6A668
69A4C16C951CB71CE5D6DB7DD0B592ED71D78C31213E2BA631CF78886036AD90
59BC7DA1BE348636E4A2648DDACD001713AA90E1C5908479013472> |-
/i <1C60D8A8C9B854D0A3953AFCEC87E7CEC1008EF6EB11EFA0D1FB30C12A16
3E072C5FA3193E06284BE1A2DD595F65F69A66B508BBE9224DA23A0ED6EBB2F3
693347> |-
/l <1C60D8A8C9B854D0A3953AFD51F9906AEB8D8ED0F882B3F7860AA2ECD7> |-
/m <1C60D8A8C9B5D6EF574E541041987DCC48BD1C63342C7D7FC1AB988F2DAF
E3EEB9D70A443647076FFD3A09B30F685FEC959C2F68985D7D4A2C59CCF165B6
26B399A4A8237C14DBD4804341634E72599AE9B9BFF99A107EA5A02306F271CC
AD29CA03A727F8D0268C0E8A1B5C795462D021E0C4E86274F8F7628615E9E742
14CF933431D125CCC692903E83899358A306CB11A898A761EAB8B8> |-
/n <1C60D8A8C9B7D8BE41A64DAADEEEC45E9164A420A7147BB852AF58FF3A9F
FD4A0FC4CD054EB331BBD07618D9D9D3B543AB19FBFD6F44D6F539067AB1E994
C38385B2DB0463D072267744C60641443F869E3BCC0227687CAB874E75459828
785D24> |-
/o <1C60D8A8C9B7D8BE9BB310A9EF67BE508A2DC75CFD960125F31A2B1664E6
2CD5FBCAE9D6162F5AC561353CB6C00C623A2AC610EAE1CAA9B4D553A082DBC6
C08413A03F0CC476643108268221551CDA0EEE169452D1C4> |-
/r <1C60D8A8C9B7361F55E947F93E5C4E85E3E6E4B204FC6861B3F6FDA71F5F
8C0053BEE5F7D947E82CABC15528EB01EEE69D6EC88F2728E04E83C54414DC43
0A06C33137652D4B4B7494EA38BB244CA3061724D032AFAD6379E465DE979B8E
0A> |-
/s <1C60D8A8C9B7A73D33CBC670B326F55D226D2790756A34B706A0C17329F6
F3C5C65948F31BC062B77E40A3FF876F335A2AE46B8269B9566C6E49C58265B6
8E4E75F38C33FA70837FD34FA5569F7A0D3B8A6CBCF7AC6305A412E5DF76306E
35DCCE3B0BD2FAA344209D4E1C7F5ACE868B979628C299C6F1B815ACF985D4D3
3D5117E7CD5D87E4733C5C16C8F8CB> |-
/t <1C60D8A8C9B81F2C4901685C9953BB4A5437A65157B80E55CC59D38BB43D
857FF244868EB6EA162EA09FCAEF692133F6D445A4D2B391DB570AE052BAEEC1
45737F9AEE6DBBC346C78AF0C85D> |-
/u <1C60D8A8C9B7D8BE67A060F136A1FA81308832DA3F71EE24FF8F466E1C65
D74EE9B9FECABDD0A5B486C08BEB6B2CCB6CAD616F28460E2443314780CC5F79
9465224A648DCB1BE4EB798EC9F94D299A0A524E184016F0DDA6F3F488CC7CB8
1A82525B5BBF42E26DCAC974475A07DF68ACF35AC98BDF79B1> |-
/x <1C60D8A8C9B7EF327C10274AD4BC6221C743A39EFC4D443AD3E4DC628132
E4B57ECC454F61B35B2B9612834E7498022965AE26801F644699C3C254B3234A
F8F889340EEA96ADDC06DC> |-
/y <1C60D8A8C9B7EF3227E11E599FB3F3CD5D0215D90FF813B8EFBA097A9029
C2D2863E706AB6067C282AA1B61663CE3E310CEA6317BBCB9AA9> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GVGHYG+UniversLTStd /KAAAAA+UniversLTStd findfont ct_VMDictPut
/GVGHYG+UniversLTStd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 4{/.notdef}rp /one /two 2{/.notdef}rp 
/five /six /seven /eight 9{/.notdef}rp /B /C /.notdef 
/E 8{/.notdef}rp /N /O /P /.notdef /R /S 
3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /.notdef /e 
/.notdef /g /h /i 2{/.notdef}rp /l /m /n 
/o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x 
/y 134{/.notdef}rp]
GVGHYG+UniversLTStd nf
GVGHYG+UniversLTStd*1 [8 0 0 -8 0 0 ]msf
421.918 790.796 mo
(Blue Care P)sh
465.254 790.796 mo
(ayment P)sh
500.654 790.796 mo
(rocessing,)sh
421.918 802.796 mo
(PO Bo)sh
445.358 802.796 mo
(x R1)sh
461.694 802.796 mo
(87)
[4.448 0 ]xsh
470.27 802.796 mo
(6, R)sh
484.342 802.796 mo
(oyal Exc)sh
515.51 802.796 mo
(hange NSW 1)sh
567.406 802.796 mo
(225)sh
gsave
380.845 764.244 mo
409.514 764.244 li
409.514 735.574 li
380.845 735.574 li
cp
clp
380.734 764.379 mo
409.822 764.379 li
409.822 735.291 li
380.734 735.291 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.89 ]ct
[29.088 0 0 29.088 380.734 77.5109 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 122 
/H 122 
/M[122 0 0 -122 0 122 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
bQ&.V(F:kHLRG9JSVq;F-Q392!7:cW";E"3=aH!sT8nA01a<eA_>r-e%g3Ri/Q[4SS">Re@5B,E#JC,l
!"T5P/3S0O\Bra=Vh7Dk*t#LXjT$2A4^*#fSZf`H`P]O-^qmn,a1npROF(>$-3^p[l2V_C3)OI@Nh3;X
Z`pX9Y-5(8[&p$aJoFaQ+pG=Rmf47H2Ge+9N1?lPZ*(41XKAY0ZE'UZJSnIL+p>(LoDfdW8SjEd^!l$0
mHWs!kNV:!n)i3;Xd*s(/dA<Ur;[!G9m)f5ao9?_`l#Xe^B23f`W!p_ahF?o<\+BR!!",E7V[dX[f3Z9
Za$_.XTGZ0Zi7?:[]GO/:+-4E!!OH5Bo&Xnrj)[2YH@Q"!j&Q0rj)g9Wf:pk-Ng@K"Y*f;[bpZTnH&(D
!9j1>%-[!EnF?&>jh@$o2$L,_#QZMfPe>,Za2.JaoY1[J`lQ9<SSpFmYlG%1.9_G*[^EKGnZDVh#d1MA
[]b^%1'b&a#QZ>VKW)8aZE<Jori6=+Z*Ug>N+4RIYlG%12L)OeoC;;6l/i$1mKW4Pl+D^;$F9^:**eiH
aiD6V^B23jaTKPVBdg@h"rU?qYI:gAiN3?fZaR3'?R,W[!!X<=L97hgXl6;bXKf.;OBs40!4r48,&amR
oC(o%jp(#:o'XAD1%kUb!!WKdJ[`eA^tQO,`QGoU9+(:ka8cDG2Kbk*['&,b"gb\>JjTk5!6kKJ!]>(q
[BcmfWs,c9WdmGCl2]64"p.;bh"1!tg?&S,oB!&W%-7KB!!NNtPf:b]o"P=C_SjI7r5\u[`P]L^^BMHo
ae;iIiW.g8"U.5IZF7".XTP`1ZEsG9"15A<Y4A[uYI1g%:^u4\irB5c6%lJLY4AUqXKJe4qm-C1Ycb(u
Ws,W3[#e)nfDt+8"U8)7mIKQ5jojl4m-aBAnHA@MmH`s+josu<n\T&RdfAh:"T_&YaN)*h^DFc+aN2KA
Z_j4TNf&^SOdW#L_9'd>`kqA_"NAN\<XR1RoDf$q5)H\SY4\n5YHkRD[^)WoNJ)k2I=Qs.Q(P7g[C*?F
oW88&\!Bbqb5h><"T^cAZa-\*Wu%nBZa7$BTp:OgIscTmJr,\_XgGF@Z**`""L5A!9aSf>rW!*&;mu2b
kOmsRl0\!1o'G#M]<JB7VQ6o2`mj8DnaZ&4o]?;Do>kSR_uKi]KZF/6p:h$P`Q6*/UQ9.[/K50%qZ%$*
$lCE[@Yp_``lZ6;p:g^KbF(-G!94%]*I"oup8nb,ZaI3<PCd1..2`QsqZ%$*$Pk$M=aZ=*ZaR6Fp8nG&
\;Mrq!9aCb*-SZop8\V(Z*Ud4Oape(-l<BqqZ%$*$Pk$M=*fn"Z*^g>p8\;"[YZQg!:9ag-D0hsp>ueJ
md]f&_l\Jj2B`Y8qZ%$*%imB#G,<"+md]c2p>uJEoXI$5!;$6o%W/i!_"bYM_8jX/TlrO?$1.]u"r]:4
S$g;X_Y:eI`l!EJd/`tB":\h?[BB;,#d:VCWKV*U*!u!4#R)%t@#Ung[BTD-"15:V)9`*[!!Ea?W3`T#
WsGi5Z_rq#2&lnh!!i`F/mjO2ZEp_.WroZ1FrAC%!>0qcipl4,jp:5?n_qBG80nZ2!!ifP5(L9!nF5`;
job);Sfu5V"$NR)_Yq7I^BVWu]9lVC#NYpj!ZX^i[E-A'q7d'Kag=qJbQ%`(R('<pXTl)>WJO@l#NYpj
!?+4RUU@G2q5je&[\HFsbQ%`(QF3mjWs#Z6Vhe%J*s^m-#6>],I\O0RXSJn"XL+]o"3^`I9$-\ipuVeJ
o&7&k.1,tRkPthh,#tYrna>T9jojo=fjb01!!<XN`5_Vf#/J:!W+[@Up&O=W"WCL8_T9Rh^B;ErN#U(C
!t/eIZh^^,Y-bO&?QS\:mJmD-:QVfgYPG:&Z*o-!cN"%TB<ST9Ws,T1Z'JZ:lN$MV"W1$qY-Y8+WroQ4
I2L91!tU=VmePuKkjRr^IOXCZp](I?C;9'(l1sHDlgh"tci=/"Tut4J^BMEo_3me&hZ3NR"U6lC]?.nc
^B;9nZ9lq=""BDBYPP@)Y-kEj5n)HI"onf]I]9cZq5j_,Tfg^&""9;>Xno(%XL#!b5Rc<G!sLE-VZF0,
q5XS(T01L$"#e'gkkaEFkOIcH<Y3pa"U@AliUZ74k5FEEkOR/"df9IN9tJC@^BDToO>I'h!!FQr]u\"d
^BD<j`+TJ,!!5Wh[J?p-['5-8"4R;R+`aWkY557&ZE[^AeGo[P7AmKfWs#`2JM.,T!!FE`WO&]&WroT1
>R:6-g&M3U?/Y5Jjok/<XZls<!!Fg>j72=/job#;I1,cLhuEidIE08%^B;?oSib6u""B/H`VR=O_9/#[
o)RkP!srtSZ21R)YdKKKcN"%nI^69UXTPc9LDB4Wl2UnmE3c\DWroN2NASr]"!i8uYkkC&XgNitklC/P
!t:Lblh]`HlLDPW!RLfK0rXL,qW7nDo<]P!!;-<o&!G)NqS*-S]2T'[!!>Khb/!kg!m.DdhuNTR!tBpm
Y557&[]3"+bQ%`+S[YcuXTGr!+56c!!!!I\[B05*"15""#L!/M3h*OYqPs\)QQOl\!YVa/!9j:A"7b>]
$-WAO:!rUrqW7kMb:;3G!Z%-FqnE9K_TIukaT)D\IE'8&^B2KW.baq)'Ss3oXTPf:KI=kA!u>p`ZML[)
[@8N2!:Bgg'8NskWroN4Jg\Y?!u>j]YkkC%Z^E-(!:p0l)Rf87jojf2o<1!m!!F@0n*T66joY)!1ZSQ3
!!4(2b5/jTaLGCW`W-'.Wlk1Q!lqT#huN`V!Z7$.qQ0k-VbmT:!!5<P\,*3.[@o/-!!*mr!4D[("1+e"
"NCEC4IEPQWrfT!/):1,+M[OHk5OKFnD.pc`W-*<c1C,rjoa`7eiMXf!ZRoVqnE6KbFC$!!!=!jb/*ti
!lhZ(hZ*]qPd^Ik"0T+n-2[ba!!<p[\$,\2!jndUhZ*]pP-k+e"0Anh-2.Da!!<mY[B9>,!j\RQhZ*a%
`:E$fjoaf=]J8sWdJs@gT_%FGjoa`6gH=Bo!Z.NOqnE6LaF"H`!7h,P!b0$bqnE3PZn:5:!Ypj+qlKt(
[W)`=!8@JU!a2b4qlKq,UFG.%!Yg^&ql9h$ZYp93!8mhZ!`uM-ql9e(Td\k"!uo)Ijo"6Cl1(&Nh#QO:
"9Nc3m,e3."6K"(2W=]<&"1Q:^B2<k@+G>A!!5X$`r!LPa0-lN!!3Xg\,39/Yd%9W!:9af5H(pcXTGl%
,NAb*%>hLiWrfH.<m1R7!!5?]Z2:R'ZCN6#!!3eDo)%PNlg/`6!;?Hq<8d3+rT44DnC'&O!!3UnanrgS
`4em\!;c`u1U5!7r4`<RY9;p,!XsdkqlKq*X@0]$!rssH[JR'-[%8<"!!3O][/6m*Yc:(&!!=jFZ`F#)
!j\=:jT#>mZ1@eS!po#Q])VpreaV]!joFKEnBr]H!!3:UbPT$U`OeCG!!4RMaSW^SaIX"EkPtYdG.7@N
!j\ge\Gu[VS@/6r!k+.$qZ-!`!X!SQql9e&W&_Bg![O5@ql9e)NY(manc/^pSb2gA!q"r@\Gu^ccgg,p
joY(e(@_D!!!66E_#1qK`4\RJ!!4RNa8<UQbBX-U!;lfu:UdM)XTGf/5.:Ln,b27=XT>qLk5YQZ[B0;,
!jARd[f?ISR^2gk!k)nGkPta"o]PB!roO:KjANGe"#/*jjo"6Boo]@?!!4sj_Yh.M_nA7A!!4FL`r*RQ
^rK@;!!4dSYl(U)Z)fq_!4i.3+J6"<XTGZ59BcEX/ul)PWrfH(3;3Ef!!4:6Z2CX(XKkIk!;-<n4ltu,
joXl19=4a%/(<qJrT41En71qfqZ$[2WlFtO!lDiFZN(%V[`&*Y!lMZ$li7+f&t60)XTG`25dLFl-`+-H
XTG`--L1X6&t#r)rMp"&Y!95m![a\Hr2Tn%W@$p2!Z92Mr8n"D!UEal!!4t2mJQ)JlJj_f!!34Nb5B!U
^rT[W!4;e.428]2^B2HI%.+#r!HP[IXTGZ5;>:.&!!5'\Yl(U)[?(d`!!31?[J[',XKtap!5AL8263nX
WrfVf$gdoq!grTWjoXc:D!h;A!!5[QlMTcGn%TA"!!5a5_#1qJbAueHa8c9>aM@_g!R#<H!!5KpY5GC&
\7jn&bl@f;[BBG0!OuS*!!5HmXSf+"[:e=rdJs>?Z`O)*!OZ>&!!69lkPXHCoSV<%f)Pk^n`]o5!VCs2
!!3tA`;I@OaH[(]!8@JSFisWs!l;]-mf3D(TsFTu!k!dhcN)l'!G]+AXTG]0/aiZ@'q_`.WrfV^#g*//
!!-fAr2Tn$XXro@!Z]bWr8n(NZjXhQl2UjEo_dhQl0(4u!!31Jb5B!U`3UK!!:Kmh$_,37^B2EG$Ln)t
!H>OGXTGc%)S,q@!!3Le[/@$-[#PI_!!31=[J[',YFlfA!;QTr$&c+eWrfSc$1Rus!gWBTjoXl$,Hq1I
!!3VAn,2;Ln%9)!!!4sp_>V+M^rT$H!!"DJ^;Bf_!R"F3!!4dXY5PI(Y-gNq!!4IJYl:a,Xf]'*nGiVB
YH7]'!j&^nWrN2HWil9#!jtW#nc/_Tm-+E1!pB&RWrN2Ujm)g,!pB2dqZ-Bk!X4\+r4`<TK`S1R!Fs:M
^B2?V)ts@2!!3=U[J[--[WnbO!Euu1XTGf")=mh."Ta1\r2Tn+G6+]D!Eli.WrfMq)"R_/#HmRqjoji/
nt6#`!!.<8r8n(IdNS2^!E[GA^B;E^)A*!dE3=']F@?J)aS`dRbBrg\!Dg3&XTc#+(_C.fra`9E"DL(*
NOA\d!P!+?!!,j&r2U")UDFGLAGK`D@g$I/#E,qdWr]YHo)Jf+o_dhTm+WTsJqruP]7gBH;[U/+r8n%Q
PkkCW!!3S-`VmOU^r/bD-cF01a9C"B!$f"jrP&EM]I*=P!rr^rZMgm0Y-L=n,dOn^[0=<d!$J2DrN-.)
W[%0:!t1F!X8].(XKXqi,I"SYZN\!^!$A&?rMp"%W$:m7!Y<H@rT4.Dli^>h0^SG7nHJo[!%QjjrT41G
i\0s)!FEqH^BVf=!!"@X_61NVaa!jdC<HIh!Qorc!!-*/r2g13IK0?lWiu?&Z`OD>D#aQD\,<?/[rh9C
!E?H(Ws5qZ!!"4AXnSm+Ws,kH!!$B6r2Tk+F7fM6EV'+j#4neo!&!6po&dXJ"nRiV!.a\=joP(Cp&G.$
VoAVL#Jn#$!!"@X_<o"j^\P\B_>CtR_8!b,GlRgTW5\_M!l;JopAb7$Qa?Xm#Ht-R!!"4CYNW+FXnf-s
YPYF.Y-"h7D#aPFRBldn!jARHpAb7$QE^=g#HapN!!"4AXlHJBX8/joXo#.*XK/D/C]FGEQa$Fh!j/@C
pAb7'amK&h#O15&!!"Y1l/(Rkk5OQCkl0iGlM0]CjpL;:k2u8t!!!YTmJZ/Kl/F8g!!-!>r4`9THN!mJ
-G.+/^r6/c!5[[9ouR-Qrl4uWrko2^_SO%&^:h1k\?`jI^BMQf^V@m9rVut#ao&mSb'*LZ!D9fuXT>nL
rW!*GWirP-ZM^g)YMHV\[0!_BZi76>Z*:F8Y-"e+Wi;qoTWJ*o"gP#.XgW*G!!,m(r2g"/C\If08[SDr
!OZeD!!ORFXfJP-r2Th"fX(R`rN[$?Z*:F8Y-"e,X/`.tVl->^Wr8t%Yc"P&Zu#^A!D^$"Wr]VCpAb8)
n`Tl5!V;NS!!P"6l/q0rr8n"DfC8t4md9<\l0%0fi8*/@f[eR$da6@ecd'SkkN:pildY(Zo9'"P!GV-&
joP+7p](?tR`GBA!lDDhrW!-L]>;:jRE,<A#fN!(=&i3u;,I6frD!>er_+,$8kMZG7n,p76:!k#4?GS`
2`3EJ1,(E\0E*U(/Jp#i.k3"t-mp>f,U+=Y_na%&b'.R@^WCd#!!3J%`VmOQ_m1$Q!!34\[/I*.YbiH?
!!XXIYHF[Y[Jm95ZA(hC9h\2Pr(%et7n,s:779L169me#4Ztnh3B/rT1c$m@0J>%0q^Vt&.Ocep-mp>g
,nhOK+sA'N*?&k$Xf\b8C0n<M[Vc!D!XP!rrN-.*TG.,$!Wn7brMp"&U`KF7"sU"JXJ1QXri6:.KLS[0
91_\Q8,Ymr779O26:!n&5<_4m4$#A]2Dm<I0eb75/M&D&r$i.).4?Sl-RL,b,U+EU+:]J6)fDj[X/r^D
?*gT=D#OD9#a)CjWrfGr'DVV0"1mt"joXi(-iO)S0&c'YfW=T*k3)')<;Ku8?X6o?=B/6p9hIrG6pa.&
4Zkgs3Ysb72Dd0C/h8=s,U+?P*?5t8(`4&#I-Ct#k32DeAF8ROOo>=^$cDE2joXhu)Yj@70YtR'^B)H,
r;[6Q]>;@e(5p>M^V[?6_Z0pF_SEq&b'*jh<Qi/!H2R^D?d&A^!QnR@!!4^TY5PI'[rhQK$mM^TYauPV
\#ld:UFj@`$rO73Xff-K!D^/,[VbsC!EQ]-XT>n.q#CIHXK;B$!O["I!":'MXfe0-HaToTY+[Da!";],
XK/G1C&q&;X0c^A!!$"![J['+[8?Z!!]oQ/rT4.PS,E<q0&c'[dLhW6kN;'X.`25p>3P55l1'B+=n(VG
Oo57\EqK=m!p9)iq#CG?b5K'V_8%i)!"C9e_8<M^#DC78^VmfW`W-JPElZ#2_8pEo!*m^^aa*gb!YMWR
rP&HTPQ:d]!!-rGrN-.)XtBSP%3hgUYbD7)G.4WVZE$:2!"K0F['-U8[9s%9;n/s<D>aG9&>$0*XTGnb
!W)iu!,K"@WrfE)/H#PX,,hWHTEGIA[B-F4WBeH'%L$IMXfJS1?NL4*[]?cOr;Zm1S?Mml!j[L\q>^VZ
oB,0<k2tmj4T,6h0&c'[ecu;9p#kH)g-ip\%Kh+ElK.=!D?'ZCnE9D*r;Zm6dd-ko!q<MsqZ$[+XMb"O
!m$K(r;[<S]>;@j$NL?UbJ:j0``U:^#7?70_8!n->lF^+>g'n(H2IXCF3=Hr!l;T%qZ$[*S?`$p!O[RX
!!"2PWirY$$316H\?;s=ZVSXB#7,RaY-"q7;uQb";n/s<D>XA7BXdrB!jA^SqZ$[*R]l[j!OI@T!!ORF
Xfe<(#QP$E[B-F4Yti@?#7,O^XK/M/;Z6Y!;RWX5D#=86B!qT<!j/LNqZ$[-d-U_n!V!8i!"(@;l0?h/
!!A#JkQBr6kZu70#6p4]l/h9sA,ZH2?L[.LOo,1[MY-l0!pJc(qZ$[ga2%\h!l2lQqu@6S]>;@j$NL//
Elu55_8fp*!!a+"b.k^0_,1(1"C0-baa*da![taurP&BVD>jP7!!5HnY5PI'[7C,p%jJ$WYbDI)!!?lC
YH>"8<QY:H%u%KpXg5-$r;Zt!\?32Vqu?dDX0;K(!OuY:!!,Bk!3H."!OG8n!"U9PXfe<(!!!+4[B6L3
Z;o$I#7lHpX/iJ,8,WDj;RWX5D#=87,cRpEWr]Y;qZ$\!n)s]4!9XCQ?i0m70&c'[edVTZ!IF8"jm2;G
aoDYUV"<d2mbpt?!!HWtkOXi6!!4k8l2B`FoRm#@!J/Dl^B2<Q%/p53!!"@X_8<MdrW!3*CWXE-_9$En
bl@tfT#na^`OeJ7!!HQM^WCcu!!/5&rP&EQSHSij!HkmMXTGbr$N'l*,-%gJYbDL(!!iU5[]cg:[U'!Z
!!a=$[]Q[<WB:"X"B2h4[VbmA!J@fYXTGhh"8i-"FLD(J!j@suqu?sGW3*4q$31&4!!-H6XfJS1>li1M
#8`B,X/iM'3rAs\;RWX5D#425J[><U!jR^equ?bgo)7\Plcfq;!!P"6l0?h/r;Zn7mcjo9lL&H3!!a1B
oB,0'gdM&?"CCT\o9&nM!NtqjjoXq`"T8<%$a%>F^B)K&qZ$dH]>;@j$iBu/@)p*u_9-cu"4$rP,cSl"
^W3cBqZ$b(bJ2/EqZ$Y!b5K'V_7hK!!!3LtZ2Ld*[r2'C"X9tMYbDL&!!cQ3YH>";Acqu3df9UqR's-!
[%oJS!!H61XgW*D!!,p)rN-.)XXF&I!XbC"rMot,D#429,,hWHTF1Ss#?A(3X0&d?"8DlK!!aU4Z`C.4
U+uNF"B)\/Zu#U>!Dg*$WrfE'-iF#H%aaP?joP+;qZ$dPiT]XY%K$22B(#!Hl0rs!o)RSH#9gkQk2u3]
2>[@V?L[.LOo#+ZC@hDd!pJc(r;Zm_`5)Ae!l2]9qZ$dH]>;@j$i9o/=N87n^rq!,mf;AJ#;EC&^V@gj
/G]>L>g'n(H2@RC(U_-Y^B)Mgr;ZmYZ*+).!j8ddqZ$dDWirY$$Msf.:U@:-Y./<Ol2^#J#:c@RXf\t"
-i*fG;n/s<D>O;7'r8)4XT>q9r;ZmXYH7`(!j&R_qZ$dDW3*4q$Msf.:9gt&XL;pKjT+ZJ#:c:NX/iOp
-i*fG;RWX5D#426'r%l0Wr]V3r;Zmkm-+H2!pJr@qZ$dPiT]XY%Jp,1?Kgb;kjsN2huN<J#:e!gk2u0R
-i*fG?L[.LOo#+[*89]VjoP+"r;Zk<b5K'V`2<n<!!O^]_8<Mdq>^am_Sa.(b(9cO!;HO!27UZ@^WN2c
q#CP&bJ2/Eq>^PUa8NaRa,U#t!GAn?XTGep#Q"K),-%iNU'g_s#=G]"Xff0U"4mPO!!b0S[&pI>O;7Qk
"B2h4[Vbj@!IqNUXT>eZr;Zk0[Jd--YE]@i!!ORFXfe<(q>^aeXfne,[W;Q"!!"VUUp@&%[>kss!!H3.
X0c^>!!.PSrMot)If06IM"LZ.!pn#8qZ$dPiT]XY%Jg&/7H!Uqkk0h]!!P1.nE&g)!O*:6!!HWtkOXi4
!!0+hrT4.MWr;u"!L(P%^B)H/q>^[G]>;@j$i'c-9>AE[^r_'7eGohC[`-"rb*s@K!;lg">g'n(H27LA
A]t%e#K*\Q$ig<^[/I*-[W_KI"X9tMYbDL#!!bimZE::<EXL=s#<nujXf]'k(\dt5;n/s<D>F55>ds[6
#I0g-$NL3\Z2L^(Zuu3F"X9nIY+Q-t!!bijYcFk4E=14r#<eieX/iXc(\dt5;RWX5D#+,4>IFF1#HsU)
$NL44n,;ALnt#UW"YSculIHF?!!c$QmH*O%KEp$-#=[23jlZ6>')2G0?L[.LOo,1]!!%?;rT4@Nd1-Wd
&@'.O^B)GWq>^[G]>;@j$hs],6+k1N^W_iPf)Q%T_Ss7(bE*;0!!HQM^WCct!!4ae_>_1S_8.rb!"P^,
rN-+/:AOqo,-%iNU'gYq#<JljXf]*d%bC[c9<b_'XgirmpAb=p\?32Vq>^RFXfq`+s/uSZ0)uKSY5PC%
ZVC8r"X9nIY+Q-s!!bN_YcFh5Je$B4#>2,&WiNOX%efr+;RWX5D#+,5.''KLWs5].0/!;=eH"n5joP$d
q>^[OiT]XY%JTo.6f%1lkOkPYf)Q%TipZ!lo:6?b!!HWtkOXi4!!5%?kl0]Lkib5q!'A*6rkAHL!P0HN
!!O^]_8<MdpAbFZ\]2@ub*Wps!!coN_S<n/JdV2O"C0-baa*^_!X>O?rP&Q[@q,KsYcdu-!jARDrW)ls
"X9tMYbDL!!!b?YZ`U@=M%ePB#?J.7Xff-U#ke6$;n/s<D>F56"dcOnXTl:==o^F_XT#7%Xf!39!!"2G
W3*4q$MON*1Sq@WX0dZrf`27WYcb%.[<)]J!!H3.X0c^>!!3=hYPkL+[THW38*fC<joXf+-i*fH0&c'[
ed_?R#<UK*jlZ3<&D7$gB'\gFkk'i:p&G5%nE9D*q>^R%aR&lf"n["_!+a=P^B2BK"Sr*%-G.+2ZO?[2
qZ$jY[)]nqae0[0!!iUCaMGX-b&mj[!!HQM^WCcs!!.hqrP&NXJUmf*\G`N2ZBGFf!!ORHYHX`.pAbI!
/u,eTXgaB0g].T\A$rMBYIA3Jo`,+n\?32Vq#CG@[Jd3/[WQ]o!*Zi0WrfMf"Sr*%,,hWHTF1Am#;2^U
WiNOf);G2t!FiC;X0&aB"8)Ws;RWX5D#"&3GdI@L#IJSp!."8"joji/mDB,(!!P"6l0?h/p&G=NcLU)Z
oWf1c!![K2lK.:!Ie3UC?L[.LOnetXU%/*D"nJ1R!.Duf^B2K/!;Z[!-G.+2ZO?F+#;*.#^;%df+l32(
#C=P/^;@p(o)JnubJ2/Eq#CG,bPf0Z`L<4qEjkqK!O[+J!!`K(,-%iNU'gPn#:Q1OXf]$t*o6l%"`CfP
Xg#0<o)Jnl\?32Vq#CG#\G`N5Z]'hCE4#SE!OHnD!!4@CXTGYu$M=B(-_.NDX0e-4h>dcaD7-IGY-M=(
!!H3.X0c^=!!-<4rMp+,MM_D$o)7\OnXTCT#;5!"lIHCE!;?Hu.Eh;Dk4?/+h>dc]L[s]km-ST[!!HWt
kOXi3!!.H>rT4:O\[_g/`r3XQb@p\O"X^jt_QsXH!;ca$-)o&%^<!?&huEujM9E]K`5,UI!!HQM^WCcs
!!5L*_#D(P_m-HKLpR&^!OuJ3!!ORHYHX`.o`,6t,+?!CXgOWChuEuiHap5\ZEI*q!!H61XgW*B!!59f
Y5YO,Yb@`mLU$fY!Oc;0!!ORFXfe<(oDet:R'`mrX0\3<huEuiHF9iTYcU^l!!H3.X0c^=!!59dXT#7(
Y+M<g[I4"U!VLm:!!P"6l0?h/oDf.C_t<*Qo#<$Wi;a)gP4Ro!mbqOD!!HWtkOXi3!!6!akPjTIlIFDk
Xi(.Q!l2fGq#CRF]>;@j$hF?'+.LBe^<!N3quGm[#8NKH^V@b!61FpX>g'n(H2.FA*4`rc^BMHf^'U=7
riH7)ZU"<d"X9tMYbDKr!!aL%[]QX=T.0L7li78'L:F@fZDTbR!!H61XgW*B!!4%9YPtX-YH+]0R]l^k
!j&Xlq#CRBW3*4q$M+6&)i:r&WjA6Fnc81[#82]uX/iJ$3Um(P;RWX5D#"&4)5XJ7Ws,W)W=.)=roO:F
mT0,`"YSculIHF9!!aFAo&f')bUVu[p&G=/VtB06n(0_m!!HWtkOXi3!!4A%l2KfKl/^nC\AJ6[!l;Ms
q#CRF]>;@j$h=9&'qi[`^;mN0klCV]#9BV^^V@e#47E4Q>g'n(H2.FA#H#H=^BMEk`"o8TriH7*W[%<>
"X9tMYbDKq!!a-u[]QX<TI/_"#8r`6Xf\q/2"1JJ;n/s<D>=/5#*uRoXTbl5Z50:>ri6+&W$D*<"X9nI
Y+Q-m!!a-s[&^44SgNLu"<!B0X/c<,V_mlC"B)\/Zu#O<!X=pnri64(Yco2*l2KfHl/OGm!!P"6l0?h/
nc/n'Z1I,>o#W-;!!sCJo]G9(gH,B8nc/f!nE9D*q#CI$aR&og"m>:?1r$m+^B29Y&,?2/-G.+2ZO?:'
#8EQI^V7[t46?MJ-*#&$^W3]>q#L-h"C0-baa*[^!We5"rP&KYb:g!$riH7+U(-nu"X9tMYbDKp!!a*m
[]Q[<V`!T:#9fPDXf\t*0_>AC!!H61XgW*A!!.PUrN-44\1Xhari6+'TFL\s"X9nIY+Q-l!!a*k[&^74
VDRE8#9fJ@X/iP"0^euE;RWX5D"mu2IBrgP"Lba&k32g,!p\AMq#CRNiT]XY%IjE'&$>KejmU__jo>W2
_XcjOnB`rZ!!HWtkOXi2!!0%frT47Uoh*6>rkANRRfiHd"X^jt_QsX>!!a!sb.k^1]L(f^#;WR)^V@jl
.dd9>>g'n(H2I[@!!.&]rP&KXb!`V>riH7.N!&kU"X9tMYbDKo!!`pc\#ld<W]TDE#:uOTXf]"$-11a9
;n/s<D>4)2AcT==XTZ,B6a<`lWrfPa"8Mp#,,hWHTF1/g#7Q3lX/iJ'3p6PK/=s/JX0\6@mJmAf[]?cO
p](>+[Jd-/[C'3,kPjTFm^iVt!!P"6l0?h/n,N\$U%IO0n(pIr!!b%!n`K!(a<p<T"CCT\o9&eJ!Jg=G
jok>K>0F\[^B)E1p](IE]>;@j$h"'#$]E0C^Vmo\l2V&N\]2D!aJC$H!!HQM^WCcr!!-BLrP&HUaATPH
XT>hTp](IAWirY$$L[s"$%04bXg+uql2V&IVmNS.[?MZu!!H61XgW*A!!-'0rN-10[8FC2Wr]POquHZq
"X9nIY+Q-j!!`gW[B-F4X$Z(O#;r?`X/iRi*:3_/;RWX5D"mu2;muY*"1,=No_mnQnY5dY!%nE5l0?h/
mf3RtOn@humGLP#!!b[;nE&g([i4W6"CCT\o9&eJ!H@`1job2FH--$"!QoT\!!O^]_8<MdmJmIsJBPaC
_o,L?!!c'/`P0.1R25,h"C0-baa*X]!`I.UrkAQT`bi0_XT>nHp](IAWirY$$N'nq!!`^L\#uj<YtF?_
#=5DrXff-i'C5]%;n/s<D>4)39=Ff$"1,=M[/I$+[;,I:"X9nIY+Q-r!;HO!#'%&PX08]uli78UWN`G)
[>5L_!!H3.X0c^<!!,]urN#t'!KlsOjoP(6p](IMiT]XY%IO3$"H)j8jmD,.li78\hs][iorSel!!HWt
kOXi2!!6[#kPjTGmd?C[rkANLb\$VM"X^jt_QsX;!!`[ObJCp0``hd1#?A^\^;7pK%dO)t>g'n(H2%@@
8B&CD^B;BkLpHu]"1VS9!;Z[!,-%iNU'g8f#6\hPYH>%8;=4Dh9X1k)Y-r]dlMq&d\?32Vp](@]Z`a;0
"0f"aYl1U'[TiS.#64`JW3*4q$LIfu"DYBIX0/^(mJmJcYHP".Z[3,H!!H3.X0c^<!!5EjXT#7&Y-,2"
rT4.RI/![C0&c$rlIHF3!!`RXoBGB'l=')\#?^'Sjlu8t$L7Zp?L[.LOn\nX=758Njoar8UVm&F!R+sH
!!aj__8<Md!!)Ee#6Sb]_S3k,A+9O)"D#Qi^;7m1"R5si>g'n(H2%@@6c?e>^B;?iPd11h!P)8+!!ORH
YHX`.q>g*e#6J;>YcY+9=Rc@s"'N"8Xfo0F"6ojh;n/s<D>4)44gM6iXTPc1P-=hb!Ol)(!!ORFXfe<(
o`4ae#6J5:Y,e\1=7H7r"'Dk3X0&^>"6ojh;RWX5D"mu34KtpdWroK+`9[Ba!VUU0!!P"6l0?h/n,W@d
#&NPijm)8Hn,NZ*mH`m!nU'L#"CCT\o9&eJ!`A=IroO=JlEJ,'^B)M_p](IE]>;@j$gRcu!*dCY^VS$0
#4qm##_:(6^V\$&kPt`jbJ2/Ep](@\_nc8d"2VgGYPkR(\5W/&"X9tMYbDKi!!?*'YcS#2[UKF4!!`aM
[]cg:Zs2_o"B2h4[Vbd>!]mThriH:*Y+DcoWr]Y,p](IAW3*4q$L.Ts;6R.'XgDL?!;-<s#B@/RX0&[1
kPt``[]?cOp](@UYH7`("0ATRl2B`Fol'U*"YSculIHF0!!cZjlfIF"DZ]e9q>^a)M=Bcklfr3J!!HWt
kOXi2!!5m\kl0]HkifLkrP&BV>5/($-G.+2ZO?!t#?&RY^VJ!C!qu[#!!nJ)^q[b,=m#bf>g'n(H2%@@
5/P,7^B;9eV69d!!Ou#%!!ORHYHX`.kl:r\Z`pR7\9%fG!!<IS\#oh8Yd@3h!!H61XgW*A!!5-aY5GC&
UoaNq!OYc!!!ORFXfe<(kl:r[Z*(./[W;ND!!idU[B-F3Z;(D`!!H3.X0c^<!!5*^XSf+"gunXu!VC4'
!!P"6l0?h/kl:ohlg*ZsnrEAC#6C:ckiM-t>5J<e!!HWtkOXi2!!5gYkl0]Hkif+brP&BW?2+C'-G.+2
ZO>ss#?Sj]^VIs<"o&'&%?&?D^Vdulo`4O_"C0-baa*X]!^X`>rkAQO_4.\-XT>t3p](IAWirY$$KqHp
:9q.,Y-r6Op](O-ICHA]Z*@*o!;?Hr;n/s<D>4)440bsfXTP`/R]cUi!Obr%!!ORFXfe<(kPti^Yck+/
Zu#s@!!`mY[B-F4Y>4B`qu?jt[]?cOp](@VYH7`("0ATMl2B`Fol0[+"YSculIHF.!!cckm,dI%L]R8N
#7?aekN2'k>il"h?L[.LOn\nX:[@3Cjoal4TZ$fD!R,!I!!O^]_8<Mdk5Y`a_Sa.(b(U/u!!a:*b.k[0
^.[Pf"C0-baa*X]!^suBrkAQP_N;&$XT>t6p](IAWirY$$KhBo8?];#Y./Z]q>^a6LUaIgZE$@S!!H61
XgW*E!;um!5-h?jXTPf3O0AM_!Ol,)!!ORFXfe<(k5Y`WXfne,[<;iP!!a0l[]?I5W^>eI"B)\/Zu#L;
!'L@eXT#7&Xf]D)rT4.SFSGh>0&c'[ed^dB#>O1Ejll>r!r;m%&?>EdjmM%tjT#EinE9D*p](@nm-"B1
"7#04`r3XQbA-eP"X^jt_QsX4!!c$-`4s(1NXbmd#9]b`^V@h"4lcSG>g'n(H2%@@9?+dH^BDHlK!VTY
XT>q>p](IAWirY$$K_<n5HM/mXgiigqu?sAP.%Kp[APtE!!H61XgW*A!!5QqY5YO*Z*AharMot-@/'^*
,,hWHTF0f]#=#5mX/i[W$iBu0*0@P.X0\W]j8]<\[]?cOp](@_ZE4&+"0\o1meu8Komlr?r;[!RiT]XY
%H[Wq7c<^rkOb)Iqu?s?[.NMBo%$(e!!HWtkOXi2!!6?mkPjTGm-JW4rP&BTHh[R@-3Urs_QsX3!!b^"
`kK42PS3rq#:Z[p^V@jh1ZJH<>g'n(H2%@?<Qb9T"38Gl\,EE0[Vtp@"X9tMYbDKd!!bK_Z`U@>L(O=a
#:,bHXf]%!/`Qg6;n/s<D>4)39t(#&"15FE[Jd-,Zu5X="X9nIY+Q."!9sOh2lEp]X0mTkrW!0KR'`op
[$E<(!!H3.X0c^<!!,g$rMp%+Z@qlKjoP%;p](IMiT]XY%JKkk!!bjFn`As+V@NS*#:II\k2u9N/`Qg6
?L[.LOn\nWBCl)as6p%hb5K'Ua,B]m"X^jt_QsX2!"_,oa1f=2RMZ#dZH'\ob+9U4!!HQM^WCcr!!-NP
rP&HVa\B8DXTGW3IeWmH,-%iNU'fr]&2KlcXf]'j'EBt`[&gC=NZ$gV"B2h4[Vbd>!Eco2XTQ#?9XXi"
"1!:S!;Z[!,,hWHTF0`[&2B`^X/iXc'EBt^ZDst4N>UXT"B)\/Zu#L;!EZc/Wro`9B(Z&a!V!#`!!`K(
0&c'[ed^[?&2qT"k2u<>&HF]5o&]$*Zl.j'"CCT\o9&eJ!Hn,7jok8G7E*(A^B2?K#5J6#-G.(q_QsX1
!"L?TaM5L3RU!PF^;%gT']B#p>g'n(H2%@?Gffp!"O"tPZEF2/!j\!nq#CXDWirY$$31(f!"L3?[]Q[?
MGpR]XKAsc&`E]m;n/s<D>4)3D79DF"Lts*YcRi)!jIgkq#CRBW3*4q$Mjbf!"L0<[&^77M,L=WWiNO\
&`E]m;RWX5D"mu2Cpa/A"Lba:mH=K2!pmi1q#CRNiT]XY%J9_i!"L'boB,3,WaX]Ojlc91%H.9i?L[.L
On\nWOn8P6"SMF=]ts]_!lDA]q#CRF]>;@j$h+/f!"9sDaM5L.aMGX,b(gA_!!HQM^WCcs!!34d`r3XT
aiPp2YPtX*Yb`$/!!ORHYHX`.lN$\[$lbA;Xf\k9YH=t:H3rL0"B2h4[Vbg?!Wn+`rN-42[O8&Vri6+'
U_EP("X9nIY+Q-a!;um+)N_;+X08k3X/r^S$K(me;RWX5D#"&4!ediWWs#f:2!!m"joXi')Yj@:0&c'[
ed^U=!#l<Xo&f*%nEK&to9Ta@!!HWtkOXi3!!35-n,;AOoCEX(_Z%:O_7hSu!!O^]_8<Mdi;a!$WlVri
"i%gfb)6P_!!HQM^WCcs!!3M/_u@CS^r!r#Up0j#!jA^Vq#CRBWirY$$K1sd)Oe)4XTGZ8HiOE/!!H61
XgW*B!!3IsZ2Uj/Y->,BUTXTs!j/LQq#CRBW3*4q$K1sd)ORl0WroH2HNsEKirB3[[]?cOq#CI&R]l^k
"g"l0(Ye6SjoXc.3V`XY0&c'[ed^R<!ZT#IrT44GoTB=O!9aCc?L[.LOnetY%++>>josu6l3F6*rkANM
a\qp7"X^jt_QsX.!!jXBaM5L*b'OBa!:9ah>g'n(H2.FA.)!Ir^BMHc]*=V,rN-+/9)/Gj,-%iNU'ffY
#TAr8Xf\b9D[,S/nc/ek\?32Vq#CIAX0;N)"g=o)#*lCjWr]Ouq#CRBW3*4q$K(mi)O%M.X/raI#3Z']
!!H3.X0c^=!!4CDXo>@)Xf&'&amB#h!pB)`q#CRNiT]XY%H%3l(Uinsk3;Jm"QKL[!!HWtkOXi3!!4k7
l2KfKl/CS%O2q46!R#HX!!O^]_8<MdhZ*itS]SakDZeeq"C0-baa*[^!`$hPrkAWSX/c8Q[/I*-[q5@8
"X9tMYbDK^!!X0t[]m2N"5Nq[;n/s<D>=/58$oGuXTbu!RfS&FrMot,AGH3/,,hWHTF0QV"r3''Y-_X?
h#IRU[]?cOquH]r!_0Jsri64+R@+)Wn,;ALoS3/A"YSculIHF%!!X">o'>ac!Sm_Y?L[.LOnetX?LRsX
roOCMcHZE6b5K'Ua,B`n"X^jt_QsX,!!<k$``h*s"C0-baa*[^!H60[^Au7VP*,f\\,EE0[!qfN"X9tM
YbDK]!!<ahZV]BV"B2h4[Vbg?!G/e>XTc(bKE,eqrMot)IJEjH,,hWHTF0NU!tU3m:tksQ;RWX5D#"&3
A@DH;"gWc5!0?dNjoFlNW;-Ds0&c'[ed^I9!tML"?/#>^?L[.LOnetXL@tN-"n/\"!*dVE^B2<R$2sr'
!!O^]_8<Mdh#IHh3SFH9>g'n(H27LB!KY;"^BMc*GlUaOrN-.+RgAij!$VQGYHX`.h#IHf1YMg3;n/s<
D>F56!J7]WXTc1OD?*PArMp"'R0`Wh"X9nIY+Q-X!!*Wdg&M7R[]?cOq>^QtJ?o-S"gr2a!,_B,joXko
$i0i,0&c'[ed_NWiW&uj2;/$5?L[.LOno%Z!Nkhhjp(F?OoR&I_>_1N_7qZ"!!O^]_8<MdpAho-"C0-b
aa*^_!Y)?NrP&EU='#J(.'9]PXTG]./,B5L,-%iNU'e7-"B2h4[Vbj@!XkU(rN-=5:JUs<X0&E*X/iA'
.f',K,,hWHTF/%+"B)\/Zu#R=!XkR%rMp.0:/1dHjll^+!pJf-q>^[OiT]XY%C?*<?L[.LOno%Z&CTnC
jp(BiBE/@<`;RFOb@USO#64`N]>;@j$a]m:>g'n(H27LB5K(A:^B_Tf-7/]uRBc^m!Ol;0!!4@EY6(r&
$FBd9;n/s<D>F5633fXcXTu&1+sI!mQ`p@g!OZ,-!!a^HXfe<(!!'G-"B)\/Zu#R=!][Ecri6:+W?NMd
$I%i7joP+#q>^[OiT]XY%Jg(:!!HWtkOXi4!!5g[kl0]Ll/OBK!!%ntrP&BRNVWVY-G.+2ZO?F+^]4LB
bJ2/Eq>^P9b5K'[`23_C!!%GTrN-+-JGK6L,-%iNU'gAi`;g$>\?32Vq>^P.\,EE6ZBb\!!!%APrMot)
J,0-K,,hWHTF0ubaoDQB[]?cOq>^P-[Jd-2Y`o:p!!&ncrT4.MX82f"0&c'[ed^aAcN")SnE9D*q>^PP
o_mnWm)KA;!!$QPrP&EOYS-g5"X^jt_QsX/!7UuO>g'n(H2@RC!LUn*^B)H/r;Zk&\,EE1Yb2U*!!ORH
YHX`.g]6"-"B2h4[VbmA!We1brN-+/G5VCA>.+=0!j8++qZ$dDW3*4q$J,:7!!H3.X0c^?!!31WZ2L^(
Zuu<I!IFD:joXhu(Ae(80&c'[ed^%-irB3gnE9D*qZ$[!\*j4W!V2f[!!4^d_>_1N^rT@L!!O^]_8<Md
blHr-"C0-baa*a`![taurP&BT<W)n!-`jNMXT>h$qZ$dDWirY$$HN57!!H61XgW*D!!4FHYPkR([S?]#
![k%NrMot*8G`Aj,,hWHTF/R:nc/ej[]?cOqZ$[CWNH-"!OPQ!!!5%?kl0]GkOE!X!!P"6l0?h/^&[m-
"CCT\o9&nM!\i^"rT4.OBDhf3"JNg5^B)H5qZ$dH]>;@j$b698!!HQM^WCcu!!-iXrP&EN[i>8G!X+[l
rN-+.I/<mI,-%iNU'e7-"B2h4[VbmA!FWG9XTG`()>sO:"H]kdWr]PQqZ$dDW3*4q$FBd9;RWX5D#425
?afp6!j8=9r;Zm&_X7<a!V3&`!!P"6l0?h/ZiC58nE9D*qu?cuJFrg&!pSJ_qu?b=b5K'V_R:H^!!O^]
_8<MdZiC56bJ2/Equ?j'TZ+[\"2DUlO8AnXBXn#C!jJL=qu?mEWirY$$FBd9;n/s<D>XA8"Hg"gXTGn^
!;lftB!qT<!j8=:qu?mEW3*4q$FBd9;RWX5D#=87"HTecWr]PWqZ$YSo_mnRlJ*Q\!!P"6l0?h/ZiC58
nE9D*qu?d&_<q3`!V!5g!!G-q^q[Vd^V@p%qu?mI]>;@j$a]m:>g'n(H2IXD5K1G:^B)J]qZ$[MYcn#-
!k2>5r;[!FWirY$$FBd9;n/s<D>XA833o^cXT>n0qZ$[MY-%Z'!OZ,/!!"2GW3*4q$FBd9;RWX5D#=87
33]L_Wr]V+qZ$[]lKJ3/!V:U7!!P"6l0?h/ZiC58nE9D*qu?dkmH=H1!V:4+!!3:q`VmOQ`M!P8!!O^]
_8<MdquF8-"C0-baa*da!Jeeq^B29[)>aC8"H]tgXTGek#5nN*,-%iNU'gVp^&S:7\?32Vqu?bD[f*<0
YbN$6!<)s""HKbcWrfMf#5nN*,,hWHTF/%+"B)\/Zu#X?!I;'NWrfGt(]+15"ht'*rT41K_[-2@"YScu
lIHEO!!HWtkOXi6!!/kcrT41Hg)g(j!G'@O^B23k9)S_n-G.+2ZO=,?"C0-baa*gb![bOqrP&BTK_YTK
>IXR5"Ko+!!!!6(!$\GHYbDK3!!H61XgW*F!!4CFYPkR([WqTJ!Eli/WrfB.6i?ud,,hUFY+Q-/!!H3.
X0c^A!!4@CXo5:$[!)6F!I457joX`8>5\F+0&c'[edVTZ[K$G:nE9D*r;ZmOip$F(!V2lY!!47Q_Yq4M
aHHK%"X^jt_QsXH!4r46>g'n(H2R^DFNaWt!l2iGq#CI:W3?0%!O[UZ!!ORHYHX`.o`2c-"B2h4[VbsC
!GT(BXTGZ45PY9\*2]k:Wr]PYr;[!FW3*4q$Le&7!!H3.X0c^A!!-cArMp"$Z9J'a![ZagrT4.NYPeG)
0&c'[ed^pFaoDQNnE9D*r;ZkVp&4"SkO2CF!!.ntrP&EL_E.Yr"X^jt_QsC-!7(WJ=NeJ$H2[dF)7.3Y
^B2BL#l"B#Ha`mT!j8aarW!*GWirY$"Q9@1!!H-.XgW*G!!3q1Yl1[*ZBPUh!!.DQrMp"$Xu-+X"X9nI
Y+PpQ!8.>T:U[=2D#OD9(87o0WrfMg#P\9"V"4KH!pJo=rW!*SiT]XX#1ik3!!HKpkOXi8!!44olM]iH
m_fG,!!50u_#;"TaH?Q(!%,=o_R2)G-fcWY-?.)Aaa*jc!HZE]^B)JapAb7NYcdr,$FPNf!!"4CYHXfP
bp)?q"D,$D[Vc!D!GJt?XT>n3pAb7NY,qT&$F>?c!!"4AXfeBJa<L!q"D"m?Zu#^A!GAh<Wr]V.pAb7_
lKJ3/$h:G%!!"Y1l06kR,/b_t,6]64n)s;)rVutVoDI_OoQ'[+!WeS-rP&TQ`C9h--G.++^\GPD^AbkO
aa!jd,e:ej^B2?W&GH/+!Je)]XU2/956([-WirP,\?,S/#d(5;D#aPYW3H6&!j\C-pAb6qL9gcY#HY-o
!!"4AXo>B.WrB%'Zto^B+/Z4>WrfMq%efr)!jqIqjpL;=;ucnNiT]LdgU5`=f\krTo8s.U!%ZslrT41J
dM)<S!^alArP&WXUBpoI]>;7s[(m$b^q[Y+GlRi!ahReh!Qo'J!!59gY5PI.Z]k^q,-%iKXgG5;YHG"0
[VZ!EHFNgS!4Mr6o`,%TYcRf(#dKNu!$\ADX/iP-#HOo4C]FH[[/?s*[9WY1q#CIlmH=H1$1>_>!&!6p
k2tp8l3QV9k4=]8!2K/`joP+%p]19n!WnY.r4`EWDZD-"`id5`c[5^^_nc5c!lV2Po`,!nL&eXZXTc.D
!$\VRY-J5CDu`,-Y5PI(ZCMKu!!31TZi-p/X0c@:,-A/RYQ_RU!'[TfrMp"'S.>2l!Wo^ur8n+OK`E_+
kO>Y@"o=Ja<9r`GjoXns'_DA,3l/Z2^BMHl0c-U`rhcrt"Ku8N[D`!X!R"jA!!5$^YPkR,YH]VmPaM95
[[.,g=V[a;r2g"0<V$1l1p3qYWs,W///486oTd%R"J&X0U9FKq!Obu(!;ZZs8*]=:jot#93uc)\Y/gap
Fr]6&r8n%PEqKG3!!./`r4`?RU(%R6%Kd4GK?=&+!lpW5nc/](\,<?1Z]bb*X:547GIIFO!jmginc/]'
[J['.Z'#M(%B^*A%0^p^r2Tn)L^3JN!K6UJjok+j&.fGV&H`XNT(;gA!q<W*nc/_4\AS6Z!Qf*Q!3uS+
7E<4B^B23j3q31O)lBn<XT>k<o`2H$!^<uorN-.(Zo%:Q!ZRu=r2Tk*?gn'.!!5<hXSo1$XKaVP!!4G&
lholGnpp$+_#OO8nE9c4!pK)An,NMnah[ki!l;f;k5`O&![+nhr4`<TIKAp<!E$<'XTG]22rXh]!!419
Z2C^*[W2E<!!,s(r2Tn$Y;Y2:d/X4gU9FKq!jlnIn,NN+oB6)7!pT&BfDsJ&![l^gr8n(PQiZ[V!XP.6
r4`<PYohHqg].BaRE5<@!lV>]mf3CoLpd/_!j\L>cN)o(!Xjpor2g%+Tbd(s!XFLer2Tn'T,YoQjo>Gj
M6m,\!jJ:4mf3Cq[dj:X!q"Ma`;o3(!Y2a1r8n(IefF/Y!\1q$r4`<SQk$q4nGiUlHcl9$!l2lKm/R27
XK_W)!k!mo]E%X*!Wm;Kr2g%'[6j6\![aqMr2Tn*L^^`mqZ$ZuDRB>B!j&^om/R2CjQc[*!qE`2Z2at,
!gN<SjoX`9=R6"h>0=YY^B2N1"L8"0A]_a&rP&EVHi`R6!E-E(XTGtU"0qn.>IL^4XT5g2E<5D+!Dp3$
Wrf\P"0qn.>-tC/Wrf\I!WE)f!!7!.kPXHDo:H/k!!7H;kPXHDoTfOR!;$6m",b7u^B2Pu!OMh.;oZZO
^B2HQ'Cu5"!!37N[em0.[q>`K!!5g#YPbL([$D<l!<)s""+.EPWrfY?!OMh.9<t\tWrfSl&aKDt"Ju1j
r8n+Eo8*LT!!6^"kksQEn&Q=1!!3t8`r<^V^V@S,C'(gD!_^GJr4`<M]e8OL!Yq*0r2g%'[U9(9[K$@s
Z*=/.!jJ^Tkl:c"QEg@g"0Ak:!W<#0!!5NkY5G=%Y,Nl7!!4.`mel2LkOO-)p]/&/!a=pSr8n(Gj#?W2
oDeqO_nu>d!l2up[f?J&_Sc;d!l2r\mf<.`!]%!ar2g%'\6ucG!^s5rr2g%'[nu>irW!!TY-.]'!j&e:
[f?IsXfhT&!j&e*k5YNMl2^,IjoX`<J[YU\>3bDNjoX`<C?>Kt=inMZ^BMBe_8pNr\c;e/_Sc;d"2N*)
"6KRb:q!S*XTGZ5A,l\B!!5csZ2C^+Y./<Mjo>HY[&s8,"0Ah=!W<#4!!5`pYPbF'XL;pHjo>Hto'$#6
"6f9/!r)c5!!6WplholIkOal=jT#?raMIeh"2W*+#kS,=!!6QI_u%1MabpGc!!6N8Y5GC(YI8BUmf:W5
!`u\3qlKq.IL"p6!a`47r2Tq%Zu637!7LoL<j8b(WrfYU#NPjdIduY"joai<PmZUQfDktpmHXT2!qN5r
irB.#b/!qi"2N'?'B&rK!!<LMaMRhh!m6K/iW'$l\$#Y2"0T+b'&3KJ!!<IA[BKJ0!k3[ciW'$k[&j2+
"0An\'%[-J!!<I@Z`X,*!k!L`iW'%:oB6&6"6]9W(t&EP!!<Rgn`fr5!qWE"iW'&^Gfmi!^B2KS0$XIh
!!=.'ah[eg!m6c;i;`r]D7HbGXTGqt.EMSc!!=$k[]]M0!k3mmi;`r]CppGBWrfYo.Du5c!!=$i[&j/*
!k!^ji;`r^On@i6joY+r2o,Ip+0bk;kPOBCo<T"d!!<@Nah[eg"38&T!lP'?5-N*+^BD<db*EXs!!<@B
\$#V1"15(&!lP'?31dSTXTGtf&)R?h"E(TJql9h)W(d?3!!5*M[/-g)["f1i!9=+^"dJWBqrS"Lib&>2
!!5d@o(qJMo<f;,!9aCb"*DZ#qnE6N`f;7`!!<gW_SuAd!m6T8nGqqV!s<8GY5>='YdAs'`rH2QCTt,@
XTGq_%I=)c!!<=:[&j/*"0SqZ*le6_%r/8OqPs\)JIUcBpAb9uN:Q30joao;X=;0i!u6m^mJ>rHo;rYb
!;c`u!GoopqnE6KaLG9m!!>Kfb/*ti"2N-=$JYUa!!-Q<YPYF(Y-t3&aT)E'S@>^!XTP`:IL=g0!s)i<
Xo#.$XL+ftaT)E'R^K9pWroH3HjSO-!s+&Hl29ZHk3)<kBZU5V:!`FpqrS"Dp88AQ!!6ZL`;74L_oDe5
.Eqhp(j*R5qS*-Lb'sfd!:0[e>-bI1XTPi8H6pf9!u>URZhgd+YIAQ[kQ(,Q!a2b3qPs_%Z?[b@!!=!M
XKhW&"0JtO$0)$Z!!@H4mH+6-"7,HO1<fe$*K94MqW7nEo9g$D!;ZZs9XDh:^BD?o]5AP7!!Eg=YfafY
^B;HkA-1B`"98EiU:'j""Ko24@i3Sn":eG(\$,Y1"1,.7!nI>Q7%gm_Ws#N2W+$Uk!!Ea1S[GTrWroW.
=p!7T!aF=Ir8n4Gk3)<oKcnbC";5_(oB?)6"Qf(7GllLr"!a8X_"teG_#qidC*M1.";b7>b/=%i!m7W+
df9ImMn#qdXTbo<UL,)Cec5gf;O=ktq5j_-S2Jaq"!<B.XSSt#XgOj/*r>rl!!F$6QF3plWrf\t1t)F,
/%P?:qW7qFo[nXBp&O"N"<;:$o]u>8!qX`-dJs@VEQ,om^BMNt]6cC:oDn%S"=S/mbJa4k"2i6;)USNe
$"pQLq5jh)\#F=#!q--U!!FQWTXV6&XTPf:HPb'0!srPCYkb='Y-k3G0*:D=nGi\:@\:'4q5XV#[<`V9
!!<Xdm-XW2"mY^<PX#<3!;6Bq0SJ$LmJ5lHlLUencN"&7X38?T^BMHq`0FIIiW/rX"W'jh^<4@g^B;Tf
=9?bJ"$N-_Y5,1'YI:]k:`S?m!>Is)I&sf^poOY,VbdH?!!>?O[B02)"g,/8L//fH!!X-*HE4HVX8/du
[&$P"c2[rDcLg>rjot#?m'LOThZ*g!>G^HQlhfiDjob22C'2]\!u-!ua8!CS^rFO-LK?#0jo>T1:49Ch
aMIYd"3&B@-HcAk&o=k]poOe(['uu[:FHA.!!XQ8EM0bJYP>4%ZF56,quG(D!toCQZM:I*XKf11Gtoaj
jo>T.7<"j*Z`X#'"0f.\,52)f!!=("m-sf4#NtRIhkFgC"m,dh.peRmo'kl<job#AW%IQ?fDl"9QH-r<
^Bh]tahjTn;D/gS!!j/d95p0/aiMBo^BDErVb[B\!8RVW2i+lIpT4_)[C39!D+Z;mmf3V(-:;C#Wj]=?
pT4S&\!BPdk5aKA"#bn>YkP1(Xg>C:NGD*9'^l#-%jjYTKrDAbYP5(#Y-jNb!oa4C!!>g#nEfo3#jLjL
l+N3h3ZIMf#S]'uLpZ15na#r3"R>U"?j#3blMq%i>I2Jip:hW``lQ9@YEaE;4=qj$*#]\7*[E6p;fe#"
_TBm>_=kVH_9'?0%FtOK!!EC&U:7E$XW=RN[C3B4LMfsI-m9QJ(Ddr.+=Ap<BRuVU[^EKGp8nJ$[]3pJ
d/`h>"9VPp['02(*NZNP['6*TD,<,=+WM@9(E"/7-S\8,J!d@FZa-_,Ws#Q3W+?C]!;ZZu"E)i_lh9H]
kO.m2mF/D*Ce-H8,pFEQ+XAQp6Y21Wbj"]gn*'K-"R5L:L_.T,r;Zs9BXPt#oY1IC_oMbt$,sTe['I!E
[_0QXa9'E#_">AE_ofZ>+2IpW'E_^;[^,M,!O9$2[0a.>VPBiYUSXuqrNu[2Y4Sh!YdUTO*T7"W!!EsA
TsV&qWr]E0rj)p8WMH8\T:r$YYPkd.YH7As"Ko,2DB.F3jo>N&IbF;Yo]?5<lgXoD$16g/g"+a-gZ%Pu
nH/4HkOdm>lLX&$-J&7^!!O3NXiSQ!n@nt>rk\fU_SX.)n\57C`lYW3,1$>X!!O-BS@,c.n?)_or3-4*
Y48UtY-YR4CECY!o)Jq/>+2e'XmiCkXo5C(Xf\\pWs,T0[%_:V`W5c6"W_p9nF5Z3joX`0l2BlKl0.=#
josr9o%K-Q_#X?4"qaXr]ZJ..h7j00`6#ig?l?NU#659)LT7ehY2-2aY-PL>O]N=/!!<a$Kr>'[Z)lc^
#->&9XcHKu\GumL?aJe`mc`fqhrY.+m.0AVEuqai"s[lW^raU5rP.O1#JnF%`2Ru7"ge76+CLD9[^<:6
XmE.pYHt[BR;FDWZiC:Q?]hFsZEEf"nZ)nsZ*^^%CFTLp!!Xs(_rpUZlL*g.jp1/=o'=M^3<lbh#m_tm
S$g8Xa2Gg^^C%`k_oBd=\Y4+$%^,j=#:<c9UpRP:Z*3Ps"0So8[0<t:P%cNXY5ek6-!Z>%ZEpj?XmN.p
XKSn8Z_igt/cZ?a!!rreICe/$naGi.mH+`=lgOB6i51F:&cD^6!!`NE3,Y+`]>sol"NJEu_86,d"Mqso
`lJ)"#/@=3GsNSXo`2B""p#StA;QbTrNua7ZE^V3Xokl3ZEsM;#-FGVD*&dCn,U$"#6>\t@u-POZMq04
Z*:C5rN$.(Y->1:rj)g0RuD/E*X:p1^Ao&O,".-oc/S6_naQ#7lfmWrkNM0qmI'KCnHS.']TGu<#j)-%
!#Q=n3a6ijR@gOd\%B;^Z`TpiPC6k)-PZa>!5njS&0Nf.CkIY-R\HXXWhuM\P)G$7=?@`@!n[Lp!#Q7h
1fA+?M3"'tUSk&dTpq.$KQ(!R+qk%,!6tQ]'e2XhOKQ+/c.Cb0in`86_Rd"=F\OJ,"47+!~>

%%EndBinary
grestore
np
grestore
gsave
18.29 704.637 mo
46.959 704.637 li
46.959 675.968 li
18.29 675.968 li
cp
clp
18.0938 704.859 mo
47.1818 704.859 li
47.1818 675.771 li
18.0938 675.771 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.89 ]ct
[29.088 0 0 29.088 18.0938 137.031 ]ct
snap_to_device
<<
/T 1
/W 122 
/H 122 
/M[122 0 0 -122 0 122 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!<2T!<rN*!WiE)!WiE)!WrK*!WrQ-!s8W."U"r2"9\l3"U,&5"U,&5#7(S@
#6bD@$47+H$k*OQ$k*OT$k*OQ$k*OF!s/N+!s8c3"U>JE#n%.M%1NaU$k*OQ%h9'X$k*OQ%h9!V$k<aW
'+PE_&J5Te&J5Te&J5Te&J5Te&J5Te!WrK*!s8W1"U,,?$OI1L$k3XT%1EXR$kEgX$k*OQ$kEgV$k*UU
%MK<\&J5Te&J5Te&J5Te&J5Te&J5Te&H`+:!WrN,#6b89%1<IM$k*RS%1N^S$k*XV%L`aS$k*XV$k*OS
%Ls-^$kX'`&J5Te&J5Te&J5Te&J5Te&J>'!!!E95s1eUK#QT/NH3=3[!!*Z4!YGJ9&Hi'O!MTPo!W`E*
!rr<$z!!!!)#mpY5"U5#1":#;8!!36&!<iK(zz!!NK2#mp\7!sSu<&-)_3"Tec0":Bb]z!!*-'"9eu7!
"fhe5mRc1'I#8/;IKnI,UG6UEH6\o()If*)C$RV-n-W$1c70M3&s#d6UX@47n?3D;cHat='/U/@q9._B
4u!oF*)PJGBeCZJV&Q/L51SAMNX0fQ'Rc(R@9hDUSO``Vl6SpZ*L^C[C3QS\[oVo_o0O6a2lBFdF-Lne
^i@)g"PEEj5f=akNM0qnF?)@o_%qPq"aau!!*-&"9Sf0%Y"KZz!<N?'"9euA&dKRW#no$Z@0e&s'I,D$
;H%%FF+T%,Ts4q>()If*)C-UU-R^Dn1,LjH2`NfY6:=737n?3D<)lt#=BSg;A7]@cBPD4'F`qtRH$Y$p
KnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG[^WcW]"u8$`5Ta:aN;TPdaQ^rf%8R-g>V&OjQ5OekiqC%
nac;Dp%J.Tq>1-F!"K,3!!*Z5&H`UF56-2!+H3=XYlkY>+G).881II:!I6%p"c+9&fFDZQDE9"8R_;&C
@Z;iGb3W)]6fm<^bZQbu*k-PqK,!@a6;#`c)b=R0f/3\#H@;T(R'\g^bj!"4&R0-ea`/ORWsEl`ne@a=
d*Ms8@`A]\8_[(SVk!9\j"[oWb#3;4e*)+pP)V*3CDY0RpCc<G(3b>4@P'1C26ip:+ur4UF>65B_9QU%
#q.VVFMlQ@c=/-Nm%(<+L94aN(CU^,r6R=8DCTjj<LKF&L;\]1aro5e2&!)1$aF64HL)Sr`3W%sOV-+t
lEjN"^t%7P9Fb(0"j0j01g/!p@1Em]T"]F$d+Uj!fCbK]YdiHZ6?%k"h4C(8rI0Q!:PH8s\1qHQgBipS
1n@!r#%'QX7Cjn^/t6lbRmjs=CiF-c<MXf;9G2iDAS-eM0kCoCG>9\nK!g9'jgRS"9%"=%0"@GR6n>/(
*J3#!JnF4l.@dE`)-QDb-MG=s&5lhQ%+16,fHp*&F.Jg=W$tL3k;H$K[,k&MG1,c)#uS0gauu#(=WV2>
#Eu'%Hs6k:RFhnKJRsZc,b-(lV;4rJjj)].&_[3rFjdA]b&K29eeqEED`%#3eDMf!^o@;G:-teN+hK8u
Ct&Yh=t?spdu??H;`'pXM*f:]G\YHpYP!-#1KJ*b82;oSc&Bm"O<m<'^"T\cP$s!YU[U:8'^$I&,49I'
1dN$)Zg36S4>:N@H5\S;P'2*?**.lkODHX+.LHrIV"KJF;R?lUjHUl@[U3k'[bO32[%)h"!/ShQUihC=
<ZluD`"5@>JdDD'J!M49Wf"%a&aRT/<9/p&.m6VujCt,.'YrpK:^.lVgN!Tn#A,2[dA!e^"s>X`&d]TG
1oD'rNlPEuBsgh+\08ZDD8L.!DMOlrMm"WKdR"U\"ihBu+TgG0li8;];6FRpfp*Vc]KX0j02:M"F@f+b
6^qP?QaUCbU(8Y$/&(?A1m!9i3+l6'Eq2b;>&fp21HN!b$pli?=`6+aU0ssdV^Is-od?J?>&@u]A7;kI
"e0@0XQYS.fcD.Jb[FUh',O3N@I3&X2;fcsit8XMR;U+$E1G_!%9`fBiC<nR,-4!kgN^)!FCIh^7CiOH
lU'`e@(QU13@:(do^Zi&R<8RqW+e<_[0S\SJUM$&+rRLCcMaF,CDIAVB,A^S(d^]JhD!JRSI5&REd(Cm
#0CG'Xe@aG3irff3N>*8ki7X#_R=1@)66ub73).Pp'JZoFFrVB$dJo,SQ+Cs6"p=sZ5fm`PJ"4J^u,W'
Ua6>&_qj/:$.`Tubp;&ZV\H6H&e`V+TH^dE>U<G9`9NkgW>UK5[aOKe3MX-L@rU".(kB)3G=SdT+t51\
@r0Z72$@lVYunP-I<K/jOu:076A<")&YU3P6.$7\LoaRX']o-NLDj2oeta>R,XCHSjtb0J5,$qR<;kNT
LqG.::WnVL`i2hM*eq^d#@#6mc+L1(4H2>i\K]2g\#B2$%CNohj&6YFYtQbCPD_Mk!au4B[EDeo[:0qX
@*\):P)C]tbqG!LU;>K91bdM&9;H!b"m4kS/HrZe@45!oK5$:m8QI-HLi6.k:,M"gipu"L2/]6k7iRYo
;T;#_@*ap-P,.2?/Ffc9>Nm&@&1CIL`E'</9[?10M7u4rSK8.u[(?u`dn-u]N([dVjO4+*H^J3BA6#Ed
_f$nDpCZ,)``7qCM^=)D!8u$1'n*Jf9XaduMccH[8^C9EJt%$DKdUi/a?!e_GaY*Y<CiON+i2:MM/Ic^
@A:[df9Ut\.8@WQgtLPFfp1_C$;Rit(l;BO.^kA51mXUu_cAN;>-h>B\R8<b4a_(?N`rN!B`c6,EJE:D
UpfBR7$O`@.QG3lmGO$f=1G:B5o!i7,QH/@Q6;-dO'U:>T.87Q+u)8Umn.!rKch\2(0;:?D_3[uG'?4s
$)9pu)$%?<KRu^@9e"%`,I-E0g2@i&C^jd$Z/IaPb>:#WGFip:-I@Dg@p>ul)\A-jSNK.=8-V0kK!<Ss
U*oTQ@mT5DX4tp`QY"c"2U'sE[TH0MB4a^OXfCo"Y3[I8>Q=f:/>8;1+Zn"%jk=pWgaiNb(8Tk<V&<E&
KS6*_R[S98.Dh3^S6Csn[[_P?D2B-08M(<*mU93;ORE^OCEnbEa#^R9hAkHJ6<ch9-\m7fS7lfq@_@e!
K>XBQ<G40ej`lu_';]4@Flhi,H0]$ROOH)+kGUG5lK.7"C0(,;&'PIb@Do%33^?fD%QY_JYfHeN!@\!K
/c]YeZoFNh9Ti'Y<Q?t..A9G(\AodcO3Ros>7#<_;Ut4+2'q3_i%RaSXPQE#Q!;JNX,cCWAWHu4j)&Jn
jH$t>3U7I>*t1o"W:i$8+Db$+eto()+Ba!?C*4&t,o"?X1F?j-#&)TpKpsJ/jZ0&<B['=LVN30P%36DE
)*G0;)6t_e&kZ+1"pqmZ_A;Gp.TmuA'!l$)FGruG^",'=0G?SuT$7S@=bNg8a_\FrM6d"N8Q+nTKIJtP
]Ih34W4.@@nQmE@5m12D+H!E,&2WI#bdUA`j=.E;K<%"]H$<hP&"-]@%5<BrWFYX_;B)p`JtmSAUnlbi
0/U+t/I[d"R?U(6="Jdc=aO?s]O5'/8<n//+Ji9.U==7l>G@o5H./7>,9JK@#Xl#+O]-<^<0T`/Mg:U8
q/ruM@8U]b74"FH=-1\oc*bFqR^%GM`Jk7#Zrs+=LQSPCS8E)F_kS.eK:F1EpC@uB;_lHgb`h9C^;HTY
+]_dDSPD8I)BhI<'$t_/4&!bAW$0^f=_S;(##O$?/?icp_jW2N2o\>J-2l@U!gSUVj2DtIFJP2.Ei#UI
6V0;2l>/L9P+(.Za&DaJX@\eC]]Bk`V.U8XC-o:$]8(6SN@O%sj3\26^9i-I'p^>f&4ccKIqhkZP,/_S
Ug?X2!#\Le,:\3hfHNJHZ#`5of'84di<Xj/V_UV_c>Z6E,Vsa_PCW07=NdEQOO!f740khe[ZZs%O_N2s
U3:04?7c0sCTIcBZH`cV.s"XKE>4s9<r"`)g((dF\B/,:Y:B'P#nVIG)9fP+7"Ml!$0iRtPJkK-)SmEM
&ZUK$gSXVM+^2p@kTH(3kWoL*Q.de]h=G`%7&^JcK)2i`R-'EEB"qVcQYMK_nJ$)Vb$S=I.>O(+MaiUQ
:pD628d0IT9oO8BibVJJ#kL@EhiK7f=`T`=_/oP<k1L&t3P%.B(Kc!%"elsK@'mVU%^D0_+Rnnr=YfOu
FBbC^/Bmr/2@O1LQEp3sATu#A)C]C07#["dF/L!D;i[=VdY@-\cL'"uO=]FBW)?cqAIYT<>O:AYLb:\7
eat>5QQjU!8oEr-=_c?B;G#e^]1!Db'6k?Qh0mkH.(`>gR)KHqO^d_+35fNSZ*f#pc4?A;Am#O<;'\\,
1,/p6O`_%&`ND1_GT?j(=`'JEVaN#Q?Ad7CDLR;=X%.DU@)=DUbh]1*Xb]Wn!]>YhN$Mc3>#KBF^%Ogl
.?;t#/M&;?Zti3?3fV#-&*G>IO94"&bUeaKI3=iBDMT(oWj>,$:l-gJn`WZq",'@0(Y3RC/9T?uo97?B
H5a#*J@$_J",pbMXHc@+2AgV&"Ud_+9kCAiN<)[G;:Ec*hdpP>`$e_cUlpuFg-fO)dQ57tWt7Q3@L+0Z
5m2KU1bAotX7V5@/B-&^`]W5ro)Oa-@5W"O]+N#%/=1<K6u*(K_ndUDA`$EYZq$!c>q[D>+(3Z+es*6Q
(To@<P!lF+fSPnGYqEM'0p!tJ-ru4#ThmKCKLMmVB54^nfHkJclCUJqme#qA9.$>nQE1mF_/('s30(5>
5sl[4bu>8OHA3+8[Tq>p[<1dB;=O%,4R$KBUZ^;<6H:)lkb2L&]%Y.YUnCV*',!=%[2K3LA/T-T9<1-U
9J20<=K$i!ft'aBGBT<mo/;G':;6&eKNUC=PUN?FQCSL.-q4kYMZn4J%I98G!D*`lQW[%XN`M\b31[p^
OJ/Uh39/X,m>gu6f`0E33P-d$>%L,E@.:(j4&!%*Wh:t[Aulc,SQ(3=p;nG//n:g_CC7nbR0IT?W$3f9
ou='O-7Ym)p&c5M()E=+RmlRF4X+IQ7B'2%J75d\NQl^-1nd5O*b(!P`irJ+7u5W_?=^SI%-%q#9bE'#
jfi%9:20qY,V>`_P`r49'JeBYoD.-a%20;K=O.u-THccZ7(&a0_2\q)`06O#VokB?K49q#/UcSd";$_/
Ou*lWFJ;(:!!!)Y0`Wc%)oa5FU9dNm=8GucWXS+t<Wm-U_(MtSR9;\f[:\XAYj*-r@J2:cZH\*7!KRrD
KslgMp$H:K'hVmR$^='d23!A3]]dMm85meYG9mDUVB]'fX&dJK[r0l;%h7*eX]i,0>1tf9.T4imGpPkA
8_0@k!u*&@oOWcED(W2XPb\GY+BX^*YpfZ^!!-IG644\q=Oqe2+3aBjC(0&'>Kk\m?5fj_T38KNM*XIa
<QTQ!P-cS*0YoaL[!/Wd^p0T+IN3Xdfu+ZuoLHcUa+r7%_(H;[n;Ac[Z5:E!FLi)A)_(nmG/7e'g5&@]
1NpU3?qaI!KddHBVG.r,TkIQE;H/j#P+ZrN&TJSM*XK*NE=O6C";!g@N*q9s&9P`*`&A\(HKpgAYmM't
^>.Pj7Z,?HC9AXdUPAR'S'JDK-)psd=0RT8Uh/mOa(^8BAB-5Bd2A.:]r]q!k8CIFF'@Uj=e#d:$Ne=T
2@Tg8B5/f[P)V=d>dP??)9!>"#U6?9"BC7#MQm9qXn0QrP8Jr['jMkVBhUttVGO7U6:_9dMe.Q&]WU4P
Z"frUP'D+Z,&K5tI`5PH!g@*@I!1n(bfT6cG:;`rqN3o&btMGi<n#)B,rW?][m2MHn,nu<FO_G7cJGU[
K$G#=*f<)m%%CBP0a:8#WFlfc5S#E-$03T>Kl4!cG4JOIg5rQ[P[i8mUF^g,26R%ZV!?a+Eg9,>b:$$-
&2BJO8SMgX3(e?(%$9VQ\f!t=a8aZ5B8+Z)ROchJVG2[$eFF1<%RO'oe#&`M+!+BNYU\dodW]Ps;6AYh
gp!fAEq?_MO*JmN_7D,q#0eQlf^/ORNY4d94(spa)/Q]2:u'F8o*&'I&iBcC`u@*pEOq+bUj_d,)RAe*
=ZJ9"+N4@HCY!Y%LHb,":8CRYg:5\D@ZP,eiFV<7L7,S/0%M9\-(>fSPHR0PM024&&i)bRB^mE!S-g.C
ThV8lR-J-_!`ok@it*>EB'T<\dAHPd:LLZ'8D*EfoA\=0=R=?0FVJ/h%0iYu",h<)dc1h24tK)lK$GN-
DEML'1!$`,*.uIs(WF;PE#6MK#7$Q,jYD()=BdY!`T%fX0,\WSBaPUm&u(S'KpAC6d?TTDRA228_ijJs
[[]q<6GZ9K`uUi;)\/)IQ)9s<.X@=1bor9[;4%Mj8s^KN6(JrXWXgpA?AB)9-tJ#Cag4_H1Jnr$<K(Co
Bm2pfTk?`AM%;FE@aHhMr[UIEXr1pN*=;Rp>\POQR%fS'mlo_M'+uQsQZ*ZN$IFcT8`Qj(J-cDf*6GaH
k6XUoQ0R1$LaHJXJ2L9l2Hk5HX3QU294jGR2b>Dd_56uH0T"@06Q0h"S"<7#;OERo+Jbqb>LZ^PD>_e-
ZWaBaohqgVQeHfi4#X<@MlBlZ6RX'*g/DSUh8RD`30aqjcshB8,ZTXCMQm9r<ZluD`"5DE3QeS*k#7Z.
kh?6Q6Ddk+`&Zod(Q8RbatSRp,_?Lm!Ol#VV*Kk(=p!,<LQrL^dPXe)8^d/[.=,:L3e@g.d%IEt#0RKQ
8;PPanL2X"Wt;e);k_4qSBqAZ2r(5s?Ag1aObhf"TgNo[FK6Et@NcpeD9[WkqQ3^k(PSq-5;%n2;GpPj
6Pb'r>A$_M<)Rl`,^$i_VS(_;S]t^@ddfbqr>B)M\2+lOSejK.5QB7TlRZmo[:?1uVAH>X'3n1'i8Z*j
H<V.-C\9,I(3I@'d+CZDeTo#S@bb`^:e7Tg-(s@)YQc@T;Y"%_#8VNh9M'h6JZtFd=__/`AsQ3=#[<fZ
OqKAR6`UnV!"I<k9VkoaLIb.hJJ]&*CBN)Z5<29G8R(XCkpJsNX\1b?NIot2\eIW54j,Bh8LA>>)rLp!
4;mu290ml%?J$ik;&^^kmG-EuW#4oA(Qq15"qN4o[9BrY;U*sB=n\F&@OF6W/$lV9A4;XJalXN8pC2O:
AGZjSe^<=Y>Z07,b;P2=U69?^)b$ueM^+@$+%],R16#!^D/IcK`#Pa[6BZPe,@HYqjA"+)T.2[4V@9>8
gccG"U3LqhH[05B8l!S6S#t)W>sU3q$+uoS*YU&=WjPWul#_GL['T3$F9uf\/-Dkb`tFJa^nDCZ()JU=
*#QQNYZGFSN_YW!#\M2:,_W!C"(X.Pc96$,WC34L4\A%0JiN5M3lOZhoV;&3ql4f5QDM+!)cWX^g.<VH
f'+2`FB+,>MQm9r<ZluD`"5@>JdACg5nVboYq;\Tbpu[o1I+;5j$u)O!#Ga8SQRD@ln),Ip3(?sX'$"*
Go'dA\CmEq[<1O2W+Dp]VDI?En[toT]G-_QpXo(U1Te9fD</tU*ZX]IpDsaV=kfb@;?,2`UtrLZ8Na]H
e$DG!\&-9k^Tf<(HT$,B@qT3U;2o'q(FKL6R1(!38n?[sO+-N!P0*dCVehA87iiMJ&4%%?#U2J.\Z'W6
c$57:SQMj&.ZB!7\LQp,Q\MLgIUi]a?C&J=m"&WjW:t5<Ak5c_e]3]Q382U$X>6Zci,W!ueH7NrSW^'g
k?qV_?YN!?YsEqQ;NEG1RcSggRW-e/`S=pi3tQINc*8:B,2RMWGpGn2$G)m>``L<cR`e_Zkb;nH7(^[t
P<<\Q#CBEBL)ghIMaO!YXppQ`itHWIp?pHXoW=<f"ee2?Kdm;JLp4eDD&1/4$;QVKUZWY`I5bDJ8j\*V
$:u[Cm0#qK@QMG@Wt7Q3@L+0Z5m12D+H!E,&QU$+&O(Ho(/4<c3A`u%D\A9p9eP"[Q\WM;qZ%CG7Vrai
_Q$7C]0pH6A>It?i+?[1cp[cHC^W#`46_8/6UnRhA42?jSh<8-f,:Ge7u8"Za.1j.6[=l-a->MP<u?;\
MK_e4(3Y=U]nh>6(KPYe>`+k-c#UXjS#JI8h&bE9eWp4(Wej2*4gBKXFFJF7)[FA6gTs`!L5?7/hMm[1
A3C.E*-ruD*0lmq/diAY'ToC)LOBcqfRc4?<Zltr*8GXE[9'-,;+N4*HCLnff,KJg!,.AJJo6$\:;7*u
E7-M@#oRS(7I9EcH3PTiZ(<mfd1L*!3d%*"_57q#@WBSs;rC<]:E63!g;Bg7eXNB!-#,.Vi'Mr=(aAsp
Cu,jqfFUqsLS::=!*`RO[*O/9)15&Rb%T$0lk$6kH%MuJ]!WCFQ:HKu`J=X1_q%gY0l_DlJVLOQpX+*H
LrYJ'c"D68:(WCoPAKTCOX4Ot"AJ$lN=8msOZ@8T*-2A`U;XR=&QU$+4=Bog3Y_!gifENSf2/9<7XAg(
/F\mA8oU(o0.0jQ!).J[%2b:!d?Bd_B2\+GCTs;-8Pu^%-GTqK0G'lkOqa/h_&0um`-$mS&8X(J&4%%?
#U6?9"@r>Je8Z(Zd^(a92M#]+fMj=<Z3q0=ARhq\S#k2%9oQrH5ut^0BlbsXg??0NauZ5)R$a:cZsO6&
4[;0)4``7-\P8o,&Jcu6q)uA&s3T<&Ce9PL1IoqA=rN$`e@$"uZBUi1dh$%HC`Ra0d*Pq.MXN;D4Rt,;
GI[O!B4_]R=n!(mS%uQbIT\pMB1jP_GDSjEkHcV`BW-"SR`?-"7t5T61P<UP2lJmW2TX>TAt[3qFAOl"
1u62CL/O%=A/NI+D%%@5UZ%f5UV\XlVpt<@1Um('(2=6OFs>!NmGa0`Hr;H4&4MBX&4POC7>N(BpZBYl
CSI(WiV!]DVK*+;[a?KYdZ^B9[jo7@E5*FI)O(qoq!gUZ_)?-V0qKT,U*2qs^3&Kh!ukm@q5lQF/)^4Y
e#idDaFlDF-XLd.=Ob?mi%D3QMfE&74B&861fDH8$U%)-g."(*CPIcub80H2M6"71!\g%L:*gCe/g(bg
FelO:%!Yrq9rcS_F2HK8C@2]aXN^oB21:77LpHjk0qm)0%Fq97#@\.8OCSed1Jh#-mfdf42C--C3['q[
7Tt4VPeFA<G,\73=?8MfG]d[<bXr1$XJTH,D&dj>@C3]$*?)I5'=F\pO)*SW.<cF`_Oco9k>Q5nQB[p_
].M<pAr9Tda!F(mHT%p"YHeU%S0j%K0bO55"U0=2_r1cD.skKq,-u;U$W9p@bJD5BZPaPFBc!'9O!Dpa
+H`E@5/>uAPcbbLNhY\Yc6_A8AZ$TTd+E>H2VXl2cqV$PdD]ol0!!RWP?VLJ.o9hIYuV:a<p:$&^mJW)
3l&S^-NkBn@B0]I.ZKrU/r#(16>)opVUZO>HjFLIe/T(Jq^/B76+)hahH%BFk3$]ACptG7h*BCZL>/:!
!+&@t+uQ4')t@c(;oT(Q/K6+;UZ<,NL+9l)PptNW1KNVac;S<HKY>@])?q$UdhgDRk_RI<e%K@5;Ce2O
2&b#u.R?J(,ZpApCph46!!"u:EB:SKJ.TUM&gg$oMQm9reD7GIAhBSq)C::HF=EtSMDlh05UB#M>QD#3
GHeuG30YOhU-J]lP&UIG0Jtb!I&f,FEgWAKSfT8YQ+2Sp"*nMJh`u3I)Vr<H(3\,I[YCH.DQ()(3D=H'
^thqS_3PIBg-0"P9U(u=UtLSqCqBEi6]UV&D;Tmjc>#!1dl(L;ogJc_ac+*qA_!Pn:O.A%s3WMVam!9o
d\NjD+g1*DodI9&RP%O"DYM]<_4l[pS&)qt9220%YsgZ^%4Kc+$HXA@b`K_7BWBNE<2N[t-I\SB%c9+6
I3V`d>'GoqWH5PKq`#SE1"#4&hM1,N!uHLmME!&@]/.9L@[kWX[:55kY:RstD^?aTTI`TnN-`GW*B<n%
CK:KQ8l.9Cb"]KL/[H*K%!g:OCG$Vq\4TNZ)F>FOQU<1E.'!nF'k.Fne5aAHbLOJ#`ai3J;T5ERFMod/
,UoLA6',,tnr;"Z'KGml8]u#s%i1HF,KBU(e6Og$X_3SRe!MA_o$m%JD7FJph6nW\<(;,\[NJ`a/>sju
;&bq_8==21f,KmMpi>>Up^=s+4>K_m$QOEEMN89(BUb6?$q)$pD8`P!Le?]B6ARA/\2D,l?a&!l<h#f>
%SONtUmtJ]o$_@oZF$,o)FS,A2.S.0g,!KgC1c"ZJrm>PPpJe";PA(8AhDe,Z.g>@lY(:G+^c"H@0?W;
a?da4HP/fJ;fmp^9,.oe.esj<b:a0*;#^%9\9N*l^j'p(R]0peC<9(6)a!_c>K5\P=pecQ[oA'88"j?A
!YnnKe>_`E\RsN,AJSJ(BLTrG2P'pL>,3\Q%>C5R`p]?/7"S'Q4>(`<=d;n=ZK8el/$1$oll)nefP7S-
(?jP<']_h\cJ>eO&t>oK(lW[_[M#W>TQ-$H*hTO1K^)aF<S-FqFP0=7:2H54*>RBL0etT.?#0Ui9gM9C
7[6NEA7gnP=^n&>b*LlendEpP9u6AAY+b+5=Y=C3O>#08"^*G4qa&.7R-eJ5g;8MiNZKl97:Af_cW05a
!-oLBaP&RONMf8-<fU.E%60OcT/Jt_WEoZdbAV*DJP9rTT:FXDY:SD'*#/HJb"98r)&*@uA?/9oLbS'$
$V2Hq%_Pc`>,^!YWZmUBU1.EI2W@JpP&*$f#=KRd5o>PsQK]F:Ool-JommgoMaZL-kJH[Fe9j4q3&=RZ
=h:^[:V7*<JlnNCFsX$6,[%kFa<EJ<g"TO:',I2rQN51F-5IGeR;2Ab+(W:?NHD6BQu?H3"m\"nKgNu,
.8&2h/#44?o"dqbl(ShF4g*ao?BD5oHP:WJo%-rd\XBhi6/.B%Q6=7+IG8d3JEE/+V)9J#'+ulJ$(=8M
A.:ZhbL6jf$PBXGM#l:'2iLh!s3c6MKW,*GV.fdt0tQVj*6@-n*r=%VM.G9c,c'J28\XheKEICn:nj.e
Nn'dS,T+a/O'LpaV-##mH9'04'(-poeWEEGMaj'p"DNc^7_4#3k<.'jD>F=3`j"-f7Z"F!KLHadZrTb!
MWFWZr'W+Z&iKGU3l3H0[AE$Qb6_E?R<$P,)qT]\q,K-3K*J63@ED['<86c'a!r;!m%#h.XuSO$>u8o[
rc:*O8/6KLE;?3HCn7F>"LE0:TkQQs-h*[,^uNe1>ZSsL;JtIOTG:-S>$Zk%b<?q8]A-lP[8+&f1P)"c
obB.fV:J9#Sg+oMPHLBs0;jh21mBa,:VQ5UO">[%.`;le=Fpei1Ke<pL"GR/0k_tF%&q\8\s!GL?-$XQ
`"KB6p8a4I7$<7Dif3js<"+UTU=%JHo9+[PB[M_sX@]OV8RP_o1=LH;U8A\^p;Ss5=on>N]QOIFLFo<)
U(TctO3@((;Df,Rk"&^p&j6G:Vg$`/ZsYb#d5_mrJh_j1"C+58fs4Wm/J+aM.5i$s>,b]hHHei48^W_.
H<K=cD8[AkU$ILoLc,f]"9Ke[DR%q*@'?9mDUho[RBncjR^5[k,13L8:#?nSUcQ^0m$+E(IN#B"S*Lce
?%'OsRu&?:V?V4:i9`T3ON,Qk[WWm*'pDfr6=U4bc9hoD.4(:sALU[.#qM6DJ8Si4U:+)lQ)-E.TE>8%
bHoBMbKH+8]15BC-ES<F(c<-^))Ys!L5a]IXAW#\#hRcq+NK"j,0J!PbKe9hq[3dKBhHaJRo6&\"XQFu
Jd<P?Y'-UiH[LsR)1F.JGuT>"I:V2@Lpo^6cV-J;L%WuJeVRs28lfnN,th:XM/=N&Kn;.'iJeVL>pE!7
193:XXOPp,lUT:C]Uf<\2PeSSOpMF`d)2md)HK-Qa,NYU3`t%a`A#,>3##P-R,TZ*&1AL(8&sf5Kj_5r
`K7c*-d2UMS3ld`&Lf1f#b%RmMbI!*YuYRB`ChpU;=(:8LR+/_KSrg+.+eOuC]bQo&]N!0>2o5SVo0pI
1N&!n"`7<l_[:<q`PaE\@%^kR<m*I<esj`UYp.I>Qjf_6mLr:.?<t1mDT8u2Zb76-4<?@L'dV!OB@Cd'
Y,U0ep+rArBbs^E?n0Q$LKg/ZKo-gA*#p/_iLK9m.1pi^=+XSa=tX:J%Du)[S]T^LA7@H$2ZA$a\lqqU
9oS>LH9-&03o#&/lGEN5?CI0cZ805#.Pr_B2Q>Fd\>rW?DM+Vd27sOaMY/(kdsmZ+N2hF&2>1X:($\M+
&sq9+GH#VP27.up=U`aT^mlaUp<,FG?.ZD[`.dN?V-69Wa_=lL+uJYhHCIB[M`\!jX`XOH.p6>08lZT_
;C3#6inB,49HcK32V=ZWW>Mn%RhF7!Wmq2-X[QqCK/.3#'Sa(r2Eq4l$>.QIP9uVSFF%T%9%'AO<H[M+
0mL>H:Gdih$X%akY0e0&LC=JgS3'\Laj$q<BuGd<Am;N/$;t_.XfF`Z,0S*T;K3W]"@s_q<r!B>8uuW=
1*RF_O?t.1VW9&s)XsGGAFRe`@CY6s?BpIWlY]Vl$>ENXDSt[\2Mf<L5ANC5$kQH.;0:8F")2K1g0&\$
i`g0HeOeAUE@;+drOd.2O.!shJdACg5m'#Y>g%6h!&Og;7u=S0+._1hQ>l)JblG4D!8t,.7NgNHr-Cm_
j4,LJJ!s\XD&c^ki0ffs_cJC;moa^9-G*Y`OLlpBr^CS0fiJKiEil[,[,mgb"c&D,TEHX!o.a!RM&mqm
d=dP6FbbYk![TFt05R)Sr'[e9%FB8j7q";bh"s\\c&fKX(Q`_jfLDUndkjPqe[e%"4%Y8VCtG,E"goW@
/KmiiC5#lV#hs&/@SG1U"MkA&[>,Yq`XqpanVgp2d37n0B6C&G2NI3A<i2lp<0;>F!cQYZXkNF=+BbH[
bfIFsDM3>U*V2]R'gtl>1+g,Rd(J)%;[fIVPa/&@8R'A/8-BoV6HIRj_aTCD1SPNkri2;B5ao`j8'oN?
.-d\+N$8$?Pb^-aB]=ri'1F8T8Aci$j%21n"AUuiF<".;aY[(DkjOY*1e+so(MGjk.`E2`(mRPN['5Xk
VV3;[Ya<WsW<U/=TjV=:!l,)_PYP;AV5K]F:$*NI8s85;)b-mTh-AbVfaE<1"Jm5V!^P?;0=QT<.-ej?
PbC),#l&6M7+:h?S4'`i*1<:`?%F3kNjuJ<dSrtu-XoanbgtILU,C4?\Oob(GYKZ@]EX>JX;4OimF`/)
o(&:=9/N/TfpuadX&X+38NAK]1SY<?-OZffTc46<1TWG[Jf,_*;ZSN!m\\3/.2(i@`nP,k\9&Lk\PnC6
YC,ICbcpU3q[TcO&f+V;SSi?n_d69ADUdtrD,<_4,]3TCe%j495s?an^0"0FO"DG&bA-Dd%R)b==fnF9
1=&p'])A[0WLe5;&k>'`:sgY+8C/;7VQ_$$QbsZaLoV(Q+90i?Q6;-dMQm9q&8%rdG6=uXm:Q/V]$#4b
d@J88Bu"kLZU/P&(X*F]=9@P@!0P1!"ZKi2Paj<E%YR9?Oq-Lj0l;&jot78_&&+JZQ4'(S(9TV$f,.@E
gh,>1-Ugam!RXIG[a`C\rr?)@44GV2=fbMlc`e-tD:p<?k_t?*$#"sEah%`9,DVASN+91,)grSl/Hs-q
ON+=s;4')U[7<f./Pjd?@nMH`V,g`68?m!BSHHn^)?a1P8r@8=8M_S-81e:jhZf*kQ=_o;Q+)E/.dMuC
&ermOPE:J@CgtauUR%Ea`tR+$P,q<q)9],iR8[@*o8ZSqpGQ;/N9;Z>7+)9*D2<FOUnpRt6P4mii,^_4
g+t?N*2Ba)`.bFCE,NqZK1)6/B['.@hX(nH+P:.4<"pnr8*^=`V._=NajLgfA`OdELCg74*E8s=,;3qs
ee^bWJdACg5o`q41I@Ne>$80s.T2Kr!"<D$E`doSTaFtT;Cs7]5^QUSDUDWgLWFj(/1M(\mSqCsTIWZ9
9\PGd0=]Z@""4=F)\&T!,ib>F,<\6>H5Ok/bQ?pP@:KTODIM48ONFN?T?MnM;jFer35&!W8_[(4.t21>
SR8+i1HYDQQ^Kc>L<D:!YiNcL`"aYTgU5(YCV8MA84^^3/4uUuMgL0(bcTodHAtPJEn3asmKG#uW]@`_
BVagtDdC[[d81(.=`5cgAg+@W7iWEBQ*Ub26lmM:'"LAOUb.^%bVE">8^X+D0qk[C4EuFZ%!AT1qhCod
S"Jf,DfI+%O!e7?obC,(:Gf(P=bl;07=Oi_e@du.Y,#_[''Dtm7GS!PG+Ek:ekDL9B$H5LBk#&=65d*p
#te*XE(WC*!!'qg^)4k"]'A'R;N7KA8N=g>7%!.H#jmMS";1[aJ!M49Wf"%a&QU$+4]PKqXZ!9m@0WYC
iu"_&'r9`Tn0S%X8fTt[nr&g)Gtp2dWAa3ZjgK"tNuQ:dd:.cW'*A$W2=C]J[``F`lC''Cm@ANh!7Gkp
>*WhA0+M,/'[9k-lD\fuhP,,+-H;dqd=em:[jZ9TZUbnji2DA>N_@frPH\2B1m/T1=J:)kC=C3_p\<0q
#3N)<9#Qrdeu<d_5&:DP"Zn81Kt+7-^=!c$R\2<Cqc0T-D6#!:1JKK_+PbA3;qrh%Z/;QId)*c^-mI(F
C!i_c26JcX`*1dVlks5LM@3T5kr(AXN6D=,,4^h>UE9F8QZIC`Q%1$A2RA=+aMEr<-8>sRC8Cs92.2b_
LUjPH<?B91O"r-h`ghEW[H;)Z%[eeFEXp8@l*2r#"(7I:e;``VR`dgr[ipi#8PW#sdd+870)V5cr"/aJ
]/UP7PfJ7U2f]3"jMk^W$J+=;V'hE]>:t-Tj@5mbcO.o9(CEPnra1sfXB3<u@B.-!c])7$KXYu8k!k;Q
WfhVI[+1\hg]l/`]eYGDSOY"Z-[K>5Sb<:K]!Bm:W:4%=WV0bhbM'rE/IgEJFf=U->[9Z6T&dAG$oHgk
NsacabnFoAd\H+l@&!qmm&#`9AS#`fD^d+c"&,&Q.T#RW*pBG'Lb#T#;nL6.!)pFRB2oM1d^OCr(LMM*
!&Sh7Y_!L2.sTmBBc7iKb05dEd^*F*.DoJ*jp.n'>>k&^OI7%h.RK88idC+Fe[p3fOP$L,A(jpMoX%n^
Tq!Kr6Lum"RAEPcUTMs^isD1UZPTfOZ8#Mbo8Yo21.:q`-JHM7ElMp28S`KX,7DJ2O#sXM"/.3d+Y"Ka
?6qXT%>`)V"b"#q+tK0`L`hS[";+ZWJj9:dJ!M49Wf"%a&QU$+.`;le=Fpgt7Gq!6L!=T3r#Nd:i6r=p
U(6PH=K?RVeLO5BCTZ)7N<naDJhb4?(8%EOH''g+0Xb4)$Z0WFL;?G(Le=):A9fY3RBRehKG"QE0iEm;
nFpR'<J5@RadOs;KVODL)25D6Uam"9:t?])AT+HEASf)DR!QV#cQ@;Q0lAic!$9ge%qQ#5;Of=H!"J5B
7YF,`G3%eW<3h?X[pik)1j/m$MbNV1Gbc(k,f-P1,d!QbZR3ai-Q#`^Pl`PqQr*qtO"2X^MaVqk=sCFS
Zt3C/E`-c*e.>/!EG-KS`X5ZNL\FMRGq)jG\@.]7#UI"7ZRuG7)%Un4;XPfFM\]tQb1p0bEL:XmBh6/e
)=XVY.aqM!G=<lM5;3_O=nBp#Aql$4.`h<h]-G$Q+tCMB79G-IWt7Q3@L+0Z5m2];f`~>
%%EndBinary
grestore
np
grestore
188.06 699.655 mo
220.225 699.655 li
220.225 680.673 li
188.06 680.673 li
cp
0 0 0 1 cmyk
gsave
clp
[1 0 0 -1 0 841.89 ]ct
[32.1657 0 0 18.9823 188.06 142.235 ]ct
<<
/T 1
/W 135 
/H 80 
/M[135 0 0 -80 0 80 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 1
>>
%%BeginBinary: 1
img
])Vj6_"%I+A,,Wq!Wh4Co)Jgoi",bdpAb:#i!4f2!!>Cb"7Z3g@h7K"^]XW3!WTqGrZD18!!",!!T4([
rWiJ]5Q;i*p](:YhuW<Ls8NW0n:1J1s7cQo5MuS3"98BCs7h*DTE"Zd!.Wo,p]:EpTBH-$+5d+n!!%N,
!;HNo5JP&4ILj6n!"T&0J)C>%!!"+UJGt#u!.OnI%KG>dp](:9^OZ<5n,Rq:!"Jtd!W2ot5JI3tJ,TFs
rW!E-huW`Vs8Th6r]gF5If9<Vs54"W"98Bc!<+)?^jc7_%KG>gqud!!561Zfs1j*_!"Jtd#P\E$r]br4
!<9i`rW!+Oi",Sbrs/<`JGoNZi-tY*%=d;#p]L9k5Crb3&)_p9!"FG:s7c]k!$C8!Ih0>DrW!BliW&BL
p])E9pj`=ZIf9<V5N2Y3"8Dj,s7h*D^jc7_%3OR/hui`S#QO9Xs+#Rt!"BIts1ea3!!E8:+9)=irW!$*
iW"H,!!RiP"8DirrW!!%iW&KL!Wh9Znc/]!q!nCc!Pl;I_Z0[do)AaiJ+EU?rdXM=!WIT@rsJf+rdXtI
5QB^&j8&]\rdXtI5QB^&j8&]\rdXtI5QB^&j8&]YrdXtI5QC`Cq>Ua"J,fL4s8V->q>Ua"J,fL4s8V->
q>Ua"J,fL4s8V->q>UWtJ,fL4rs&M`j8[1"i;NZZrdXtI0G"0C%Dr2GJ3H3ms8INJrZDIFisij*Ifp6'
q#C>Cs8E8@ro4I'r&u25+7]C1J,fKiiVqjHiVl#*O!!olrdXtI+6!4Z%H7:-5E??6s8INJr]frOisbr0
s,W6$s8INJr]frOirf<'s,RG@j8]+.s8G7PrSn=d++OmBa8c-gs8G7PrSn=d*rlhla8c-gs8G7PrSn=d
*ZpH\L]@@'s8G7QrSn=d*']MEO8o3/s8G7QrSn=d*.O%.O8o3/s8G7QrSn=c*.O%>+92=is8F,!ro4FG
rZ$Cun/q]0J,fKY!5nfr%H..H57d6Js8INJrWe)TisjpkHiO]P5QC_4s8F,Gro4II!.Fp/pcnfXJ,fL-
+8t4*Jc>bsr."bGJ,90Fj8Ju\r."bGJ,90Fj8Ju\q#CBnJ,90Fj8Ju\q#CBnJ,90Fj8T&^s7--hrdXeE
!9=%X"S)NlrdXeE!5nd8"QBC\rdXeE!9a=\"S;ZnrdXM=!<2HfJ,~>

%%EndBinary
grestore
np
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: HAAAAA+UniversLTStd-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYD+UniversLTStd-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7A73D32ADFD74EC50A567B216BB178A155E179933F53AAE3F
0F7BABFE35C63FC95589F8D5CF774021C0ABF425D774D2F5A4D83F572E29616F
12D40C3168E6E2CFD1B0E6A59321C738E9A5C667B29A777031186994E4D57211
521E6FE77EA833D576BD03EDBD0BC8027FD9F06195F5F75F7B62CAA6C1F0> |-
/u <1C60D8A8C9B7D8BE9F69CE2E15457871EFB4F343E89F3FCD205DAF52A904
0B1324A9ED9D4D91555957D56658873BB570BD15CEEBED8D5C0BE11E4A0CBB30
CCE385CDA446708CCEC682ADE6F45ED6EADBB6577AF75806A5AA4BCDDF567E81
62AD904F5F2ED1D08FD7A11CAEF7780B0A278A77C441F608D85738A050D12AB2
9834CA178BDAA4> |-
/v <1C60D8A8C9B7EF327C10274AD38A76E39CF3155E32C371B73A863A0EAA2D
80B2B94E8751B5BCB83A1CACA8ECC2732D33E27BAE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYD+UniversLTStd-Bold /Encoding get
dup 115 /s put
dup 117 /u put
dup 118 /v put
pop
%ADOEndSubsetFont
/GVGHYD+UniversLTStd-Bold*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 6{/.notdef}rp /A /B /.notdef 
/D 3{/.notdef}rp /H 4{/.notdef}rp /M /.notdef /O /P 
/.notdef /R /.notdef /T 2{/.notdef}rp /W /.notdef /Y 
7{/.notdef}rp /a /b /c /.notdef /e /f /.notdef 
/h /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
GVGHYD+UniversLTStd-Bold nf
GVGHYD+UniversLTStd-Bold*1 [10 0 0 -10 0 0 ]msf
230.879 692.281 mo
(Please )sh
264.229 692.281 mo
(tu)
[3.74008 0 ]xsh
274.079 692.281 mo
(rn)
[3.49008 0 ]xsh
283.679 692.281 mo
( )sh
286.459 692.281 mo
(ov)
[5.90991 0 ]xsh
297.729 692.281 mo
(er)
[5.56 0 ]xsh
gsave
0 841.89 mo
594.918 841.89 li
594.918 .945007 li
0 .945007 li
cp
clp
[6.025 6.025 6.025 6.025 ] 0 dsh
1.1627 641.858 mo
22.2487 641.858 li
@
[6.025 6.025 6.025 6.025 6.025 6.025 ] 0 dsh
25.2613 641.858 mo
600.625 641.858 li
@
grestore
%ADOBeginSubsetFont: HAAAAA+UniversLTStd-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYD+UniversLTStd-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/registered <1C60D8A8C9B6D5A0DD85673C08B641A368CD232FD9018877C53
D4EC163D319FDB06250325A96612BC48C3CF312854D78070D5423C25D446C72D
001A9ED8DE1F6FFFC9B23144E3AA644DB25FF98F057C910F4E759A71524B87AC
33098A5C2998A31E93C33432D42EC90D1FCD92D9B1F4CE80C9B6EE4C8F1CE634
EF069EE913DC842BA88E79DA960417D838AAB3AD722FA8471D3D164AAE4C7C48
2384130A98DD0D8B6ADC3AAE034A0F4A4C30292836909FD4E69C9DB59F5B8A5B
909C5F7A46F7E22BC2B78D88F5E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYD+UniversLTStd-Bold /Encoding get
dup 33 /registered put
pop
%ADOEndSubsetFont
/GVGHYD+UniversLTStd-Bold*1 
[32{/.notdef}rp /space /registered 24{/.notdef}rp /colon 6{/.notdef}rp /A /B 
/.notdef /D 3{/.notdef}rp /H 4{/.notdef}rp /M /.notdef /O 
/P /.notdef /R /.notdef /T 2{/.notdef}rp /W /.notdef 
/Y 7{/.notdef}rp /a /b /c /.notdef /e /f 
/.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s /t /u /v 2{/.notdef}rp /y 
134{/.notdef}rp]
GVGHYD+UniversLTStd-Bold nf
GVGHYD+UniversLTStd-Bold*1 [10 0 0 -10 0 0 ]msf
189.145 723.82 mo
(BP)
[6.67007 0 ]xsh
200.925 723.82 mo
(AY)
[5.87 0 ]xsh
GVGHYD+UniversLTStd-Bold*1 [5.83 0 0 -5.83 0 0 ]msf
213.465 720.492 mo
(!)sh
188.343 728.546 mo
367.096 728.546 li
367.096 825.527 li
188.343 825.527 li
cp
0 0 0 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: MAAAAA+Helvetica-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MAAAAA+Helvetica-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 14 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 58 /colon put
dup 66 /B put
dup 67 /C put
dup 82 /R put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 111 /o put
dup 114 /r put
def
/FontBBox {-380 -357 1000 962} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
13 dict dup begin
/.notdef <1C60D8A8C9B825FA0C55D94CF30B04E91930F79B2A7531B6DFEACE
089BFA0CCAAA1D14> |-
/space <1C60D8A8C9B854D00D> |-
/colon <1C60D8A8C9B81F2C2AC3D2EC8F8B95EEAF3D5DCBDB17979B141DF2CB
64AE27F8B99D> |-
/B <1C60D8A8C9B6079F42CB0ED8F9B5BB859F1F8441D1B9BA7385FD6B30F624
E7F592925CC878F2BAC4FC3FDA8724640F941F612181841DC9C778DF64B2EC84
CE03D33530A2977D0670D729EBF7321B1D9CDAB3F80D11C4D5742C5DF028E4BF
0E137E0397DB2B3E22298C39DFD4434957355B57EF6E261D0240B78632960247
E12585682783BB9B26174C370B67BBB638711AB73F5A45C970AA16DC9690> |-
/C <1C60D8A8C9B6079F6D23A1CBA89C998AB9282DE656B3B73502D3144BB83B
FC224204398893ED3FCE61E2EEDC6D8660540540A55412C5B83A96E8C9EE4794
E59CF6A45B9E38CF95BE6452DC758EAB1AB4A00C6FEAC55284A2BEDDA21AAA9C
0A231543CC3CF4CB8277564DBB1FA5C69E70B92DB89698D90E1D418F138B88FD
E12A1A73C0B4> |-
/R <1C60D8A8C9B6079F42CB0B75BC8C1C2CF5CEE6096961FADF3D7E62E66D9C
CCCB7F0888CD61423AD6048FE9EFABBE50BA685CDF685A31C762F620A38EB0D8
8FA0B78456FF8556A56E8049E54845F59C2E7623F1869EC7401BEB4C25077366
89927B0ACE3870560AEA736A5659B82FC53A4BF4638A46F1D9F5D467D1D679D8
CA2C440BA224BAAD87A4BDA6C1AAD994CCA943F7F8816F0B1899F4CABEE9E537
B11E8F01> |-
/d <1C60D8A8C9B7D8BE19BE4D45769CFB5032F9B79FE880DD87F98B5D8730A6
0A635F3CD60D5B2F228BDFF870F9DC0A55DB30505E7A33710CB0A750AB3F1094
2ED3AC43E25C2AD3AD162144BE1F6AFF30DD9F6B562E835EE60877E2A681B93D
A89C189320419EEEE84ECB86268D147323856BFAACCD1C5DD05755247486FEC6
8F85029FA58C31AA8359C57799> |-
/e <1C60D8A8C9B7EF32243B155551A07B3C0E05D16916CA109974F72A665B66
C3A875ACE1385DBC66E099ADC81B42F1CFFA5633E50580B39DBF3727E913EA6B
5188217FEDCCE7758BE1B896FA75BE253B380FBA0781ACD81FC4E8ECD4A1FA73
2F006DC6436602155F040010078018B185712F1B6F7BD23F8935FE6202E16D3C
620D2BDFBBF2AC18C37085FC7BD34F964DF567> |-
/f <1C60D8A8C9B81F2C3A6AF0525FB5D8B55F32B2B51BB91DE2185407440F80
5652D20FC9225542EE485ACB320BED15C2915BA79CB08A71EADCC703354F199D
FD2A0E54D0323ACA2EA892E912BE1CC7B1> |-
/i <1C60D8A8C9B854D0D2DF91F5CA6A685819009DD545DA18209145592D4711
9FC649C70849> |-
/l <1C60D8A8C9B854D0D381DE923C9115EAF175B1A227B2D2> |-
/o <1C60D8A8C9B7D8BE16E18D4449E8CF423F2903762CFE69682D8C7BDF2660
C96BB75B8BB982AFA351EC32EF6538FB11CA677A199953336273EB2DB62A59E0
E575252A847C648C759DD74BA5B49E429AC499F51967C0B200AB4894B0ECAFE9
90065E6A8F18B38466A1D16FFACB13AFC0A9275C76A144AEEB5C09E465D72ED0
BA36C18E> |-
/r <1C60D8A8C9B7361F3E055CF08E16DD991C07CA2280FC3DC3D5C1587D3D20
E1B05AF3820DE0FE035D84011D31F680AD1DA1E7B0EA05F18B261D53A8605A02
0900AF> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GVGHYH+Helvetica-Bold /MAAAAA+Helvetica-Bold findfont ct_VMDictPut
/GVGHYH+Helvetica-Bold*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 7{/.notdef}rp /B /C 14{/.notdef}rp 
/R 17{/.notdef}rp /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l 2{/.notdef}rp /o 2{/.notdef}rp /r 141{/.notdef}rp]
GVGHYH+Helvetica-Bold nf
GVGHYH+Helvetica-Bold*1 [10.164 0 0 -10.1509 0 0 ]msf
233.348 753.867 mo
(Biller Code)
[7.33841 2.82559 2.82559 2.82559 5.65117 3.95389 2.82559 7.33841 6.21011 6.21014 0 ]xsh
287.004 753.867 mo
(:)sh
233.348 766.636 mo
(Ref)
[7.33841 5.65118 0 ]xsh
249.712 766.636 mo
(:)sh
224.484 777.931 mo
224.484 778.753 223.816 779.422 222.992 779.422 cv
195.255 779.422 li
194.434 779.422 193.766 778.753 193.766 777.931 cv
193.766 735.74 li
193.766 734.917 194.434 734.25 195.255 734.25 cv
222.992 734.25 li
223.816 734.25 224.484 734.917 224.484 735.74 cv
cp
f
217.569 766.98 mo
217.18 766.98 217.005 766.975 216.84 766.975 cv
216.666 766.975 216.464 767.007 216.37 767.28 cv
216.021 767.903 li
214.629 770.368 li
213.236 767.903 li
212.889 767.28 li
212.795 767.007 212.593 766.975 212.419 766.975 cv
212.253 766.975 212.078 766.98 211.689 766.98 cv
211.308 766.98 211.456 767.275 211.456 767.275 cv
211.456 767.275 212.871 769.782 214.007 771.807 cv
214.007 771.807 213.989 774.214 213.989 774.38 cv
213.989 774.55 214.078 774.656 214.26 774.656 cv
214.924 774.656 li
215.043 774.656 215.256 774.646 215.256 774.39 cv
215.25 771.807 li
216.387 769.782 217.801 767.275 217.801 767.275 cv
217.801 767.275 217.95 766.98 217.569 766.98 cv
203.286 766.986 mo
200.495 766.986 li
200.253 766.986 200.218 767.186 200.218 767.31 cv
200.218 767.436 200.219 774.376 200.219 774.376 cv
200.219 774.668 200.486 774.656 200.516 774.656 cv
201.23 774.656 li
201.347 774.656 201.476 774.561 201.476 774.427 cv
201.475 771.894 li
203.286 771.894 li
204.642 771.894 205.741 770.794 205.741 769.44 cv
205.741 768.084 204.642 766.986 203.286 766.986 cv
203.265 770.67 mo
201.475 770.67 li
201.475 768.244 li
203.265 768.242 li
203.936 768.242 204.48 768.786 204.48 769.457 cv
204.48 770.126 203.936 770.67 203.265 770.67 cv
209.852 767.308 mo
209.756 767.114 209.688 766.987 209.343 766.987 cv
208.438 766.987 li
208.094 766.987 208.025 767.114 207.93 767.308 cv
207.843 767.499 205.31 774.36 205.31 774.36 cv
205.31 774.36 205.161 774.656 205.542 774.656 cv
205.932 774.656 206.016 774.661 206.181 774.661 cv
206.356 774.661 206.557 774.627 206.651 774.355 cv
206.734 774.115 207.113 773.065 207.113 773.065 cv
210.668 773.065 li
210.668 773.065 211.047 774.115 211.13 774.355 cv
211.225 774.627 211.426 774.661 211.6 774.661 cv
211.765 774.661 211.85 774.656 212.24 774.656 cv
212.621 774.656 212.472 774.36 212.472 774.36 cv
212.472 774.36 209.939 767.499 209.852 767.308 cv
207.631 771.809 mo
208.891 768.242 li
210.226 771.809 li
cp
223.354 733.888 mo
194.894 733.888 li
194.074 733.888 193.406 734.556 193.406 735.378 cv
193.406 778.291 li
193.406 779.115 194.074 779.782 194.894 779.782 cv
223.354 779.782 li
224.176 779.782 224.844 779.115 224.844 778.291 cv
224.844 735.378 li
224.844 734.556 224.176 733.888 223.354 733.888 cv
204.821 745.241 mo
209.898 745.241 li
211.233 745.241 212.309 746.382 212.309 747.709 cv
212.309 749.041 211.233 750.12 209.898 750.12 cv
209.021 750.166 li
208.549 750.185 208.304 750.461 208.288 750.895 cv
208.288 753.857 li
208.322 754.327 208.609 754.573 209.06 754.573 cv
211.242 754.573 li
212.69 754.573 213.862 755.747 213.862 757.19 cv
213.862 758.557 212.805 759.673 211.473 759.786 cv
205.564 759.791 li
205.125 759.779 204.838 759.526 204.821 759.043 cv
cp
195.538 736.722 mo
195.538 736.72 li
195.538 736.347 195.826 736.048 196.187 736.018 cv
200.218 736.018 li
200.218 740.69 li
195.538 740.69 li
cp
222.716 776.896 mo
222.716 777.279 222.523 777.643 221.963 777.653 cv
196.247 777.653 li
196.196 777.649 li
195.829 777.627 195.536 777.326 195.536 776.954 cv
195.536 776.954 195.538 757.192 195.538 745.368 cv
203.374 745.368 li
200.218 746.519 li
200.218 763.822 li
200.218 764.306 200.486 764.56 200.897 764.597 cv
211.537 764.597 li
215.174 764.48 218.083 761.503 218.083 757.841 cv
218.083 755.439 216.831 753.333 214.949 752.132 cv
216.125 751.089 217.015 749.384 217.015 747.704 cv
217.015 743.227 213.84 740.687 209.302 740.687 cv
204.89 740.687 li
204.89 736.018 li
212.373 736.018 221.963 736.021 221.963 736.021 cv
222.544 736.021 222.716 736.401 222.716 736.776 cv
cp
0 0 0 0 cmyk
f
.846 lw
359.409 777.174 mo
227.164 777.174 li
227.164 736.502 li
359.409 736.502 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: MAAAAA+Helvetica-Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
systemdict begin
GVGHYH+Helvetica-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/ampersand <1C60D8A8C9B6079F629E195E930B057B0729068E3B84840D51E7
C938294FCAA3E671E5E7CBB72BAFC7FCBA1909B3F2B5260F8FB7EB34D6E7FA30
45DC67E05A8E525198AC5734D9C181109C154E4A2D7A558B769B89EEFD1FC84A
72548D2AC111FDD3DFD521018862CF0C696A4A1877867E3ED7E057B5419D4277
73CA3148B4A0762A51ACBD1B18DA21377025ED122A8DE048CFC0F2A1B365CE98
FA99DC14AF4D50861E36E825C52C0A04616045C739E6F15C1CC1E3F3DA68D04C
B7CB234C0D66257790F225A2164D292D3DFD9757DE373815423B1C86656EFBFB
C62B2E244CAB1EBD68744DDAE7DD9132D8D4524519E43211570393D5969C6E6C
79B9EC53579CC9A38D45C25BD1DCCB051F6D1514C7A969D03C85> |-
/A <1C60D8A8C9B6079F0AA30CDFEE59B45E025A74D81D7CDFBBA3123208E6BD
01387757DC67E8E232A2F6BA758E0601560C44469960> |-
/I <1C60D8A8C9B854D0C8AF52D523E60269DC66AAEA35E52F> |-
/P <1C60D8A8C9B64EDFD4118B605728C9C04423EE31FCC44E297E6A1B4EFE3A
C2B7A4990CF3A2429E9F36A948546499DB5C0B64FCA99185417FFBD702C5E1BD
8BE50D0CF30ACBE29645D5D7883CC64775C20A8C0D2A8F8C3586CC60FFCED796
27EE2F32A2> |-
/T <1C60D8A8C9B7D8BE165F0A9001420D223E9280DD15C18B5E7283B617EFF5
A29226F5D34359> |-
/Y <1C60D8A8C9B64EDFF44B79A287E81E69D228DBB22494E52D7C0253611CFD
D745FD49B98C8CF0A24054DDE066A9C8635D9979> |-
/a <1C60D8A8C9B7EF322BEADF4CF8093A9BB8CC1CB6898B6F5FB169D9DC48E9
AF7AEFB022DF55C36DB759B10A74DB40BCB347C680B2DF0BE48356D4C54FD292
0EBFA1A14A186DE8AAC5912A2EA16AC9E11969849458B76C67A8E2D91B992A6A
6C6BA023333EB764D3A0DD37EE4AB5E2066323F59F071725899D716247CE8BEB
E83EEFB004A610190C8663FE37815CCA5834B91F249E9010FA3802C9D129AA90
FDE570CC275B9D0DA69BB90D9197E658950F6CFF49483C69EC31716B0507BF9B
6AEC45A693E66A8DAC2893FDC22490E18AB215DBDA216B7A0B122DD3275E6667
37F0E37ADED8F58760C9> |-
/g <1C60D8A8C9B7D8BE16596F0C6A0E1746B363E38EFAA5B5214D4AC0FC301F
D58A6FF97281A18C32164E23D7C2D40D033A69B93EF983C13903D95AA89BF5E9
4020A384FC63B829803D222AF12F764E5EA3B6D3BE9D6AE4DD2D9DCE10DDD4C2
59A5C2231A347149757DAEEABC64C1E3835E544BC0E0A4733A6D228CA2B1EE26
F0AC3FF164A7A9F62809EA8CD2DE9949BAA064ECE64083E1FE3403C3BEFC233D
D72ECD70930ED214A42E836B7B688FDF34E0430C233A1AF3FB924E2D91A3BDE3
EB37B640B5346C> |-
/h <1C60D8A8C9B7D8BE2DB95F8BD7F7974F084CCEBD33434429C48ECEB7AF4E
2A16CD6478B332C452CA3092F23AB6A74DC18CCE6313F0C5CA199047F0302411
BA395A1AF893CC6331B0247211AC27689DBCE92D536EDDADFEF5> |-
/k <1C60D8A8C9B7EF320C006075D8EBD878196A8153058B32D99D10A2AE6B8B
2DDF8AFE4EB85A370C3AD54FD6D411CBDEE7CBF43FC17D28CE07F4> |-
/n <1C60D8A8C9B7D8BE2DB95F8BD7F7974F084CCEBD33434429C48ECEB7AF4E
2A16CD6478B332C452CA3092F23AB6A74DC18CCE6313F0C5CA199047F0302411
BA395A1AF893CC6331B0247211AC2288E796162124FB100612515D0777> |-
/p <1C60D8A8C9B7D8BE285CE999D204145ADDED92CBFF54B56A89173A8EEEFC
9411307C9388BE2D66A0636564035611E32C7E63BE0FE46639B1844C850B835E
3189B3F5385757317D8888FE02CE9CBE795B1F4AE1A478CC39F999786536D616
2222EC7FA85B7CE2FEF6064C7A2F04A4D0E8E269ED6887F40C624D7C96B3D940
702FC239BE0D3706A8BBA8> |-
/t <1C60D8A8C9B81F2C3A728B63945D7E14A1214FC73C38ACB5DDA09D85FC26
B257D8B10BFD00B93336C4B6EB49F357A5801D7FD86A1DA753EDB1A387CB1341
F30C7B2372DC869360E843ECAE582261> |-
/endash <1C60D8A8C9B7EF322B633C848784FA35F21032CA255E> |-
/registered <1C60D8A8C9B61400CFB9DCB84762C0AB4B07E4537C2F311A17A
9B2554A5A3A2149D0FCADEABCC9FF165398FC5635E851E86D9B8A8907A687F4E
6DA6CDB49731C8AE21A14B28FF42FC8C5D91EF9899ECDB9EF11FF87CD65685E1
0CB17F09AF117ADB26CC9E7B434832C09B76F1CEBE77A5510827F8C56E0C21FF
B811328FECA6BA8652DCF845A17AD15917079B310139D891A1D9292B3EDFD753
43F9405E16112F27D89E8414D42138305E63237FB9077965538C0F37953FA10A
9D771365D0DC44E5C384590180EA3FDCEBCC8C879698D2EB61E068197D81D2FD
EB41733E19E380F644956BABBEBC1EAA5823095> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYH+Helvetica-Bold /Encoding get
dup 38 /ampersand put
dup 65 /A put
dup 73 /I put
dup 80 /P put
dup 84 /T put
dup 89 /Y put
dup 97 /a put
dup 103 /g put
dup 104 /h put
dup 107 /k put
dup 110 /n put
dup 112 /p put
dup 116 /t put
dup 150 /endash put
dup 174 /registered put
pop
%ADOEndSubsetFont
/GVGHYH+Helvetica-Bold*1 
[32{/.notdef}rp /space 5{/.notdef}rp /ampersand 19{/.notdef}rp /colon 6{/.notdef}rp /A 
/B /C 5{/.notdef}rp /I 6{/.notdef}rp /P /.notdef /R 
/.notdef /T 4{/.notdef}rp /Y 7{/.notdef}rp /a 2{/.notdef}rp /d 
/e /f /g /h /i /.notdef /k /l 
/.notdef /n /o /p /.notdef /r /.notdef /t 
33{/.notdef}rp /endash 23{/.notdef}rp /registered 81{/.notdef}rp]
GVGHYH+Helvetica-Bold nf
GVGHYH+Helvetica-Bold*1 [8.8821 0 0 -8.8821 0 0 ]msf
195.872 791.734 mo
(Te)
[4.8318 0 ]xsh
205.802 791.734 mo
(le)
[2.5314 0 ]xsh
213.449 791.734 mo
(phone & Intern)
[5.45354 5.45355 5.45354 5.45354 4.9651 2.49586 6.43953 2.49585 2.49588 5.45355 2.98431 4.96509 
3.48184 0 ]xsh
276.583 791.734 mo
(et)
[5.08945 0 ]xsh
284.63 791.734 mo
( Banking \226 )
[2.47812 6.42175 4.94733 5.43576 4.94733 2.47812 5.43576 5.43579 2.47812 4.94733 0 ]xsh
332.176 791.734 mo
(B)sh
GVGHYH+Helvetica-Bold*1 [7.5498 0 0 -7.5498 0 0 ]msf
338.668 791.734 mo
(PA)
[4.68094 0 ]xsh
348.279 791.734 mo
(Y)sh
GVGHYH+Helvetica-Bold*1 [4.4015 0 0 -4.4015 0 0 ]msf
352.981 789.218 mo
(\256)sh
%ADOBeginSubsetFont: RAAAAA+Helvetica Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RAAAAA+Helvetica def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 14 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 44 /comma put
dup 46 /period put
dup 58 /colon put
dup 67 /C put
dup 77 /M put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
def
/FontBBox {-383 -301 1000 930} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
30 dict dup begin
/.notdef <1C60D8A8C9B825FA0C55D94CF30B04E91930F79B2A7531B6DFEACE
089BFA0CCAAA1D14> |-
/space <1C60D8A8C9B854D00D> |-
/comma <1C60D8A8C9B854D0E1F7186C471AE26832248CDEFD1C3947D722B6E8
0988C7D6CFE225260054E16043F75A5D70ECBFD98213EDC3CA74> |-
/period <1C60D8A8C9B854D0E1F753FB5AABDD131446> |-
/colon <1C60D8A8C9B854D0E1F753FB5AABDD1314BF432103C770F9DABF0569> |-
/C <1C60D8A8C9B6079F6D568294DCADCE4EC65974CE383148347D32135F8048
F0BC4E587EF4A8A78CE274C50E8F65E4E9F506FE2CB8F66366ECB60B999E6FA7
D7086EDE3CFCDAFFA20B7069D626692C1B731526F7C96D8C39B9D8F6F6A01E7B
BAD3B8AF7A82BFECC8147D0DDD096985A5F7262D598C3005EDDDBA2F9286614B
6EF9E1AE57> |-
/M <1C60D8A8C9B6B41CBB4A5AA7C3B1D86422C7D74A7FBADEB216F6DB22BF49
6602165787C10A20D4936B6B0A466597C98F9B963CA7E316BC9F5C7A3A81956A
9218> |-
/a <1C60D8A8C9B7EF322470C393FAD4D397AEE3C96A97B91E0BBD4518DFD3C3
B0532801D776145486C5ECAD3AC8F16C0AFE08B5D1D5619FF2C97F0F0E5D3BF6
A3AC9BDCC86EA71C57641073E375FB396A373814CE1188F67CB29614FE96523B
65942DD2FC94065A5AE7C8AF33A05491437193A566E76967F1A32129662D7348
5CF8B9D8CE93C5F9D4E31A20D608629E4B9618589337BB931612EB021E8D20FE
41D8206746909B33759C576FB979341CB306160AD3775CE8EAE5082925DC7970
B9BF372B6FBC6810FCAED7AD86EBAFFA3D4473C7E3254E4D19373415A8CA1B19
20BB030A1C8625DCD4492EA39ADBBDD5C0167CF4D9231794ACA45B8CDC56490C
63321730542145E5D644D99F9F16036D37BB671861> |-
/b <1C60D8A8C9B7EF32198427365713232BE5CF095346C83D535DF24A672FEC
381F4A3E99653C147BFCAB8D1F88724E5DAD1782733200290A3C498DFF7C4EA8
72FA3731C0A6FAD1F107458F50104BE553D1B07BC00007EB83436E5A41E1EEBF
87AA4ED29A08AA67A3F3EA5868858A870492C3C7F94C39BCB463F796ED6B6F48
F1C5481D> |-
/c <1C60D8A8C9B7A73DB6A73477E6CCFC2648CDCD464BC884EFCD738C0E01A7
21B7B9335619BA9D5498714D0627387CAFA48564CAB0553E73DCB14B1CA6593B
38A9261B335F8659FBCE8A3E97D5C0BAA14DD03CDF618E6F6B8BAABCBB26A37C
62A126FD9D77A0C0C3870D871DCA3536F8942C7165156AE9FB70ECB6B9A65DBB
B0C7E4> |-
/d <1C60D8A8C9B7EF32245A7C146025AA85351C002F25167289D1C3F0E7014C
ED592119F4C1A334654202254CBB07CD1CF6B216DC8BA350FE78B6931637B9AA
4BF95746C81430936D4C34AE79B97A7AD26C5F80B1F3BC67FFEC1ECA91096168
6815008A00A5F80BDE08A495DB0B9DE54AF1B467BD32F20B6FF20B084A4AE1CA
C8A728D162890EDEFA26CF24DD> |-
/e <1C60D8A8C9B7EF32243104961DFBA2A5C8AADBF5EEE642EAF04B1904A456
7406C498F339B5FB7F2CC9D764BB8D8E3E83C65D76F541AAFDB5AFC0D0DAA00C
BB305E4589894B4B733C0B87D74EB197A0CA030CA698C23FAA9506F082C701EA
63BF23FFFD034A056C312A737A55B60E067E47B8AF2141F076A613DD488CFDAA
61B49B6D9FE2BD85776ADDECDD2B> |-
/f <1C60D8A8C9B854D0F4AAFEBA80992D36CF919E440EB92DBA91A1BB53A455
1F9A461953988EB7DF8091301A0E3E8445D2AC0FCAAE5FBC6B90848E9EBCD482
89B4703ABDB2ACC874CCF000EB> |-
/g <1C60D8A8C9B7EF3224606C9FC4C5DD329366C413D6BD8BA4BE38C590E007
5AD05882A61650B8D0506037A3DF37370670AD04D344D9609764DA315FA7AA64
D30BE7FBEE3CEEA34AC13745067B2A3FB96019AFF4810A6919F8B1205B838156
1BA72B24FC6D218F0B11A74C92EA0E479D65BF793DE2C73F58DFF647764F25D4
05DB896ECDB42B181509FB02267ADB1BF3F0661A85F7ECB2C4632309F0DB138B
8853823198B326DABC171255EC0386E4587EEA00DF9F6B5E008BE5772315DD> |-
/h <1C60D8A8C9B7EF3210463AFC3904BCE6F3F31EC046C8EC42A0863D81A863
C8ECBE93A4492B581673FEB5B1D21B24A161FF3A9378DE8427DBD9EAEF1DAE86
A9126FBDC994E7B5B990F3821C321BBC5C643C8B9B76A4286128> |-
/i <1C60D8A8C9B88C084AD2AC2F432399754EAC3E3B580F103C37702F82931C
9B8C22> |-
/k <1C60D8A8C9B7A73D8039C9238411DDBA89AC831DDB1C6C1A4681BECC5ABC
E183E12B7ABA580145B2754E4F28C9E7C3DCE240C8C2D5A3CBFAFA> |-
/l <1C60D8A8C9B88C084B85288237CD797F593425CFF21BF3> |-
/m <1C60D8A8C9B6B41C80C8124E8BC71A21B7F2FEB0A505A7BA02E13F27444A
B2B9A6C803B8596C4C8154E451235AEDBC189CB8F1CA06F76DA83E69CBE5F9F7
3934EFE0886FFA1B45BE26EDF0B2FA25F26202818395449E5E7AD91DEE0B2AE9
71A50916B65D3D0299BE597A4B4CC614E831EC57300AA436FCDCBFEA11954B36
491B0697B17D33B0F38D54A2337D40021DF676892D3919> |-
/n <1C60D8A8C9B7EF3210463AFC3904BCE6F3F31ECFBE98290828CA2781C721
6A946D4B5977DBB5F84271467EEB5C9C0DC567CE99C286D4284F72C943783878
E5BBB94F07F70FB9CF73AA3916F305CCE5B59D3BE479DC3C84> |-
/o <1C60D8A8C9B7EF322BBF1A9A8037CFFBF52727AB9B89287983E072FD2D4B
0722B3D95C9FA8A2F784FB14440F884F0C727F425ABDA235A5D576E4E1900BF0
5A4D143C3E22FDC8541C3656308717403C66B46B91EAAB57ABA202B6122BD593
F900FB2D26EC7598E3095DE9BAA0DF1FE8725A331DB73E3A2D1D36A1A3970BFB
B37B30> |-
/p <1C60D8A8C9B7EF32196950E3D8C26ABE1D8AA5D4BC06127E8E03055C5B66
66E853170068FBEC82BA04F4D1D14C66C0680ED5C69AEB1986D4CA407FDAD7C5
4E4CCD987DB2F31C9D2E7F68DCD5EEF1A3F04698A80048122803CC44ED926B60
3C4D2D155DC426360DD8EEA839317531146BC773303495451B317CF23DCB7D5E
288CD0C1E1BF2E8A78050E> |-
/q <1C60D8A8C9B7EF3224564619F67AF14C19C175A47004AF69CB3D375439CC
1126B4A59F915D1429991C0C7CAA561AAE025718655668BC035DA17A10B68807
670BACF8D88F7E38A5B71B5E11E67DDC5A5ED7CC35D6C3E8CAF4DA6DE26103F0
200082A946FF0A416081C65E9A702F4DAA27FC1D275E396FED3021082EACD671
6C9133527012D971D918FB7625B00D> |-
/r <1C60D8A8C9B81F2C15F07350064BBB4C966B6CDB7AAECCA806ED23EC8912
8F1C56E5B77697E606AC7D3AE437BBACAC8876F4E999563167D5276748810D67
BAB6> |-
/s <1C60D8A8C9B7A73DB6E9037B53C52F2A7D363320D11234E7399108211FFF
1E151839A2D048CB510A25FEF777524123DB1AEF3EFABC1BD93828797A9630FE
81FA1454EAEEAC16AA59F4BA4DDC737438957E1D7784C8822BA645D3393358C5
9CD3A4D4176ED3F05A909B5719391EA32E4BAE31A9231761EC368490344106C0
4879D818FFBF13928B40C5115F72F71EB830E666B6FEBA8E7937F23878707A99
D8AD0CBFE67238D3D3E55DDED08C6F96057A3E79BF96F01202928E5C0352E04A
90> |-
/t <1C60D8A8C9B854D0F4A61C5CEA8654DF4A3F0C0D0766DC12E53212DA5840
0244C0EF8B9C28051DFA6CA73F6D2FFAB7637E3241CB3AB2D23F77A15BC548F2
C2014B98AC8A7911E19B28A3344A19> |-
/u <1C60D8A8C9B7EF322B25C2BBD5CA9F05A20F9B2F9A8A2FEB32143A3FF298
9DB069F8E9D6FE2A7D29E7F69D5FACF44D6B99C28C85790919CFB2DB9DA28B7F
A33908E2B9B13E9B922072D9E6B5F7EAC6093E665D90EB3A18FD21778EE80BB8> |-
/v <1C60D8A8C9B7A73DB97A5FDEC489B6C064F1356017AD74EFB7F75C6B116E
102F973B0BA4F0C5B0EB> |-
/w <1C60D8A8C9B6079F62CCEFC72B5D0C8E6DF73D3D8AA54F4DD1641501E78E
C8BF228C48CB6AD7BA3629EC9ED4DCF5F2EC9CA11FED844F08E98D353F5D903F
97FB658C> |-
/y <1C60D8A8C9B7A73DB6C769AECED4FFF06BD6C7D8EE9D80C33498354C234E
F8AB6FF886E43E95215746FDAC3F097DD7FCBB881E3C464814E4A3A916181580
046D0A1964BCADB1AE2F71311C394B641C94818A9C6CE0> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GVGHYI+Helvetica /RAAAAA+Helvetica findfont ct_VMDictPut
/GVGHYI+Helvetica*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 11{/.notdef}rp /colon 
8{/.notdef}rp /C 9{/.notdef}rp /M 19{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /.notdef /y 134{/.notdef}rp]
GVGHYI+Helvetica nf
GVGHYI+Helvetica*1 [6.5981 0 0 -6.8022 0 0 ]msf
195.864 800.609 mo
(Contact your bank or financial institution to make )
[4.76382 3.66855 3.66853 1.83427 3.66855 3.29904 1.83427 1.83427 3.29904 3.66855 3.66855 2.19711 
1.83427 3.66853 3.66855 3.66855 3.29904 1.83427 3.66853 2.19711 1.83429 1.83426 1.46478 3.66855 
3.66852 3.66858 3.29904 1.46475 3.66855 1.46478 1.83426 1.46478 3.66855 3.29904 1.83429 1.46478 
1.83426 3.66855 1.83429 1.46475 3.66855 3.66855 1.83426 1.83429 3.66852 1.83429 5.49615 3.66855 
3.29904 3.66855 0 ]xsh
195.864 809.492 mo
(this payment from your cheque, savings, debit  or)
[1.83427 3.66853 1.46478 3.29906 1.83426 3.66855 3.66855 3.29904 5.49617 3.66855 3.66853 1.83427 
1.83427 1.83427 2.19711 3.66855 5.49615 1.83427 3.29906 3.66855 3.66855 2.19708 1.83429 3.29904 
3.66855 3.66855 3.66855 3.66852 3.66855 1.83426 1.83429 3.29904 3.66855 3.29904 1.46478 3.66855 
3.66855 3.29904 1.83429 1.83426 3.66855 3.66852 3.66855 1.46478 1.83426 1.83429 1.83429 3.66852 
0 ]xsh
339.986 809.492 mo
( )sh
195.864 818.383 mo
(transaction account. More info: www.bpay.com.au)
[1.83427 2.19711 3.66855 3.66853 3.29906 3.66853 3.29906 1.83427 1.46478 3.66853 3.66855 1.83427 
3.66853 3.29906 3.29904 3.66855 3.66853 3.66855 1.83427 1.83426 1.83429 5.49615 3.66855 2.19711 
3.66855 1.83426 1.46478 3.66855 1.83426 3.66855 1.83429 1.83426 4.76382 4.76382 4.76382 1.83429 
3.66852 3.66855 3.66855 3.29904 1.83429 3.29904 3.66855 5.49615 1.83426 3.66858 0 ]xsh
366.08 824.512 mo
189.358 824.512 li
189.358 729.561 li
366.08 729.561 li
cp
367.095 728.546 mo
188.342 728.546 li
188.342 825.527 li
367.095 825.527 li
cp
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: HAAAAA+UniversLTStd-Bold AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYD+UniversLTStd-Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B7D8BE6A28612DA499E70E1BA547C36FE861E2C0CBAF988E31
FBAC615271F3AA4608EFE7FF69588661546E63F1915A2209DE39D94FE20B5B89
39> |-
/d <1C60D8A8C9B7D8BE60242D8D46A20222AC7D9C32B71E28C771B532A7689D
594C159F29964358582B7F21B2EB3C4242FDB65730A2ECADCD1800BEA3C16337
9B5A6869F46469D6BD2A304BEAB12EF56C62BBAAAD7F06FD20E4D0D8E4C84958
0F22DFEEB61598F00822D86B6EDB9DC3A628C34AC0E4930047E06EC407467DD3
30014BAD97BF784C266C26EE5EF22D881C40E2454CB0AFFF49D7FE1DF780370D
398161472A06186778E031> |-
/z <1C60D8A8C9B7A73DC52290540AA0EE365E672308AA76346BEE27D683825F
472CD45D5A2A2F51D79E91D59F3CE2DC58B56341ADC7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYD+UniversLTStd-Bold /Encoding get
dup 69 /E put
dup 100 /d put
dup 122 /z put
pop
%ADOEndSubsetFont
/GVGHYD+UniversLTStd-Bold*1 
[32{/.notdef}rp /space /registered 24{/.notdef}rp /colon 6{/.notdef}rp /A /B 
/.notdef /D /E 2{/.notdef}rp /H 4{/.notdef}rp /M /.notdef 
/O /P /.notdef /R /.notdef /T 2{/.notdef}rp /W 
/.notdef /Y 7{/.notdef}rp /a /b /c /d /e 
/f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u /v 2{/.notdef}rp 
/y /z 133{/.notdef}rp]
GVGHYD+UniversLTStd-Bold nf
GVGHYD+UniversLTStd-Bold*1 [8 0 0 -8 0 0 ]msf
22.5825 754.632 mo
(Ezidebit Details)sh
.94 .73 .11 .01 cmyk
GVGHYF+UniversLTStd-Black*1 [15 0 0 -15 0 0 ]msf
19.2153 718.796 mo
(18)
[9.33011 0 ]xsh
38.5653 718.796 mo
(00)
[10.6051 0 ]xsh
59.1753 718.796 mo
( 708 061)
[4.99489 10.0051 10.0051 10.0051 4.99489 10.0051 10.0051 0 ]xsh
0 0 0 1 cmyk
%ADOBeginSubsetFont: IAAAAA+UniversLTStd-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYE+UniversLTStd-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B854D0F4B2BE2612D6F605AFB6634D12692870785265B
0C8E9> |-
/period <1C60D8A8C9B854D088FC01293C3E21DB4B1A8A3E424B91DBD6> |-
/E <1C60D8A8C9B7D8BE6A1886ACAA5BA97E02EB6DA466FC9B0DF82540E9C872
B57FFB3262ED7EFF88315243248D2CAB1EABFB586582ABC32A488D> |-
/k <1C60D8A8C9B7A73DEE9439F99F88A95E0CD946C8728728DD5A41A71595DE
08D596B61916646EE62E23DE3B9164456E10C52061029668B42D450BBD7D6D70
0D> |-
/z <1C60D8A8C9B77FE2B2480437628CDD1FD70A01BA29CEB17F404FAD64701C
9DC99EA8420B834CBAAA0494AD18343803F67F87CF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYE+UniversLTStd-Light /Encoding get
dup 45 /hyphen put
dup 46 /period put
dup 69 /E put
dup 107 /k put
dup 122 /z put
pop
%ADOEndSubsetFont
/GVGHYE+UniversLTStd-Light*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 11{/.notdef}rp /colon 
7{/.notdef}rp /B /C /D /E 10{/.notdef}rp /P 3{/.notdef}rp 
/T 12{/.notdef}rp /a /b /c /d /e 2{/.notdef}rp 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/.notdef /y /z 133{/.notdef}rp]
GVGHYE+UniversLTStd-Light nf
GVGHYE+UniversLTStd-Light*1 [8 0 0 -8 0 0 ]msf
19.2153 728.812 mo
(and select)sh
%ADOBeginSubsetFont: QAAAAA+ProximaNovaT-Thin Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /QAAAAA+ProximaNovaT-Thin def
/FontInfo 7 dict dup begin
/Notice (Copyright \\\(c\\\) Mark Simonson, 2005. All rights reserved.) def
/Weight (Thin) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
def
/FontBBox {-351 -281 1085 1079} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-13 -0 483 495 550 562 667 678 790 806] def
/OtherBlues [-226 -210 -196 -184] def
/BlueScale 0.03636 def
/BlueFuzz 0 def
/StdHW [27] def
/StdVW [31] def
/StemSnapH [27 28 29 30] def
/StemSnapV [31 34] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/space <1C60D8A8C9B8666C32> |-
/.notdef <1C60D8A8C9B78C66258B0D53F22ADFDD01D12B82C48E8E50619AA7
7C0A859A321C74A0D8F4E1E766D3E44792769259B0033F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GVGHYJ+ProximaNovaT-Thin /QAAAAA+ProximaNovaT-Thin findfont ct_VMDictPut
/GVGHYJ+ProximaNovaT-Thin*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
GVGHYJ+ProximaNovaT-Thin nf
GVGHYJ+ProximaNovaT-Thin*1 [8 0 0 -8 0 0 ]msf
55.6793 728.812 mo
( )sh
%ADOBeginSubsetFont: KAAAAA+UniversLTStd AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYG+UniversLTStd dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B7D8BE1A1D38804C7F4359964619B8D276BD1B95EB3FA1DEE9
CD24AF28E5EB4C82B788C04C5EE8B8D866DC768704C721E761883757EDF75A08
162DF033ACE84168BC87A556FC1BC14E1EBCF4AE0176F5FF1D3B48C06ED4F9CA
BEF2E5870FB99F4C2976BB04B7A40315A256B60B6FDE6394E905C1279F6609D7
353792C79E9635D67596FD60ACE4969681C4F9D46B0BDF941A132436BF3851EF
7E805EC29658200D2FB8BAEB8828921C0ACE45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYG+UniversLTStd /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/GVGHYG+UniversLTStd*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma 4{/.notdef}rp /one /two 2{/.notdef}rp 
/five /six /seven /eight 9{/.notdef}rp /B /C /.notdef 
/E 8{/.notdef}rp /N /O /P /.notdef /R /S 
3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /.notdef /e 
/.notdef /g /h /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u 2{/.notdef}rp 
/x /y 134{/.notdef}rp]
GVGHYG+UniversLTStd nf
GVGHYG+UniversLTStd*1 [8 0 0 -8 0 0 ]msf
57.7673 728.812 mo
(Option )sh
85.7671 728.812 mo
(2)sh
GVGHYJ+ProximaNovaT-Thin*1 [8 0 0 -8 0 0 ]msf
90.2151 728.812 mo
( )sh
GVGHYE+UniversLTStd-Light*1 [8 0 0 -8 0 0 ]msf
92.295 728.812 mo
(to ma)sh
112.743 728.812 mo
(ke)
[3.84 0 ]xsh
121.023 728.812 mo
( a pa)sh
137.767 728.812 mo
(yment )sh
162.663 728.812 mo
(-)sh
19.2233 738.812 mo
(key)
[3.84 4.288 0 ]xsh
31.3593 738.812 mo
( in the Ezidebit det)sh
97.7593 738.812 mo
(ails when prompted.)sh
22.585 757.647 mo
52.944 757.647 li
52.944 776.783 li
22.585 776.783 li
cp
.746 .676 .668 .898 cmyk
f
53.339 758.115 mo
81.971 758.115 li
81.971 776.298 li
53.339 776.298 li
cp
0 0 0 0 cmyk
f
53.807 773.347 mo
81.486 773.347 li
81.486 775.828 li
53.807 775.828 li
cp
.027 .305 1 0 cmyk
f
53.807 758.6 mo
81.486 758.6 li
81.486 761.08 li
53.807 761.08 li
cp
1 .98 .238 .152 cmyk
f
64.8854 763.816 mo
62.0254 770.631 li
60.1554 770.631 li
58.7524 765.182 li
58.6624 764.839 58.5904 764.733 58.3394 764.588 cv
57.7814 764.319 57.2054 764.122 56.5944 764.013 cv
56.6304 763.816 li
59.6334 763.816 li
60.0474 763.816 60.3894 764.122 60.4434 764.517 cv
61.1804 768.456 li
63.0144 763.816 li
cp
72.2054 768.402 mo
72.2054 766.603 69.7234 766.496 69.7414 765.704 cv
69.7414 765.453 69.9754 765.201 70.4964 765.128 cv
71.0904 765.075 71.7014 765.182 72.2414 765.434 cv
72.5474 763.996 li
72.0254 763.796 71.4494 763.69 70.8924 763.69 cv
69.1474 763.69 67.9244 764.625 67.9064 765.938 cv
67.8884 766.927 68.7884 767.466 69.4534 767.791 cv
70.1184 768.114 70.3704 768.348 70.3704 768.635 cv
70.3704 769.086 69.8134 769.301 69.3094 769.301 cv
68.6804 769.319 68.0504 769.174 67.4934 768.87 cv
67.1694 770.362 li
67.7994 770.614 68.4644 770.74 69.1304 770.722 cv
70.9824 770.74 72.1874 769.823 72.2054 768.402 cv
76.8094 770.631 mo
78.4454 770.631 li
77.0254 763.816 li
75.5144 763.816 li
75.1904 763.816 74.8844 764.013 74.7584 764.319 cv
72.0974 770.631 li
73.9494 770.631 li
74.3094 769.607 li
76.5754 769.607 li
cp
74.8314 768.222 mo
75.7664 765.669 li
76.3054 768.222 li
cp
67.4034 763.816 mo
65.9464 770.631 li
64.1834 770.631 li
65.6404 763.816 li
cp
f
31.0191 775.182 mo
31.0191 774.103 li
31.0551 773.761 30.8041 773.455 30.4441 773.419 cv
30.3541 773.419 li
30.1201 773.402 29.8861 773.528 29.7431 773.725 cv
29.6171 773.528 29.4011 773.402 29.1671 773.419 cv
28.9691 773.419 28.7711 773.509 28.6451 773.671 cv
28.6451 773.455 li
28.3041 773.455 li
28.3041 775.182 li
28.6451 775.182 li
28.6451 774.193 li
28.6271 773.977 28.7711 773.779 29.0051 773.744 cv
29.0771 773.744 li
29.3281 773.744 29.4731 773.905 29.4731 774.193 cv
29.4731 775.182 li
29.8141 775.182 li
29.8141 774.193 li
29.7961 773.977 29.9401 773.779 30.1741 773.744 cv
30.2461 773.744 li
30.4981 773.744 30.6411 773.905 30.6411 774.193 cv
30.6411 775.182 li
cp
36.6311 773.473 mo
36.0011 773.473 li
36.0011 772.952 li
35.6601 772.952 li
35.6601 773.473 li
35.3001 773.473 li
35.3001 773.779 li
35.6601 773.779 li
35.6601 774.588 li
35.6601 774.984 35.8031 775.218 36.2351 775.218 cv
36.3971 775.218 36.5581 775.164 36.7021 775.091 cv
36.5951 774.786 li
36.5051 774.839 36.3791 774.876 36.2711 774.876 cv
36.1271 774.894 36.0191 774.786 36.0011 774.642 cv
36.0011 774.588 li
36.0011 773.761 li
36.6311 773.761 li
cp
39.8321 773.419 mo
39.6341 773.419 39.4721 773.509 39.3641 773.671 cv
39.3641 773.455 li
39.0231 773.455 li
39.0231 775.182 li
39.3641 775.182 li
39.3641 774.21 li
39.3641 773.923 39.5081 773.744 39.7421 773.744 cv
39.9761 773.779 li
40.0841 773.455 li
39.9941 773.438 39.9221 773.419 39.8321 773.419 cv
34.9941 773.599 mo
34.7781 773.473 34.5441 773.402 34.2921 773.419 cv
33.8611 773.419 33.5911 773.618 33.5911 773.959 cv
33.5911 774.246 33.7891 774.409 34.1671 774.462 cv
34.3471 774.481 li
34.5441 774.517 34.6701 774.588 34.6701 774.678 cv
34.6701 774.804 34.5261 774.894 34.2571 774.894 cv
34.0591 774.894 33.8431 774.839 33.6811 774.714 cv
33.5011 774.984 li
33.7171 775.128 33.9691 775.2 34.2391 775.2 cv
34.7421 775.2 35.0121 774.966 35.0121 774.642 cv
35.0121 774.319 34.7961 774.193 34.4181 774.139 cv
34.2391 774.12 li
34.0771 774.103 33.9331 774.048 33.9331 773.941 cv
33.9331 773.833 34.0771 773.725 34.2751 773.725 cv
34.4541 773.725 34.6521 773.779 34.8141 773.87 cv
cp
40.2271 774.319 mo
40.1921 774.786 40.5511 775.182 41.0191 775.218 cv
41.1271 775.218 li
41.3431 775.236 41.5581 775.164 41.7381 775.02 cv
41.5581 774.75 li
41.4321 774.858 41.2711 774.912 41.1091 774.912 cv
40.7851 774.894 40.5511 774.607 40.5871 774.283 cv
40.6051 773.995 40.8391 773.779 41.1091 773.761 cv
41.2711 773.761 41.4321 773.815 41.5581 773.923 cv
41.7381 773.654 li
41.5581 773.509 41.3431 773.438 41.1271 773.455 cv
40.6771 773.402 40.2821 773.725 40.2271 774.157 cv
cp
37.8001 773.419 mo
37.2961 773.419 36.9541 773.779 36.9541 774.319 cv
36.9181 774.786 37.2781 775.182 37.7451 775.218 cv
37.8361 775.218 li
38.0871 775.218 38.3391 775.146 38.5371 774.984 cv
38.3571 774.733 li
38.2131 774.839 38.0341 774.912 37.8531 774.912 cv
37.5841 774.93 37.3681 774.733 37.3321 774.462 cv
38.6091 774.462 li
38.6091 774.319 li
38.6091 773.779 38.2851 773.419 37.8001 773.419 cv
37.8001 773.744 mo
38.0341 773.725 38.2311 773.923 38.2491 774.157 cv
38.2491 774.175 li
37.3141 774.175 li
37.3321 773.923 37.5481 773.725 37.8001 773.744 cv
33.1411 774.319 mo
33.1411 773.455 li
32.8001 773.455 li
32.8001 773.671 li
32.6741 773.509 32.4581 773.402 32.2421 773.419 cv
31.7391 773.419 31.3431 773.815 31.3431 774.319 cv
31.3431 774.823 31.7391 775.218 32.2421 775.218 cv
32.4581 775.236 32.6741 775.128 32.8001 774.966 cv
32.8001 775.182 li
33.1411 775.182 li
cp
31.7391 774.319 mo
31.7571 774.013 32.0091 773.797 32.3141 773.815 cv
32.6201 773.833 32.8361 774.085 32.8181 774.391 cv
32.8001 774.678 32.5661 774.894 32.2781 774.894 cv
31.9911 774.894 31.7391 774.678 31.7391 774.372 cv
cp
45.0301 773.419 mo
44.8321 773.419 44.6701 773.509 44.5621 773.671 cv
44.5621 773.455 li
44.2201 773.455 li
44.2201 775.182 li
44.5621 775.182 li
44.5621 774.21 li
44.5621 773.923 44.7061 773.744 44.9401 773.744 cv
45.1741 773.779 li
45.2821 773.455 li
45.1911 773.438 45.1191 773.419 45.0301 773.419 cv
47.7991 774.93 mo
47.8711 774.949 li
47.9251 774.984 li
47.9611 775.038 li
47.9791 775.11 li
47.9611 775.182 li
47.9251 775.236 li
47.8711 775.272 li
47.7991 775.289 li
47.7271 775.272 li
47.6731 775.236 li
47.6381 775.182 li
47.6191 775.11 li
47.6381 775.038 li
47.6731 774.984 li
47.7271 774.949 li
47.7991 774.93 li
47.7991 775.236 mo
47.8531 775.218 li
47.8891 775.182 li
47.9251 775.146 li
47.9431 775.091 li
47.9251 775.038 li
47.8891 775.002 li
47.8531 774.966 li
47.7991 774.949 li
47.7451 774.966 li
47.7091 775.002 li
47.6731 775.038 li
47.6561 775.091 li
47.6731 775.146 li
47.7091 775.182 li
47.7451 775.218 li
47.7991 775.236 li
47.8171 775.038 mo
47.8711 775.056 li
47.8891 775.091 li
47.8711 775.128 li
47.8351 775.146 li
47.8891 775.2 li
47.8351 775.2 li
47.7811 775.146 li
47.7641 775.146 li
47.7641 775.2 li
47.7271 775.2 li
47.7271 775.038 li
cp
47.7811 775.091 mo
47.8351 775.091 li
47.8351 775.056 li
47.7811 775.056 li
cp
43.6991 774.319 mo
43.6991 773.455 li
43.3571 773.455 li
43.3571 773.671 li
43.2311 773.509 43.0151 773.402 42.8001 773.419 cv
42.2961 773.419 41.9001 773.815 41.9001 774.319 cv
41.9001 774.823 42.2961 775.218 42.8001 775.218 cv
43.0151 775.236 43.2311 775.128 43.3571 774.966 cv
43.3571 775.182 li
43.6991 775.182 li
cp
42.3141 774.319 mo
42.3321 774.013 42.5841 773.797 42.8891 773.815 cv
43.1951 773.833 43.4111 774.085 43.3931 774.391 cv
43.3751 774.678 43.1411 774.894 42.8531 774.894 cv
42.5121 774.912 42.3141 774.642 42.3141 774.319 cv
47.1881 774.319 mo
47.1881 772.772 li
46.8461 772.772 li
46.8461 773.671 li
46.7201 773.509 46.5041 773.402 46.2881 773.419 cv
45.7851 773.419 45.3891 773.815 45.3891 774.319 cv
45.3891 774.823 45.7851 775.218 46.2881 775.218 cv
46.5041 775.236 46.7201 775.128 46.8461 774.966 cv
46.8461 775.182 li
47.1881 775.182 li
cp
45.7851 774.319 mo
45.8031 774.013 46.0551 773.797 46.3611 773.815 cv
46.6661 773.833 46.8821 774.085 46.8641 774.391 cv
46.8461 774.678 46.6121 774.894 46.3251 774.894 cv
46.0371 774.894 45.7851 774.678 45.7851 774.372 cv
cp
0 0 0 0 cmyk
f
34.599 760.363 mo
40.84 760.363 li
40.84 770.542 li
34.599 770.542 li
cp
0 .77 1 0 cmyk
f
35.2462 765.453 mo
35.2462 763.474 36.1452 761.586 37.7102 760.363 cv
34.9042 758.15 30.8222 758.638 28.6092 761.442 cv
26.3972 764.248 26.8832 768.33 29.6882 770.542 cv
30.8392 771.441 32.2422 771.929 33.6992 771.929 cv
35.1562 771.929 36.5582 771.441 37.6922 770.542 cv
36.1452 769.319 35.2462 767.432 35.2462 765.453 cv
.012 1 1 0 cmyk
f
47.565 769.463 mo
47.565 769.247 li
47.656 769.247 li
47.656 769.212 li
47.44 769.212 li
47.44 769.247 li
47.53 769.247 li
47.53 769.463 li
cp
47.997 769.463 mo
47.997 769.212 li
47.925 769.212 li
47.853 769.393 li
47.781 769.212 li
47.709 769.212 li
47.709 769.463 li
47.764 769.463 li
47.764 769.267 li
47.835 769.429 li
47.889 769.429 li
47.961 769.267 li
47.961 769.463 li
cp
.008 .438 .992 0 cmyk
f
48.1954 765.453 mo
48.1954 769.031 45.2814 771.929 41.7204 771.929 cv
40.2814 771.929 38.8794 771.441 37.7284 770.542 cv
40.5334 768.312 41.0194 764.229 38.7894 761.424 cv
38.4834 761.028 38.1234 760.669 37.7284 760.363 cv
40.5514 758.15 44.6164 758.654 46.8104 761.46 cv
47.7094 762.611 48.1954 764.015 48.1954 765.453 cv
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: IAAAAA+UniversLTStd-Light AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
GVGHYE+UniversLTStd-Light dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B7EF327C102745B9C52D7D6304A9D3723205D8903F29DD7D41
B4C41A3FAABFC2727FB07FA1DF5B8D28873D102E9323> |-
/f <1C60D8A8C9B81F2C6DADD0309532CD61F4BF598521FA8A5713A3E2EDAFE5
CE9C3DB0F3C99A33E88C2C5C47939882F2C4C740EADC24873FA808D2236AE164
56F64093728608D6CDE03CF9BE85629FC4F4CA023B15CFE2F9B23FF412474C88
A65E2DD7E39791A25F632BCB262236CB6BCD1028> |-
/g <1C60D8A8C9B7EF32278866B9AEDD53F50BA1AE82A5F08EEC4EBD8A6B95C6
C785504B634E320E64B73CB34A0B718FADF9979DFADFD2098314689B45194F92
3D3EEED1DFD4B53469985FA6771ED58C874DD6562196C61E03370FE803F321A2
180E5E468B6A8EB22F4AC8777D9C63AAAEBBE990DA118F6D89BB2D6264368650
B4E1CB09B3E608CE887649A2AF3ADE49A34BAA3BC0744F67D40CE8CB5F7159F5
1A8EC9B33F611D5364C5AC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
GVGHYE+UniversLTStd-Light /Encoding get
dup 70 /F put
dup 102 /f put
dup 103 /g put
pop
%ADOEndSubsetFont
/GVGHYE+UniversLTStd-Light*1 
[32{/.notdef}rp /space 11{/.notdef}rp /comma /hyphen /period 11{/.notdef}rp /colon 
7{/.notdef}rp /B /C /D /E /F 9{/.notdef}rp /P 
3{/.notdef}rp /T 12{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /.notdef /y /z 133{/.notdef}rp]
GVGHYE+UniversLTStd-Light nf
GVGHYE+UniversLTStd-Light*1 [6 0 0 -6 0 0 ]msf
22.5825 814.749 mo
(F)sh
25.6785 814.749 mo
(or correct receipting of y)sh
90.8505 814.749 mo
(our pa)sh
107.399 814.749 mo
(yment ensure full)sh
22.5885 821.751 mo
(ref)sh
29.6805 821.751 mo
(erence number is entered.)sh
gsave
85.429 774.592 mo
174.004 774.592 li
174.004 750.088 li
85.429 750.088 li
cp
clp
85.2938 774.699 mo
174.142 774.699 li
174.142 749.931 li
85.2938 749.931 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 841.89 ]ct
[88.848 0 0 24.768 85.2938 67.1909 ]ct
snap_to_device
<<
/T 1
/W 371 
/H 104 
/M[371 0 0 -104 0 104 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [cf /ASCII85Decode fl dup/DCTDecode fl]
/O 3
>>
%%BeginBinary: 1
img
s4IA>!"M;*Ddm8XA,lT0!!<2T!<rN*!WiE)!WiE)!WrK*!WrQ-!s8W."U"r2"9\l3"U,&5"U,&5#7(S@
#6bD@$47+H$k*OQ$k*OT$k*OQ$k*OF!s/N+!s8c3"U>JE#n%.M%1NaU$k*OQ%h9'X$k*OQ%h9!V$k<aW
'+PE_&J5Te&J5Te&J5Te&J5Te&J5Te!WrK*!s8W1"U,,?$OI1L$k3XT%1EXR$kEgX$k*OQ$kEgV$k*UU
%MK<\&J5Te&J5Te&J5Te&J5Te&J5Te&H`+:!WrN,#6b89%1<IM$k*RS%1N^S$k*XV%L`aS$k*XV$k*OS
%Ls-^$kX'`&J5Te&J5Te&J5Te&J5Te&J>'!!!E9Ts1eUK#QSN=Es)IT!!*Z4!YGJ9&Hi'O!MTPo!WiE*
!!<3$z!!!!)#lk26"p"c-":>M;!<<-'!s&E'zz!!`Z3#RLM5!sAr=&-)_5!<WK-"q)&^z!!*-'"9ec0&
I/RS'-T(r;%t306@kgF(E"GT;K6iAZ*O`D()Rr8,pkE8<afHXJqVY4-R^Dn1c@9P3BBPs7Rp!@8lJ\h=
'/U/@q9._B4u!oF*)SLG^4UfKnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZF%$J\%&u[_8=+.`Q#s>ai`#Ze
(*%$f\,!<j5f=akNM0qnF?)@o_%qPq"aau!!*-'!X/c8#nLkQz!<<0'";(eA#8/17;$[gZ6"+aI'f(?&
P+f.d_$Ll%1GgsUEcVR((`=Sd;H72#_U6iknJW]#-R^Dn2E*TU3^cD+7n?3D;cHe!=BSg;A7]@cBPD4'
F`qtRH$Y'pKS>/9Ll%"QPa.Q$R$jD<UnsrdW2Zf'['d?O\@K2g`5Ta:aN;TQeCE.%f\,!<j5f=akNM0q
nFH2Cp%J.Tq>1-F!"K,3!!*Z5&H`UF56-2!,1TSW+t6tFQ6Ibe,*jE%@Nqsn<`O$;cuF'*<C%t)J[QOD
leWZh=:g^h"JlK/\$la3B(%k"R#R(:G(pE<EV>/-KgN5OXcm?V[NnJW^g!&uTuSR[g9u%n<8u@o]*u-h
4DU/;;Ue2CD4ltRoPG@IqPe'7aHMefD&9^GaDEBJ.aXa'lsers5QGM<WT4R*McO/(=7o2)&SV]P*_2(C
4S&HL&(NC\bGlE_Ha2Il<;0g%fdA"Ib+Hd"q9a8G^$QENFD=dNn*#Oq="rr@3S+&fohXE[*jq>fmGR]0
M"?t7*%]g'ih8's_kp:51b@^*r1Y.C'NoO3Op8?UKVl?/0Pt<ePAA&(lCP9C#]/k>TcG^.mGm^^EIh-%
3t"q`1/(#U2b(l1O"d<@DZ/n5\#)0L5c_r)2P*VpWs96IZ#-NF-[0rA;7j<Oa1%`-P#9s'[K5%jp6lT6
$LY4e\Jmu)dd[Eok&J*kKNend$gpG76rLrl/4<CS74^i)`'l4F;T)!T6rLrl/4<CS74^i)`'l4F;T)!T
6rLrl/4<CS74^i)`'l4F;T)!T6rLrl/4<CS74^i)`'l4F;T)!T6sou@J!M;/;O/LU@Nq*^.:OLr'fr0T
N<2gLX"Ch8+t$+Jh)H]*F0R"K!8:2kI$UV0-YCN8@V+M[g+$?J!W@1rg@:]'JLLcM@^n:j3B<3*q*`Dk
@e(?"G@aOrk\!Jp\dj[u8NSon%f)o[jICHios(7u=FRVoP3HaGYb5P1p:$%1g.(#DV!TS-o\g^'I$dg^
A3AE0:@U\u.Ol*G3,MQZHI>COc(\L-cB>9Y<_WrI=[9V#V^#"XK,*/IOZ\H@d6%1Tj2gO!D0oRd$sr7)
#=Fe.C$ebU"+H#9Geg?PRrRhpg(qLV#Ar3-c-+="AOXk@nLYm-]ThX&4KD1;p)MP][Hf9@DV&rUg27j)
i,cI(WkAW?F6%/tZu6"n;D2,CB<A!U`k='4<q(8oNK1t.F0`9V`hf.q%^V[640<RL`QPV^&P`A3Nmk_j
3b9%S?HB9GBKC$Q&1\>h1"T?*Y1Pm(+YJ.ceofre<U[5EG-S3WD8S?i)j/pp7C;Q4D9:;nGiMF+H'o0t
'k\:eqFoC1LEZM:66c3V)H*#H[A<5"0I(K![?E%"3G-KkOIYH$C!I$#JK33*K,QSZ>\4W#%C&_r,(Cun
^q$?aPCA$[<^IC"Bd#MsmVtU.!+FhXk)K75QoNV5io\D<4*^s*.Ef)>`uJrq!pef2^kbqe\FC`k*/$ab
&$[R<AB&m-,KN2VC"CcJKqUjJW@Aa:#WoJdjlR^VK\2CA*7=ij)M/H.#gO-F$7d;S3MrJ2"D1*gDai=n
Yn9V@'X86C&JVJ^9+_lC&PE]MYn9V@'X86C&JVJ^9+_lC&PE]MYn9V@'X86C&JVJ^9+_lC&PE]MYn9V@
'X86C&JVJ^9+_lC&V'i.J!M;/;O/LU@Nq*^0*tOO6&d(!a3beV<n-H\\3a#F+C_/qS\P67N832+=:U6(
_5q;qPE5c"P#k3%TtuIio0<IN3IjKuj\%%dDrji9j"59=e-?[2a4d)()`@'mG,Xu,Po^GT@SR^.WAT"b
N&Y@V=bPcn2E-?%G=I.I4_kG_/);,sR)Nd8-CotAiCA)]KNdc`\5g`J;D>(%L8)`91?Q.XV1bE[2cP!a
2P1+1g5U&jGA:I+h.g%hU6tC391M\>)gg7>`HQ4Ljg-\D_A!*0EQgOJck.5+0-ur[jL0ge6PJap%6B0H
QQF0V]!6u!Ns)%g2TdP2Jm6!5(``f%4C,IX!5"5tdCmRH936T)=ggt<`oB;!SWrZOEKOB>][_9AYn9V@
'X86Of?Ydf<r91t;M67DJ3(8p:_=iu_N#HaGU3IMYdL0R0O%rALe!%?il'Q,g'@0G#]:\@'b^"A$TcmX
=uMGqE6.Jia$^JGXIiRs'_KDF2C(SM:D-H6*D=1bdG)aD%FguV@Q)sW0S+jl>3X:d9FPMpM23[>mEN[c
#E;TG7$ir"c</K!@Z%P_/fB]3iS6l2jJOLA/l]9Y2.ou?lH++.8]>J$V/4^?[un^o:GcqE\F;e=)4S#f
fib%T.cZk3YkSlU1laQ=Su6V4Zs+k"KbW)E46=)LF%G@93oe:j>7AZ5ng$_eKXfL5OJJuc(o9eK@0@N\
>dV^(LeW^8^pUrh7SlCp6C;1MA4?e\e/Y-?aM"_>]-<Ob.:OKe+t6tFQ6Ibe,*jE%@Nq*^.:OKe+t6tF
Q6InApg:$)`f1=*H,nZSH`CYZ6UfJ"Pj'/Qgt?Idq;9pRlbS>hFLVR="tO]!JQ5@PY9]Bn`k#QH37(K'
C8eES?LuUKI3GWH)/cSbc8aNNa=XGa[:lV#4q?IMe\+isL<gNRKU*69W1g.H3>])_Cs-"FU-'@RP"&;9
P9MT5eV3`AQ6Ibe,*jE&Y+_.#UJ/>D\oL_6Ti=["&L_$&[BC8InbQa.*\fWX_mHYqGGK)^Ajd4gd.Xdj
7P.n<A]Du]6FS;Fm?oV@)+S1His,$6.VVSah*l'^r)Xdc@Nq*^.:OKe+t6tFQ6Ibe,*jE%@Ntj#J!M;/
;O/LU@Nq*^+]C@)pp=e=2)4Z]1o<]E8`*+U9X0Y2jH\^e-I<g5*$DeZ[QM1$=un5lB59P@NOkmD.:,n$
,7*_PHYL/L`^DfB9=%I.p#m(sBE@pe3c6I1Br(-9`HWYg`8ETA$f(W[2gDH<;H!>GEh/j-=#fXY:2RCK
=LLVE:2uHdZ^nc3CnbE@B'iL!SK9'iNuTki13ho$m^RNi>W_4Jh<Y?]/Xb3olc<B/3KfQ-UKbhfD8bh*
j+]u_f_._@Rk!&%70)D4[SH*=rMn'.74^i)`'l4F;T)!T6s+d.#+'UL;Q08EWL!rq8lV&VUkN2q=q<*Y
j+nq#eEb"rUb0+^b0;V#NZ<"]Lc\"A(%U(%AA%iHTZ1hPJ#u1lM0n-<KiGULM>AHR<5omrkY`#u:GAM0
9!Hs5!\dI0n3gIkY^qGkgTt_-;;3FgP9&RU-@hWlBT5*<:n?UX;\i@&J9$V93_)a*6s/M*Rs\p/A]T(T
Pd*j0f$`;q9&c/`]LpVJ&V*//;n!dFAf+_pE!9i[8IH*HT5>`PY^n/A".Tt1h6FGRm86Fl30^fsU^JM<
)4c<J6V+*$d#.;!U9<QT`'l4F;T)!T6rLrl/4<CS74^i1DG]f8.jijhoO#c$;BM^j8pf(p/O_p/c68mA
K4uVV&o\d\"*BVVb=,,A=1g8`Q$)#_#8WU)!59']"H/`$dns<UL$"<ta#f([cj[Gc-SQ98Q>YBkcuY#S
'cYOiU!:3T.+K&2B0_ik4.teS%\ZV0h?d@bLB605*(Cm#o(HOXec]t-[8Id@%8/V)!j>9:.X#PH_dc"F
@Dmm?g:%sD+j>(%897PZ"Aj`@$i\s`U4ec9&PE]IbFHULQWpWu]11/-Wa<iDqiT\AO79p:8UfNB'O-S_
I'\-KZ,qEoD/nico-M9@nN%sr_2i+XmEXmh\nraoXVA#P9+_lC&HN]_bAi[2TnDta/W#hGbu&\lQsB>5
B&3&;41SMR.$&^dR[K:2&JVJ^HtebrJJ(rH9@_%8b27Jk\gVDA8j'm@j#]7.;I/ge)E!L,-U7a/ncJED
*KX\imPFnVGD9"QS@P&,]D'23pCF`.PtZ3q<tILjP,,jc$Aqdra=*in"se+sNpLb+E:[UH.q=*6$.-kr
Lg34UTI,D`8YF1qDUs]r]D+jY[3rI(0XRDsRUt7-b\2mY]N:\YFWiV=]G1RuTtKlTLD5HD(DN,_-O/"o
\:_J1hXY!R._q?dH0Dbs0#\$JjWL".5rjKt"flH2fs$-$LZ5\0<eTS\ZjqaqZjXiB]bL!:ThS6J!h<I\
e>6gsB]OmU8l!TT/`,r&901jmi0cQlm&:_n)+K#3(#$j=ASi8&lj%#YUfSte1ZtJ`eZ*EN74^i)`'s^T
J!M;/;W15?5uNM2;DBH`!*b4<1fU!'Jj:&!Yt:r%9.a']ik6"WhBtaVGa9=hn3YXUgEL5(ZE;0EG@k7C
mI(5L$1Sb_YXUO7g.*6'N/P?j:"!b)Wfu9iC7cO"/ut+*6V/e/M!G9E-Jjrm9s`p?9ZM9C)Wqd$:]a>q
nD,V-GbS@DU;Sq."J)WE<>*KW<TVitod\JQBhPHs>_b9COk>fSOt[!S$Xj4RD+n.,N*3[1YDD2ua4fAf
Jq0c^U/&qH4AI?DPN%]@=h@rre*%G5>c'3E>ZkYge[cq]E&_^rg]no1(<DJ0G<N6T9C4-efu58>4qQ20
P2XUl9Yj_b+NZZ]_dr@)gII/ai/!B"bcdg?`'l4F;T)!T6s-ISDNRIbPtn(q(<f*M=:.3#GpCNKVqSV7
c*LVWR*B7=bK.t1brKL\8d`O^DY_JscAK-4jaMsq(?n[<Wk#U"4YYJsTN$@2CEhNNFd4PA<Z@d(4@=Cg
]Z"g8ht]67+LJfP#<+:j(6759b!#N]jB<1@JhE-XMi'B/Zk$6"]N(#E:>Z4j:*&l=pTcN-+u't&Q3mZ,
o2E`R\>\c'/c0,@ZMPF)di]Ut4X=&seB+OBK^*;p8!RA_j/9j,ihSD%n(L`@M=@:LXL7Y@E)Rul6k_@/
f;%NKF[uaV&p!E1]?9*:mY&6:KNP,n-Bjg8=.W8lQG/X"MHG\2Ll,;jV21"2Lo#ob=GWf0MHG\K1rsYd
0dOQ57:pWZXY#AAj<6-4lV7MHTu8>nW?`Gh,6BD_._Y3G6>Au$P7mC*aGb(Z>gcg<\/L,ZM@`(r#g*nq
l<NYSEG5m//oBFBh23^8/_%Y7a$aN^NZ;**L;H5Rh^<9O,aH8L)CPZg?[MeQH#JtHlU'<qM_d%PBo*Sm
M#%O2[;e#*BP(Hp\6Q$8Q6Ibe+rPHhl4WE*i:gp=&_0P-<1e1mTi(e*q["q1cU*P0a:FST:\He%[8!ee
:EF&V?+q[SWjjeMKq5d0oN+b_[<840+t6tFQ6IFqp\A\^4d7XLKZ12OqY@-Dp6,lU`=1M8B'4@g4@KkN
CpR%q.:OKe+to!0.heXLK.4%kBoO^"OEP=ri_!0.E.`'Hfgo%^mt20OXp(V8"Ak+FkoL3W6ZX4s#U&RU
KbZ[jEZoY0IGbomWe@C9Z*a:_Vnu>t$Gf;2.DnkG,_/W03+KK=goLW\pNG0Hk/;>aCPWur)dJZM`>TY3
%Eb_T^qnN[QTN"ajht47)J%oA1e!2F6ctNblfk"fPA4^/h_MhckASji(X%N(ar/ueTlM]MDgkjD?$OQh
&oIC.Eq:Y;\KB7+patikG5(UU?5Ab?hMPEkV21'0e9uHXS9esSa,Z>5a>TV]?9?!XiO,eD&eOT*PaoX-
YF9W`*4%-]qa"trC2nL(o#b(!l"U?K$CYlEPE+XM)=V7hba/K>$'VO'OP?96gOjuu;C2#%;CTXC@+lU]
>K]^I_e<VG#23m$Pb_[e[G_/i3&&5e-jF&oH5ni\BPU$:78i6mW9lAg20?.+#:aUG#8+SBlG6TbTd3f+
_qhF-7cq`"1bfA@`[7kN!Yr+rH.P^A;(:4TD^=H,"@*R>",?7:Yo"lsk![M_V(i["ZTt@\3[,"s4!]&K
>>C=CWtT=3\e\LdgC@7d%O)hs*u%eFZ3J:3'"3096aX7rR?\Q(C:a:>Hta7&`#;OM1Dk#hlI(^:MgY+s
KWM,R=H.4o".m0#9Yl<=D?G9:McQBuDVQd@-7WcN.iAM#ha^*tqcgLp''pK0Jg#F/JR34[buDfcfk3Um
NJr&bH+B&OPoQg-77j?(JlTJEV;q*aIQH&fWJ6bdM-(JJH0I9,W]]D@FX[M:*QOs<=t9BLIP3iT'K]5u
ArhE#NC`@A:E4YWeoe0L.t2jWpuS8<2E]BRR]'/oT$j#@F@luOaj/%e#>LjlmgJ0KpeOO5<XOr$6Y!s3
eSOF/C/pOBX_VZ)I.5qfS?=tM*QKB",j_MPp[t!^h:gnPMVFe7MA$.K0,1"2*#K8*Jl'NP'Wm6o3-DZm
DVbMm@$))KIQ?m%e2ND/Smo:4X+LSF.@4Nb"!HWokEq.bN>=?/;'$qk`fA]f%CD4MJ`)%Y>"b-FJLq-p
K[A;/^]4T^/$99tE0qQZ!#n9J7IP.ph%hnS=pubk_iJRZ\Zla8)K..-5hh'H3"H74JpQ18Q$A&H<Tc.B
<us'=a#Q([bqWlsK&G'lj-U7QOGb65V'RTh$Ygn!P!L>/@Q%HXL?CRiO[Ggj%4$n+'i1-cZX!uo>`"fu
pUmo@Ko"))naoMCo+hX"%##6O&k\C3,p9/S@!f;X`f$p#XbPPp-L,j*q0I##Hf<VC4$Y'$`JWsHE1qjc
U-+=(YStoSc6*Q=%]$qe=#t$N`5;5UO?B#^>V=JL7b:/!r+!gLC6FE+UlDrYEMTXX.DlO>*(FhLQjE5f
eq%Fe\S5eLeDW.!ZY(5#eV5Ljn&0Sh]Ou-+\dJd(0j)MWDJ)#<=_DeIcD'NUenu7FeJc,502<i7?.mKC
Gc,G1f1Dnt6/YslE18`)*8ttSd@6@\;W)<UeD5EWP.0in-r:qG`.6Nb4gj#]OJSNSdb!);h=;)III;:X
F@G@5GLLW=T<&IMWZeVg/PU"D1t%is8.0A<>&gqcgtVo[^`FR+;PA8d1@/gYk>m>:]gLCX*R*gEK5&4`
A5aBt/7SC95iUQ=5]LRdpr@pu*cbN>OATStlt&6P>Z^.b,JIu!/)n+e?>cee,tL^Af8K$()1QDMZ]XC.
FD1a:?I>592N9OD*Aok7/08)TjN5U&Aib6+6\s1pKE>KBdMoL+*b1O$(ngJp+$Ui?5=tV6J!H>gNt4SH
en.#NAOh#)W5$f<+-pj,V)fdknas0[T73.&=_9cZ$*;?q&pKOcMu>Vtq.BV06Uk'/Ap7B3^NXlK%-Ic*
rI=8RCc=hqX<GWZCPWCU$?cec-"@Yj\e#5!JoE*L6O9e1PXe2QK5mnl6"!=FC0nb'balF#\`,s#Qc?,F
e(iNh(Q63?QuR(_6!^r2`mrT?O4,Mf9?EcD2qi-BarK0nPfT2'X]9hOX^8"I[\:@o/]0nXD)r+?N]BZW
8d.^n#p*(MbN],pL2(b1#I\Od&$U\A4"^\lA&FP:?TBV?YQd!B88aC+^!TDuN\eL3!M`gc7Sm?4>fX&H
o#a]p>.h?4n4:4"j]AHZ9\D_=\Z',IX%!OA[,<d$osoq[G"'tVmX.'\EqL]&0"RAO$r4,[))b,\n1;3E
[MK_>4!,?p2`T=99"8o6Q'`?oUsn;0MOigmfirI=\o'Q"j'7'C\.cB7[.&XTdCp@"_'sKbL_,)n0]>j^
jCm7gWL%jB3^U<ZNVA'82d9\0MFKn=1`(7gg;T:1pCu_A-ni0n2H=(!D4MCcPa+atg"k%%XT[\CasPJJ
<m2dppncF-N8QUf!lb\l[Y'`XU[B,YMeV7iF5/l%X_?coRSe9.r3]dW.PdQu_i3I&/n&"phC#1+5j%$C
m^+[;FcO3OdG!!<^9JQr`l;cSc!J",XWCq.%g&f$a/qZ])u5a8n,;%8_5Y:FC<\)/h0%k,i;+/@85Ml'
V-*/FUO4*JH!ppc0e[C%0*5T(/8/rIQLQR1;RF^ZOdhlPhHT":C.8j\[Z=pT,\A6bY2McBA-^::Vu%I#
g8<>JViNT<0&I>:=8iVT+_P\:4Vj*CXM$6S/kli;C0l?=MfL;-!:*3Yh+J'p"^lKg*Lm,tg=F,qW(0D&
3_mbiF%mYhdDEI31EH(N5WR@=pL,VgMWb[P,\/Pg7e:`jS;=1'R*0@/:I8leb:0@#E=O;H@l?X-MeUXS
3,iPi/KR6E_L8pR+f8hdjTc[IC#0S<VXRX0+l:s=CSP/XjfM0G)^shmq(ORfPtQZgW3s%YH(mWj$F\[=
VLaI_[oP?+=qjJY\%SDf$i+mVKK6p?49@2`UMc*8bDm#JH#)/Zlr_*/bD>X)JE7`'jl@+ErPcNNMu-'/
:77oqbU>>$,D6jME/\`qDPZj'hsa#F1+M3hq`=FRg^u3%_^!fT[.M2g4+#n>-f)DV.r<AoYd+k'brNW1
=pcCprrC;YS!GP37I[-.!j`e<JHHW$1`9JK5pL7LA[/9Ae'R0[NuC+GMTG.(VKt08RW9*DH);M^oL+N%
c%semfVKA"GV[Hln!uniD:<As/gJ;h,1E#6but?'[o*p5G][m,Etc0#`T"dXm_#l\?Hd2YYjj<"0qo8U
\,pqZ!P6#";Z?`$<ig?P:_pG#$l+73MXr6S%(\&r@AM4$?Bf-nj[kR)ehGj8D(_emlVem6@7j\6r?eg]
aS1n>%O[XX6YG9N6X6F)=Is)"3>U4f1AuH3'+k<ATiHDZ<N:'.fPY5?%Kr^1OM!Ng!F?:]g_V279s83R
L_dMP+kD@s![Dn`-ll$dEpi<EQ%=VQkuaZ"m`i;!V&hYIkFsUj&<A`0WhhUGA4Dap;Brp/`@=KA<0[i%
7gu'8=f,e:i3gc]CPH:I:fO"%9T:R*_f\7^5o\Ja+SR6B^AVDbV/ktL]J%Q)7dnir@COAjJK[a@1pWo8
'JM#m(<8NU?VAjo-Y@2idma'&nUj3-"u0s5C'@$4;16s'D2VS0/@7sef[->m%03LY%7%)M/M?n\deV\P
;\_C52E[@&8jm29WD:1#lB&CUU9l1SJe$O>2tmL-QL7oCR%B,c0YB4BpGgZX&WhRN$DcMdUMAI[_CWl]
Bcpr+G$5Qf#)$=W4!jXXp<f(*TMCIfSu8)h+k^b=XZ"6-3[ei4Itlh3,6[b8n6(?X8h4*V(lB-?VP?=?
$L_BXgKr?of;77)C.;8aAJt%=;-V^:aX-qu=2L#%XOJH/9nZh++h<XpUSc4j:'ad4#EDX<[#'Eo%c5AE
nOq-O`G((DlsM"sS?-d$6I63?(!h$*4gcGJ6]W,CZrXP\NcpPPNRUBKVe%%rQ6J!^eTB=j:/$o<mU@mr
,q"sKg_PmOH.\=%/pk+G5gZV^l%_cd>^V.R;X7,Z8u8Y)@mt'T%5]^X%NC18)f=0L[jEZhP7E6ci9"99
=tsS.962,JM`<A`"/dUCT*]T/;ej+b)$=FTORF1'nTmaP&"DUA<gcpODk5WlQ_8&p[5k39Gt2#6TSF2T
'?9LDej^HmF*R%@bD,!W&[&)jbT&'*RT0Fccg]LN6Dc=S%;T4ajP&%<IZJI,[ei[?Hd;i)P#;jUK7OsO
eQNu[\WZ<8dcZgYD,YA5XGD$F0]?(HP\hTm?b\J;@[=Nq3#`'SG`hHk.atcU&hSlLAh/(p??n"fMgD:]
7aQ.f=tOVliN>bj4&qG0h$@>;lk-"-']nVg,Oogbiu3!;WR:*ikaYU>aeq-7]^jS3MVM+"=kuut;=%#U
ESfo7)9/RGb,Ncn>\Zu1FCGs+X4>+DoVJ,@OJVY9gT8)\2)af'0\k^I+J*U?QAld3L=19s.(7iY9l'>m
<A:gSAQTVCFcKngOI_r!(:ieE'&,31(tc(I\oF:^*AXYcQS*S="nZKab'=*.U9J?72S6?h-.tgp=nM1)
_c@9RCg]=ED0oBp-a=qQFAQGY_RQ1:AE;9Bm/*1o/o'l^GB7d:DlkkF%Afq+6S0EgPTU+)%KH\7f8LP#
i@m->!&FU'3<<2!%BOCb-oV`]>0ttqgfdoKG>t::*7Je76tA4937)R(>e/*mW@5.mQ1^ogdmFLC61jNk
B9:0MXR,:.[C'f/$HnX3@FlNn\[a`2'i^UUcR/dfV\ni6jJ(6CWF!3fZJ6EK'^[FeqCr3b!40('_f5*g
TZ^O5P4C[M#?aCJE3DJd44N(ckYnplWbDuOc*BH<h\d3u7\E&ATgaL0jh9Pc:@ZW5X]Fr\<kGF@YpX*:
Q>E.;Vn4I?+%G7l=gg^)+gK2MS]<`ZS@)XNaHdS5LJ#iB4n`c!j-JJjS`D,ZR?Cshi(SDr&?,"VgPL!2
:fG]KKo@p`U7K/<l8C2#,J]3l6^TH]i:;?F^db*n>BXg<gJZge@Bq"i04YthCL#<CU6+?Ibr\[V%WE(4
9i@.=KVkLV.7h5So3_PWLE1:Zoi*Ml3lSJ]C1+ch[GE?Rd'YOSatLNNr,mim\D\I'ksP8:Gbbi4gQTc;
n]=]"NC9^7LOV'Si[Y`=Z'LD!>XUQ7qZ1Cl>[bJ0E%)_d,B$+JTq_%H?umeRKp[9XDADPSX+ZUYkFfN^
FfGiUYhgD&LkVWlM*`YX/2q9YZLK(OR16oLjYnGF4hl%0GeW]FUVA`U"K..($W9LtE,/ZY"+&cE-s*Jd
j008Z3i)7V#7$Vn[O`7Qf&c$8fQG>ZZ>ni&m@6[*0&!_8_X=0u-Ke0pZqQ2#,#N7=FP$)aHW"">;G_uE
X%>m$MPN(]VG[c*D$+R3j$phY42YYcnX5cq`_>\FFVJRRR_p/T&pD]KJRchBBpdt9@o*tW9QPq:1_kAD
6Y98]ZlO?J/DB4HfpVY7b'U##QHSc&QVa)!HM8kjauX<uKqA:I*hHL'9rEqG*/OIP)4(uapmWXD._Da6
<W'9(M[J`TB'U38Q7F+G@)Qko6eJgj"2A?\D*+qEaQuHF[<Z8m<q]&7reNdVXj.`a?6J\b.oX3OWH\<=
ao,=rKc\q5/ZO89NmE2b0WXlG%X;btV&jTbQ*!+X:0o2inLSBoh>ibb?R-KUJL]lDbg8rA$ET6P>.iIb
HUF+^4_!ie,,:E^TH8bm>(oQ0c`"Dbf&E?]:kE])@7h3LZ\$hZFR3_brr@EW"?>c'?P)F/c3H)!7R[eh
dP:2:[FU#tM0$sskT%AR(o@=-V:2BIA(,-gg49GX65jF"kbJ74PJ0f@^MLHdXI2..<O22B_\gcd!2/mE
\]UA:jIf+2&>:p<UG)tf@u[q_CMD9E`gfUmd%C_FOt\#2Y_"J!`.l?l/T@XK#WY0h(TWuE#U:N9;_@_N
--rd6T1NiR8%\lC&Ag[<@J7idNM?t_K`qLjZu-7\VB2sg06]![8!Od@)Pf<+Xq\lhgr]o_N57m67(Z9s
\^n]N.*.Z1g&u$jF"K^1`f#.R?!Q:)n<^2J<1bM.*FRf%??(:,:)i-u<ZD>P>dbsFMdYJ(*YG2=OWP%1
Ch",V2a]m.m1iOF[U3ZPXC`K:SE>gRP>fQ&09;3AK1MqrDgd!eqb^ZNe"XLNPSXqR]X025!^KLBpmqk<
C43q[SN%X)cXN!f;B&k0.Pn_iSsrrl4$du)XkAu#=ilO4%2]O';4YXHOVaNj&(+<>qbQ5++uhVf^tZs<
:#Lh6"?@V@Z[4):EqrSn;<mJ-iZ(Ru0BjUk*RZq!)c8[&kO'@VU0e;A@bsa<o!:c\&91uQN75/rSYONT
E[lLJA]S&\V@6ohjuFn$OGH$@PsTo9b*u?j1'(u\`R1Q9/#Jlc;+iMNmS?6'^e!@k3FK/?R^uSi8]5ek
cS/]nYr+@J\S;_d:6cXO$)lE4iXd)M(Dq&:Hj'"Sa[NDp<Mpq]D<YJn(ERmLD75S<V(&j)7l6]4n@]"q
YJfH<.SN)-h(<I[`I/Td>OgE'QN0#H&Z:i)LJ>:c.+$XU[8l9GQ.0C'$Jfrc<046<"I"F-#2R^EP;kG9
oTdt4R0eikklAYNflhBdi#q(_O.<1UlJ8BS4I]FWb^k`?Z@#L&7DIRE<MW!J?1N1DTgk;pl&j@7Y=\i;
g9cFM;=OrjQ\R2QgitOn(dg?WY\PaLB"lf^BP^dr?U;Z?+=-B6p!Ht1.i/Ln<X`\D:;R]lEk7g?DXNO*
/1*V840n;Qk.6_H;hgUTk!KJ$kcj>OQOl+V?3CcG2Po\^]l>AMH-8)jM:UBeb3_$;*&iGBj-B1C`n5B)
..WB\81nfMc8e#Z<T\4K=rKHgQ.`W^5>uco^ipIi78WJZg#27Xkp!][ORf2FqYFj3,hboA46BUsh!Oru
,.d9Mfg@i_F=p"Fc0rh;CTeV*6;>2m:0qJnpETN-hZ^]UNo'b]/&K_d]?s7`'X87"s42NS/%W[N'`/A[
1X"LSR&*<+N(+SV>5(o'gWW,K'urMj.[rS1_iEa=RN>qg;Ud!hji;FCV\rUq6FT#&5dddWG331#`@bl]
.ZH/n`eNak&TDCu*ElL^,5G?Z/P8P9`(:a'f3We8(iZa\[RfQoL<#_$X'&aq/P>_6lB!EXlBMXtDBo@?
hHl@G;M:PH#tZLV42TS1o"13P[?VM:1FUfSibAo&3WW4'DT\H$-MXhbOh"4sPDkBQG5>$tMN[;NiO=e[
ms'!kM'Cg"4D#l/]Nl8?'%iKP+ZtEG]e8D;Wka6a9hCR>T,jm?kb1X1%\PC8ko5B+Q'$^/p4T4jNHq5$
CKr7oaP[?OV+=Kc?6m`1`7G/4!>u3h/%CL#+"&o;W#9[6O>kU<QGM_R`mooN'?N)^/6=oP!8eR+fJbQj
*Lk1-T^c^%nZI#iMh+SW\!/mcMOioYOj:@L:>o;Qq*Y3YKiQq!6Mo\H]/g^@@.34?U=brLVGNT3D(RZ:
JLCOJ*FK^f]*8['9FYA0BEE`a=UhGHBV7fLW@8!C+XnA+lk\sN#)\SS,QX/G#%cql_pV/QleG8aaO<-<
@Q&;p7\@Bf>cg;@1!n^ggt^HL9\Y_LEar)4)16HV3dpgki$a-o&P&OT*FcViK<qthBjhooifFur\oOB3
DL/*QhPe`A%CFqO:PqTA.<V]-+>p%p6-\4*Gf4h_\<1QHcaBmbfTgPGUM+_!<3kcC67+9WO#+`X>J2*;
7Unm`]#;($&AiDrV"dg><S;N']BgLV5_VamB,LCLi^Wp=Ein$(;B%Mkbta8%*fGM7&CM3GBM338"JmOa
!!_?]>4dRZOP1W#5ViG/=5([$:^R>2mFcN;=GW-J0-GI[/XbY^#BFb->-1*M3AYHt<D?Cd4RdAZ>oZM^
3XU"-;FUbXDesIF$86oq&L4e#[d.^/%D@?F8s_`sYbg8Ja(-W4Jgbu7db&PT9Ll=BA&9A<nW>'EC#jo^
iq[s-L#WoZlgA)l04pB?0)#U)0*P5nUjj>_dV7cp^uG0;#_h:RRer;&m*\hG_;S&'</2nE`p.Z7Gp)T8
^.6.u?85Td\N!p?,s0m/'YG/OEfp9;N@^9(dZK\#JO%?5#'ARa-LV6IO!:6m.RJfF%`qOMD%3CPSfhF'
YR>PoWbT8(:r=5;Yq$</@'q\bIHKu<r$ZOE9O_Ki&9*@Y+gMZPF.@9*!btJ6XU@,Di,7[q[iNWi74>.l
>+o2:^IARHF!UtLVS"g`QLP-tFbq)YKt1\$MWl0AL>&]W;HBWPHO^k.[X>>6jWRLm1$MOF*HMSK0cc[A
hf7;UU%:-hJ6j_%G"-N*Gm:U?)r+@QN=K,KH3fP<'Xm7=*>CJ:+YBH!R77:B-P"NF1Blqn"I"l4l>b@\
Wfk3)XCbk[i,t$A.9LTL0\:mt*"/0qS]hTI^%L\meF<N=K3QTK.gM>NQEMi`.c/8ChpD\rbB&Bg0+`>l
K;mbQ<4i.YjSl5J6#L5TI9E)sKZ?&5BAP1#bu8pnltp\"26gG1-\OVY`(kj7R&II7H*HEcF5fESZ8\at
o3S!T%U5IrC?ErJmNoMRiN>#WauFK1ajS(q;eRsbiJ5==TQmSP;gTKcUo\qU(@]1!S3]nS01fT019H^3
<(/?+6V_[`Y(/.I<JJ$5>U\RY%%T#p=q]@V=i-"]\#qc]fXZ<#_8>GT!Pm0EH5rl_g?VNnOZSMr#\iSZ
jnL(XA>eW<dEUU'&XY8YM9KJK4V/UmXa<YZgN;OPd>7DA;&1MGA<-HAg-ZUd1GIX9+\j0af`;K"[1k#'
kaXPh;m*P5Y8uQ-RlMr8=Q2TH^c;i6:,;XHRu_;fEl'pMdaMIhTu^njO_;:mr1eQaVu-ouj)%ld*:Jr=
6hl`rZb'X`p^;@c*/\qnq*t!L:\Y]t`nB3/h]DiRnK:ToKtH7pjh,UeR8:mf;5-j;.)pe"(/$:n-&b*+
BiZI<n5fB:btj\G>&kTf<bu$i`JpT!op3Fr]+-V;MVO3sMU4Z9MrJ(8+cO#dMM;QYrAhi2DJ1PWe_(mh
f?oS3Kk%8ti.rZI*Gk>6S\!1kic2;?X??n8^=cbg,Z;QLXPZpuDLLe*0[pFth)om8e1T64oO/-<40EQa
bZaRt<;XI5/@bK.Yoh>W62#6U_g/<E39V^X9%2q4c5c^kVPe%=gTs:[i+SD;R7.s#^cR2.pCjULC+h^+
r3S;'fdjCHh).-:S-O$u`)g1[G'H)Y\k&uoj?0CU^:p$&#r[t>:AL15pH*i!Lp"BAp/'&q*=J!?Z[;8g
g?Zacd$&C_;jWn4]u^29pVCcYA%04EMX\!GY4PW174^i6s4;Y)js_R]ah[K4)nfXe1=NT<8Ri8+kqA';
A;uLJWg4Zgd#cY%^0t-Ea4ce0@>O;(c!7=/L0>c0Crj''3/7\iXXbG*EOF%$.ip1h<EO%jiK0f/22ZHT
MG6j/rYh5i=/)l=i9CY(k$r=mg9VsV2LK4Ok(q&7qm[6e?8M/3R[/=KAogN(MBZ-nTh2-+QVEk#An2^E
*Tkj*.<2a0W+"88@(i<Y*_L/m#d'lSimKXpBL9b]M0I.^F=2r+Uk1Np6q9.&Y<j_**\7Vtid$l9>XY].
dF2V8-<;t-fqNS97bLRfCYK>JlS8lYMYJP4/kWT7%UI;KAM2p'g2+`ifP`Tg4cWgQSYn+&:,4>*g<D@R
FJY[!D^-!?5hc0rGV&W8iXRkQEk(+4P,ussROh,+Xsu=a)95M[Ld:hNC1PT_QZ!GPGN_.mpu:-Y6]#M>
`)mm9VP`K!SQo]sWgtGZ.`\j&)K,CT&NGY)D@2tMVoQF`:?#qI]_#C_WH+etWA5H<pf`LpL?5?iZdTQl
YoZ[9<64Yc@[b!Kn!%'HUf;(3E?muT"S-):TQlU7=X@M&:A**l7\%AZ=)!"BAmjsDBr>a0Mf>TLFq@$+
2p?u%'\4^'2-ZuLCSK"ge/"QgVrMY'K8t#E@][]-AiD8R=)_[U[qP<,`G$mCAILDd`1R)jf"5L)+Nm+\
K[A((J>00^K+8Q7==?*?He[4t74^i5DS4F(/j/,sC_/Fh5T$GQJVi80J34j`7Z@lkELoE6:/'f&R_$3"
@&o7g02$LpOY'8mBc!Zk)/QhYfj,M3PtD]!1IJlr=W"*X34'I67L;_hW$*ZQ'&jkNFBd<:*8FQbb_$BJ
LcF^.3f#BB\V:M)>.>fc,D]8.F/C3(m"6C<`>`?n+>,5`>n-8"A9h_[.5rb,QZ=,3\@(PNg.\k!X&Pdq
No:p[P0)b=EB"M-TFY3agWdtcj^1A!2<(<<IMK(SHa%F,7'`rZ8&1)3BoFq\)c)4f-1!]gBd6=^7D.B/
ficFFB,-t+FZ6JhA7mgBnZOiM.b/-0:mi2ukJMu%C;j%NU))E0Fl`_S9r1sRU,799%jajDUWf69en8.'
WA@C/N,I/Dotk5Ub?5CL4MljI3Xf,N,(_3\*!"4h*k[;55["Ugm&/roMic/NVYOdIHtcSoOP+9'.Do&`
V,4TWR=s%i;M%l\:E3,]2Q5uO<jrq,?Ek]1Co`j`?u#bN[M\LeCg44Lm=P+nG!'&tJM2sqps*A7,W:8t
)"5PnPm2NHA:""3ir5u>4Q%As-0:t)0'tjVd)-8ITW$:3/+:U]`Lo[Q0,KnbS9qrcU4IPSK]nH:Ii2gP
Wr,':Hje`'K"N/DbQsi1CRST(\5Fk/G5(O[U(D#J["R5[UGKBBqUW@0Yn:#>C@]DcXmD+Nr=FG5[l@Z&
nHX>13h?3!9>BjX:[5kT.X',TbtQBU:u>$3'!DaUQNmj5)G5cmD:6jtLGK8+Si/38#C)+@o#nmd=^oE`
2$]/I2lUQ`?CgHn>FbAHTh_RtLFC+tg0TIjj[>Jd2STRH0NpGU:5[NY`Z-nT)ZnBW_;4],4&$ROf8fuf
G/j<PL@#[:B$AJ)Mft3f&oh/5YjIH.#ZtPsMG7EF>_9piOYs.l)'__^R9#D5#k*@"g()MH['D9O.oKBR
'!VPkm)0h4[gnL?KephH9?og8@(84p0aPL'n$<muA4_%YfOZ@H39#NdKT2e,7fWOud2kCu&Bj&m#(]ZD
TE@b51A-J9OP3t"5VnUc+pIPDH^BtTiD66)ZmpGO$8A,fp@1fE-u0holF^d1n-jLMZ""2$`RiQ._N^,c
ls[hD4'S4E1PY$W#2lZ<L[VpfD<k&\AVN!FZ#)R"3R7@i<>GN6Ie%`o)((>dBrDP;].qs$^duDVlsq,U
8E!ZKnF0sl>J^RRSJqh#Zeu2)"'Xj9[5jo?dr^3,DQD4V>uLR,fiVB_$j&@\7UAe].\@io7Y*o^DO#BC
+i9cD'L7cE$#L2(!96^Lg^:h2PHu5upp>OMlNsl*=acVtnCBbTd+iXAj,gX=TP,d^>3T)E%51s(11_]A
NH)!jbR)Q)rmp?Z'G-oOOpXau&\(984:jqJP^rr]fC(ldUKnd:okN!`7V/Bo[b2m-qS:$-dW\Zcj3@_U
Mq*/*gV"`oRC@p$%0^oM1u_[sch0:7_e`O4[UcY$):SaBgF#6*AJ!a_*2qbqeUJZnX$k)N8`sYI_k<TR
j+2f)DPRBIOb(F`GHiLA`X;4?H>WQ1pbWJ2pGp/5rO6O%j9cl[kc$&M\bF8!Zu)!:Q%n:'61#-8U#ZWm
at-S52dTH%ofi1>8J,\h[i+oPN\*k5'&&3!dQeXo1nOqdI]5u>0e$kS[@n%^^h\b[HZL5i5c4'Y2AIcV
OCq]Ubg$2%Tu/f7F-0gt1Wg.jr6V1>a_`p1N277+UkGg/Ob%X(ha5E&&[5c"kd7aLg`oDIRjj+4C[D*i
DIZP-(_6X-nn-+L4/$sC>4QMi_d!:Sh7Dk-4uj@CCXlM6%Cp`+/-p?C2_L@A&uq3J)lOP&NtX41'MtM^
Bs.q!hAG:a/IQ<F_ITIMRenF7iR)+FM*kN;Jdi6E*7W[WY&LI)-!mN(j]s/=^qJDA:=:t;SoQK@OB\[V
3pU)[d4p7%e](S44Wm$F>"XWR*",p&iLoUCkLB6J,"Ylm<fCY;`G#aaJ2A18ipLqjQ45BH5dR4[4A`[f
]sJ4GF3[3Vk4du2UTV^ERs)'E2gLnuEBhBA^Okn"#AeTU(#>Bq7<]@XJ8Ai&*ClRIl2)DkqPI[;h,n;X
AtKKf3bn'!]*YarF@:%-_&(8=jhrYsTa=OFC8WL2*!GIR"3aTNdAai)?$$&O1fo=NC$-5qK#[t&;a]Bh
.'G^)C@FYC6rLrls3Q*+=`L??V#jQ&&f&*ge-eTKnD]UP*OSS1K]]epC8k]EDh6*oH7o=l:+7J:_/-TC
E>b+2,SXMuo>>S2#DjPA[ms+\*N8O$lKGG"Gpp%Gh)[SC)8\0uE_\5H:m.Qe'!*hBCI[gHOIIq6@L\WE
6!E`W-*&HA(L3WVSC;<j3]**jGqK,nS2=3:'\hT2S92D?iL=Y$0:E#b$2$`q,H&tT1(/q@"DEC6.pS1]
][0fI\eSAG>SV-U?SSQ<:.YW!Mb85!is3W/2Ys(Pqa*L\%#t1Tp$E74RZ!THS=K4S=SG8WOCcR-C$Mf0
,M8Lk3n5Z`M&"%8U&["YVik-5#49'oS#O&Y@>T3-;(th,+*4JGa.?\ok?>>>F_p;Y\<t<0ZM<NYQEb!D
p6qQ-W3\_h!!<3Z!%h4O!C4BW.#XR8Lo#ob=GX3sg@Zf[dpuIZ;d4kY0Z?[klAkF3Obltrn,jV.Xo#qI
fWn8@Rtqp$m@J87akR9c[&l?&#R3+u#./k`%4)`PF)M4X.[Q^Ko&D>3`k)^%KB"tHPc=Ee(S8F(95,\;
%>cAmVer30Q$B3Fjg\qr$RDRp=g[@>>%D]_N[Qae1J&J0<GU5&UrDB$%)Hg4]JHet4.kG$G\$tjdqoii
Bj"b5^(j80:TRLWd]1Z]WDb8tXurYG>>)'1bCHF+\:jtuOq%U,@c2c'qWs,HHHMh52^oKgj$Rd4*lf&0
Y%aqAf*W'TbX,XFY:srcY"QGg^1C?QP"M7R1t>ApYHAd5,_S)I%^be'P'GK[=9eI7oF\Hao/]KuX>F)'
E]TEeCKU)mX<LaZp8fSJ#c4cD;K<1Y1*[kL\F#StAF7oU4-X"7Da7#DrrD4`4j1;&)_%4sZ^l6ipX2s9
`C\+eM&lrWST099>];6(Sa*E8G\V30Us7`]JIG6]XE7Ld[B4V@L;kIoTH+.Z^EL.ojMN*:h`"#rm/+[`
)S*9@R7"=:Ddh0>8O=!;G`6_UO9sW_L^)ZVo&]6C?'+Y/C"4Z5(C6CERV**T#]e-HLFiWE_.h%Ha<f,Y
k\6"8BJMJrOK!'0k&"GJrUMn9nn"7Y3gg!UO%,kaUS2\,n^Kj$"]LV^ilD:@&.5WD!0@3IaLJ!#ko*O>
F\@t*WJ@GTZ#D"33*0]tQGe[mLI[_Rfb#F@A/,.H`FDA,0G4O\W?d\)UG4m)1k[^:G*h0bRRfaVN[m_"
P`,ZA"]ta)(]e6[1bQEFmfP'+M:@pJBTFch%rC5s,a5<m8]jUO:FTS]O_ge=>C6%qbl"rV>oFB,h;Dje
mq&s=e2t"I&3hVCgl#__dbEZ^`b4DHRcr+g#4DXChTKdYW-;lp+F[6jY"^]mY?ZIIANo,1*3[sLKWLob
H4s9s_Hh<,C*&2t<GIWfaVmOEFGL9!,]dh?T2H+7Uc8O[+I^hJ=CK`s@c%R`@9_<*gm>@dT+R1o-j>TH
@bAn^0oI0lU"Ei*NhALG\Rt;m2R3FKUh'Fn`oZGO.T5Oo>i]G6<\fOlc!"CtEOm+#>A_:6N,#siK<;SI
<i2o,;/n;EIa-i!OHh.$-sG8Z@ZIe7fjbdR4`aOGf^b5hl<[:2+l-P(=.u:a1t8<4Tt2.e@>^2-k4maO
i7M.-_*j"FQO^/DG)_FET>FmB>@';CgBN:WY&(eZ$l\-D)4f2:7l`qM>B\q9Ic<QMUbPb7:+5-#&`l(.
Qu(2LD31rL,1&_o*FT`K76Cq0PWNhh>Rp!-bK1)RIFu4+43k,R9ea[3nV1@@7G#%^/Q^Ul%7,m4R+R"a
<,lp<%gGCt#rm/P9t9JjKZhY`R-fo<lR?lm^IO@r(_X@;7I.@A,XE!&$RMq;d1I7Zm#T&ojAkKJ[o9r"
+J^Rk(1O+BKdE94#uLp/U'Akm!KJrg$1KMuFh?q,+sb8J`tHW?[1ssGkDV=bI,*J3$HP:#@N?8Ph<j#E
("m:]?)WK_UuWBD-:tAqeZflhV&(E+>p6XWZb!"J'7re;838Q\LpS=Z%8WKKR<7PR>1^A:Tq%)i92-f@
gBT(h;>omuVZfM2Grc"IQ5kFG,=_BDjAb_mgpc+2nZ`tEYut^u96!qsliH&K"iOj#=u_4J@7%m#Sf;9F
d?"Rm\\)``B(?\>a\1H&opZ(\#10E+)O1TBC`J^O<r:'X<HU'kUDs]RgZg:U8_]oc.W]rX!"TOQW=0AG
gX.]!:?+0U*+p1@[mlNdbQE!793f*LCW$aE;;k@YY8Ch5j@-2g\.i_292lgIP_jF<=#+Qa#9R,="(:1f
0fgc?n77`!K>I6km+\?\@*@o,l5.+rETmM22RcF]-!dRV.q6]]6cr1=j.)^&ck1)Z\g99);W^jAnWPR.
e.alrDN4lGmjTVt,B2AEDV.if`/I8jVIM@?KQDsr7W<O.qs>=d?@#o(@lCG608n^U*F;EoheTJnEhd^5
EiTY7'utJRg552EJO:,c*sRA,J8SR2Da"0i4bkq*fhO7=1:4IAYs@+_.XQ&]"#>e:C`M0[HufooQaC?I
dGpd(2^&q>oQs=R#HtYBBjV]TT_i5:c8fN-B3K.D4l'8GX<%_lP:j@*-RUaSM"P_G27'K"m6dA*(@uP;
I&b;UbsqW@Lp2u6ii2:S*I[TjNf1%f'W!1,!_M2#]5+;&C3#r+1>.RnL9MT^@+EO`*(E1Md$)/6<\EeJ
VIDt+-]K(;'H31LEri1WGnFHN7bX_$"qq;WVW0+[)/KGP.0q@h;DnLZi3`La)GQ=S>m:[%!JRWX+;lR-
d%m#DCLt[+-n.Cco`.B2jC]i!cKnn+eLS!q^jmQKCKdW==OUDBLqsQLmD/0o#Jc'&mk'6=GTq<9Z'sFd
EL:d8:i'B/Niii@[;>_>7?7fk\?6RF3DD=CLki`H;4Hlp.Q;e-KP)R,.usED6+>TF;edP)@PBtORnQo[
kX)r5**F(>'Y9"$d,8XKp<hYA?PemDAZ]UZ>ac=j*<]pW&9<]"Q>;1$7!^CfUJ3qR<958m7!EV&'N1H?
3-AbaCiG/ME0GC=3ZOn=J9Klap)Vioo0=cWD1d/9BSEZon.+1_1J[D$#cqj2:booLn#"r'`i7(W[$MYn
R^A4lVHc[q2T@3hK`FRk"(pr(4;V;i,/3Q`T:[df`C%&bR[0%(""Hi!U!*^0?+Mq*k]NiGR>brZ:iY<u
7alSU!\+F'q+SO\RcWG13I.[T\io5T=6!2X2g0SK@N`O]etUQ]<0q)`P*73d+&e)<>(gLl6Y$Ts3<[oe
I`.'%CL'(!/V.;n".)'kZ0*AO,:sZnZmdBBNAUbO_2B(D7Ps^i2T:R\g;Gm:$u70*R#+m,'0l_n;S3mn
dOI';0X'l^W5GIRFs@Xb:_nnk[)1""G"Po!gL8V8K!9o]KbJt=!H'=9gq#1"_N-7+WN"V$OFoJ5ag@bU
.iS.;'R#j;F.+*26SF2WQsc@>\<dt^;GL6ld=5[.#Ts\&NOU)C6A,EJ<5'j?`*UtJS9u(sZFA-mc'Eg%
NcOZ3U_dklq!+YB=":TMMEbU1]H(EQSYO;5DR3^m,)`?aYd_N*`3%LgoVV('Fl?:/hF]GX;7fXP^m>K[
E\!:k;@t&W8Sp#=28k2X#t`mY@;had\l)IIOW]Og\.BVh92<riE`<e:2e#G#K'$VZ)>;)<<'Y$dG5^6C
gr^XPY;%Z88t'l0e[H]b840?&_dUHMFrd=0T705lY\c@_F)dgLR"IZdf->u-O#&\5Tt>TYXdqB6&Y<_n
*5IQ..K)RaSk_&E=Lf+#9Z=\HU!?aqUU]8]LfV;tAP+>1_fQoVn4*S!^BPN^ZnA`5Cg+c-o<N'j61?4b
[nWsEDeP33l/,(%*\e/*Tt<:e;;jldSquF=\"8A$l0,+nC(8LHX9,bP/[]#IK8;K9.e#i1.B_LkZL.HR
0dRMs]6)=.Jhr%nV;!KPPI-tgYT=cEUMu1MU<d#E^=6'!74^i)`'qKc+Heti@S,>Vg_'Ud6>27@^A2`Z
pK]F>UocS9[";/TNkXo7<ZA3S!=&_>S53:$b5Pi3_Q]Km;T)(a1/XrW%dUH@Khe'e9(?=.ca1Gu'<XaM
%`E:WO@1k2jn-`%m#McQU?2VP3[l7!4ujiZ8ObjN(nDrm#!<HE#e-90f)&lDI<P4)S2Tbr5H/XqWj!?+
>4u,cNcfOC-%g$_qN?["]9du9Ff;NXFJcHBi4#EejHd-[DCk7U8gL%I[T-V&\KtZeYiOo87PIb_S[TWf
Eg8?32I$VN;32q.25?A2S^NEVC81RP9+_lC&PE]MYn9V@'X86C&JVJ^9+_lC&PE]MYn9V@'X86C&JVJ^
9+_lC&PE]MYn9V@'X86C&JVJ^9+_lC&PE]MYn7H^P;fjDX]OeS7eo&d@:$BTZW3j88qC'%NEL*NUpteS
fi&)QQpRB8.W%gL?A=akp((J)JQ%Z0mc\DcFIeOC.r8@_DBu9U3XfWEbY#hBS3=0[MlaDoU(E.C_f6-A
ei9uX(4]nTBR(_`9U`K(27flAXIE(R>FWSEj=b;S*n<=*1u)4`<f0/\S,aK[cFQr*=MFLoo>6a%f&Y&V
(bNi>'-uLF6X\!VD8p(VMUp1LUm_<^:0%>BJ!M;/;O/LU@Nq*^.:OLLDp?1o?cl^e<?!M]@hhD#fG`E.
,BRG,PKP6<4p^(8Z%$_@AmW"W@Ur?Q\;qV.:J>IAHh8eOGja(XZS/H"'I/HRc4>f\&HXo?-hiY\bUcd=
Q,7Ne1$>hKNqW7a>cP$i:'[m?D2L:8#8YS8RDbP*=A9_GARi7I7r[SMAPhdP]//##>Zf8'm5T)5`>ugR
>bkE#e-W(P;/.c5-F^3?_MUo)$6+jD#_FWtZ#/eraI*Y%,.WaRD)C8nU,NGSA7t%8ieW\&>4!I4!*Z,0
BN`>]fGZ?ml1"#@%>D`Q(&l/Q83ZeaPcP<m2Z0Zr3=1h&SfumO<qpFAXP>=0E,nHY?8V1"R8M0s^W4W+
JtP*+lr7(fphA;b*K#c'Q*0q"<45/L>095Pc>0ucWjN3BZ=Ie03,]S)'T;$4S?:BL`N-aREEik#,^)6!
G#n9bW[e2]N3ldViXZYP]C<@DJW^E=2oVN@lM8V&?#66hG+")k\ErC:fQE1^)u:;OqeK1WgXo^V.+XqB
EHa.2]_,!j_W5o!O<=S8j'H,k4V]\sEfkc'@T:Ta[d'Qbj2@(q@?1SL)oG=eM6puCE1qPq"%su<%OZcb
NGfuIY9'^o[I7D%BaR=eEI7n*>K@]Wke:?AadqM-EY)V4@8YIS*iV>d)+Y!GCi%R%Jf?[?\'].K=)D9B
^qst7)XO1X**poR#jr0_$e"Fu$2\/k>8XHrH-O@WJ#PhY>hbT5\FcTFkfaT=6KH70CXO1)%5j`u%>/u[
=)r1AQZ_?l[%h^(F,q$qUn2NC!gkMH]d[JbCJ[Lr3Q]^!Y!cK2Xp%`m/4<CS74^i)`'l4F6_8:c;SBV$
T[FF9pee&X[T]P/?&L/.4G-"oZc.&bPbDb6`?:k_cW=4.*%fj'#<MF:&^;1LWS^Tc"`DT`[\aMlMWdr4
et=neE,"70\=1X7,_@a<K:`)C$"6o2HMo0Zhe)L-CM9D+:JFe^=i%?T9aC?emjCB\Ns3,BH=I:^6aKj#
dt)AIatS[>Cf:QM$G0ORf'rahNK\c$:pTfnl,jc4BQn3F=/=YfqPqbj3k%j=d8d*_VQNm$FQYN].70Aq
X;jhJ:nVn138:kf!FB4m>QEMWQ(t=1%G\JFNdB0DJJN8o8iKt@O,dU;M)<j^@)m.-"i7^cXE0aM#fe2f
DL"CfmGGQ1ku>fZBi=8t\kLuDV`=n/UIqF9pS58BVMidaC=^rG+KUgl,iV.l/R5S0,E5];iEH<5h1mpD
2(pEs/goO#fO?Oq&Wq`)6u4eA1*/>0?WK-C#@b2>(9MHY?RQCV]N)FQ<2Iu@6b9ZD<<9ZlS#Rq'b2g")
1tp0-#G%*Vck>#(20`T,@&'I7.tJOMhWCj:Vl>."A@.kb+i7d1"PQ\I9UVR<E7l#CI!<)96X,<K3Q9;J
qW2DAeY='8:s/&MdO>f=`N<APU9C+#mS/7WBW?)>Pu3Xk6RWDc%$\J[i0b%ci_WAr,_DL?=!fOo)-&H7
^cS@Z8XN@!9@(H5I,s'BP-\T$^k3*W]]2=5"/3950ODh<GfU-n3IIZ7o&Yc(V'ZXgg)!+CmAfk=$VKlb
Y[-7;,#kf/Qr^u!Mjh=UF,\[aCpO]#2>5Y"[(^-e?bN>Ti3O2(9Q33"M'Eq&``j*]f>Jlg>&/P")3:qf
HSEZKX5gm`/]hV2;Pk@<i)MgjGa3EP<T+%m9eN;KBnfiW+M%hOX*q4;+Y!Rc-$fQDAg'ls[9l<28p@iu
P6,DfQ.KNg$-@I0J%hlN0cq"qLC?"k=P.L;Y&d1RE+V*6=SLPHd&mNe27iA>/J9A7:4j#i.ZlK.q.eI"
M%u7l>HTJc7_uf080i-X=(f0&<3$6/3&n?b[B*nL"$p]E(*hg$6\Pj]0oZr*8">Qnf&\8.g&SX58,T+E
(Ap:ehFX%dm+5WPl:kHK6((BG;\8;Q,`8sbmDk>E3[LU4+kGMhK%m:mMpXgej07n$AR9@$lqI[a2di+Q
A/VH:,mN+qQAK4mJMAqj1`;'+P:W&U&^_c=LgZQ(b^1cQ4cOPA<PbSC>E3:hVr[FqaM/T`XM2n^2(b4r
8Wr$Z/>Y>oJl:<ra&As1b$0]fD$9Cl!,^;P1^gj=CFW:`BAhcmrF$Pq=)(m7nY87/@Bq>=$oPF=_DFNp
@>;/%]teGQ84+_%1Te<PBK9-_caZoVNGBmX:,V!YGKhOq2(hXdWf*mR1oGJtOHg!Z?Ufp/)C4?\c%[u,
.$H!4K.u%_$\CN0('MmiGMR)hnE/Y41XRLP,R^>4+r!.a\C3)>f&@$ged,$jBI=W(.phf03Krcm1SC3.
<P"]h,ru2+ePW'i*h,p:Xj9<JbEYTP4YdcfU]:`u:E2V=D8:lumcfJ85934[5>ei`^!`Dg+R+,EN>=W:
-rUcfK-"jFE=Zll*S6"P`?^bV]-&B[=tSaZIERtB]VEh'Zs'<m\G'n-d'!Qu?$^4U+tQ<AOQ>\[a0iua
';5^u(i@uG$JU=[*CB&UN)u.LO^<61;3X/sK,YTQPa[4TBM;/rb=!#-!Xg(_)kj\C]I%)Jg@Lh>%b<pD
102f8H,JF[,8AffH6qdt"F>b.Mp/YJXXVBZ`MCXKPo`nYX\:#a`1]UJ"M'+[)7&$%(#@9k1M,E?c-b%7
HS'KiTh`j(a>t<ajTB.->6W??L-US&)aJ[l.<@dp!L7WW/PTArD>^B^=f+uU;TV&FONYd#OWHQK/`O^e
,V?DQ8N:Gkl*?Cm[n,;`312blY._0sV,baa9<fVti]H:q^)aN&H52^$kCErLn4>3N!9Mf]ZNQ4l^oc2T
AcCas3KYO=%<h0YXO3WP'Ii^THD8E\e"\aTjLkPI345'AE@Oj#KWLu',q;[EE*-1Ra(\S6nC4jmlkr?V
>8CORn7EUk0b.MLM%WuJhWSpH(_G9*4j>QoRccLe(:^d*(W0!e[q14dHFJ""FkC+:8[j_O\udh!F=0h]
,n<Rg+qZ!;Kso`mE4"hGbl`u\_?1@H^,Ef7;tVTr(sdrY)b*;.`b#X\;$LISeg!X:C_juBL=V[$m48hm
R#pil0sZCSbL)U`PB9kP2*#\!DB1J9?:1r!<2?o7WB$u#23?ZE-.eYJ#tQ><$QpEC49gtZFB5eR2_P/T
](<1]<Z>4L)E\4[NtBL/5aQT:G)U/9)%E>XOoTQl$-Q2@b0EcI_.pP.>g)LUV0,b(X0g>F.[<])XTcXC
,_S@WEAEW@'U11E*>OQ?-s.JK("\$AK!-%D82l]P/>fafg$XPN$Y?(%>p2^u*K')PAA\o/_h\O8XbJQu
es(MQg$^h'0"p,?^J0JVY$VF5PiaJRQ/1Y5@s"/UUoeH*R&)jp`t6tSL>*)Y8P53d+Dh;tg!N&7h7;71
0-.SIadCNinr8PFn0Q$&;[LnbiK,6MKEE<]Y&de0^ChB)RaU\#:PW9"e^(&6C)&(\?b[67?2-@XVXDq9
2bo8o;A.d3[5cSk#8<7iQC5]8.8_>j@9biL7dBiQ`hk98C!4(Mgr-R`)`8O*`bmuH8XL\>F92PNlsm1,
[)E`!H^Xp^!9RYK*2la&X@`W[[i2AhqhnBu>*"RJ@;B:BP#S?CKN,89egR:e0*LLt[`hF'NIPS8W`<+D
C0R&B3gmCN:.&Td$IRcF.-Ks?_dW]R!5hq$,=Wdc`@S!j<on<V_+)31i\:N$hJ+T&`"%K7Pq'I,YmRT<
N5>;82WNLNV8Oc*i7ir8$4%jr3%^lkaJ%?\e&#u'/R+Dh&gYEfUh@N%XNX"^+!*6E].UFGa#076/TXRY
R#DMh"i/Qpe[So7A>P*?s3lI`,1TSW+t6tFQ6Ibe,*jE+N@l2Bn_K$_1K,L3SJN/h!GG:k`@;!0Gg8lR
c,"KMbRS@.6\$<JK"U-ZLDbf,BHZI@<$J&T2K)YlXLG"PjM,mb3Je2(K@+eSJl)kGlP'SUZrMF[2r4@"
cA<nB5^D'&.!=pSKQ2u1'q]:"[`t3dcl?Jb""SX%.,u"@j[V7VpCU$W([8>.`o_orAS8qe5T_&SD/&9L
]e\[7/r(!U34/5r!9U=cDZuHN,Hr_C*.uKV1g5gj*m.Ch-rnfZjp)>BSRH4q@1M#IO+BCY$.L_J43h7S
a!tUmM/P)sJ^51?o[/"SaMq->X<:f8,EAlLp)?eBPKpY=V?:b<_l:G)DRmsnRcWB8^pi<lCBSRdUS`rj
VInk9ALSt&;Pqmr,\^qkEZ>1t,q)*/4_pA,eAlg/OhhX'_]._#O8p9N<Kk6fWt=s)f[7`Zk5igrFPWI=
>cJ0kb,?WPaXt3$Mf_@+G&7X5@!kMFdV[OapNCA>LloN6n_eN-j[W"0F]fP;Z=M`2'!WJ9>Ych1F[^F0
b>Ht\/2W)aBEY$;dLqdq\,[?G/LEc9%MJp]!!=nVJ8p1Q)%EZ\CIJ6W#e_hGG"!rM;T)!T6rLrl/4<CS
775qEN[#qi6`==<cW$pn.<N]G'KQeue`G8P;C&d<og:6dMccgmQ4ag07LeCmDSag1c-W_d;Pnf'WWC]q
ik_qe\.E,hM)+m`SdC[7*ItDrLF=>3U%Bo@.uBoVI0O9CEACaC.CfhdA8_'>Roi&ce_$bK=F"hpB[RVA
MJJ4eV$&j7B2Fj@BE^Jp_VpJRA25=fQ0X+Y2-=qpA=(#r9EH^[;Jn$526:^!YX41'f&E#)7n.!Y%WWSS
"fP^BLR#pK2F8Ft<,)R`O--pe$?YN/W\-kdVX)a,:1d1#9P3s7*=tgYXWaOVSi`*($L62+Xfg*`DlsbX
@0Z2W``Y)R0k8r-?q#gkO;eY5)VMANpe`-9],g]\*5RMPFLu%9X(2S6]p%fG;J=N.Pl'?]l-_2LjH?F2
eN%fR8^OK33muAQh+"NSZ4m;e#AD,mnPZkN*Ju;<2]5W^4]F@0(&5EtF0O[mP*h.;G#=Wd`Y6du)H"gp
I2`UT4cq-a`?QP#fro!YY8#1-Pq'Ec[s"r4h7[ogUJ?Y4X1\$U88<nWji_F6VTFkV7"cEFN?FLF8jF6J
JDic(F<a[tTj-+j%lP-(h6:GMcHXO,9#n=`^1IHapG(,njkBt6YAi*\>n+Y-1Q.405iPKRY=?UI:r=3b
"%9c&?gFV7kr3LXGU:sA9SZ*"Y,NkLEZ8.V]4S0uW1c73km\gA-,FOD4.8(Xa*9I/>[n]k](FIQ]1u6\
g_gqa@Q[5LG`oniTt-iUA]KZnF0V^%EBuf92G!D((@+2IG2Z<ME*p=0Y+*eKWtPX[g<$M#."W;VMSmJ6
(Tc0NEVu.BAh^>c>(&,KX4+*Ek4%hY->t,IZ_GJUPAKb@^g[[oXpJp*!!p10\P<C\qTuPb*ueY,m$;Cc
OiuW<-[B"/m&lj.GN1*O]en`Hef#)/:73a?Q)Q&^C>pn+!/tk6mDL`56KH",.2kgS=IPm8]WM(C[]@>P
AkL/XEG3APCV1$4#@K:M=cXH28HtG:a[9S"P2t6`I4j^4/uaZoij]f)SU-tsT'Fsf35\D64V_lY%[P8j
OM(h]OHo$m0ZMpPBY25lE"q"`<YhV",?VEYdBob;>]D8Y,9BT*850VO$X>60,)/,%%h4@%\BW"rZPWdJ
.\`o*4J:QmAL@*#U=/7LK)Se'6D@?)0iAsG9=f7(Ah?n,-%r+5];5"J8kM@q:6t.RCg\[&(f#3KRWB10
@c?2(h1jRJ9Vb5,jeQJTN-OIrA"lK#-!phLOGlM1$'^/NF0USBFtR1/g"so6`^)8*8Fb4(6SHofY;iJ8
A7c[@21Y;I&sTA4a%KiEa&!,t*-ukf#iZp?\XGZn<>SJ:N!S'MZ_GB_)TuX0BG!W\NdDm:/7]qqCZ?40
&fZX:cGfYn64N.#MoCpL7TT(QFY<X0Y?!E4F4.e_>HM24<hi-)%(8Q=F]P8;ihoV<+\OApg5['sP]!FD
1__IU!q9@natqPKXLsklKlAV:]mK-\b=VmF5(&A,c:Q,M7!iCZH&FI10.F"X`&KSBHbcaK%a5CLH*STZ
W`8>idP?.!eYuie^XHW3X3[okONa.-UsmddR'rAs1SRNWBGEE^OA`4:S%K!8-$GWMTYq#`gJHGFeK9B9
8l"d!?7/K8R]p9jF9lpVTt25n1GWR8LHY02@(\^5o1&l;flKdR6o*)2Y7:AkP;Y&4IYiKU*>9ga<H`J?
P+j.g$.u,LT[[&ki#:]def^pLFLOO@1lSA@`!#)eMC%!,+bG']@G*@'46I_[8Qp2$R1dkT`J5#FNl]ua
$f]&T3rqm:+:=!<.j$u6r2%it]@UY`h$X*cl;g][[n`BlrD%H:ZoX^Hh*fDCBlVj2Ef9$n.FM*nSIh>7
SY_>_"p;k=if!622-jVhd>'_s9Y+h*H7c0P3tt=\bJ]5p![F)r1<*oNReQq*.0b=1fYuL=jBi*$6>tDm
]$/a+`gYsMSX[<-j%i&l%Qs=IHH.<5b"E1t2Hrs'Yj#uOhm4:9a$BmR)12XHm'O/o>heFe*@5@aU%=VV
;UL/,6YdM]@^[!m6q:_!4Qad8QQ'XUe6@Khr1MlIPKn;mRtE4=[h<Iu)Uq>296+<IYsh)F,`X3M%@.o@
$S,C[<387_`$\+G:^LB]4hto2FHs%SYbcs+O)Nk\%2%dVBNf@Kbe)iB'4K'W:DoPHot_6W/4be7@gbY.
M,NUT@ZP<>P)?*n]QZ.-?Q6P"mVUIaf6X\t]oshpT;kVb3BeZ^4#-PO&<rJPD-2LRZ_UQB5g^eC$^S[Q
JjrJBja(n)B3TNgVd`cWZW!'OF)nNrTu*%L0*V]7)=M)?6AFLY(60*I"eubg<18l#P!"t0W]:objEdP9
F\;>dU*c"$SfNht\p$oQ*Ai:EZme@7**'S?7i\E]fFGfiQ#R-K0`M-U@@;P2GJf,s+bc:XM#bAE!`EjT
K+ASA/YQiL`&!fb6VSmO[MuO=6onm(/`C!Wh;P<XbM8KML)\90e;$MhBtBs*Q6B5&Y?uop5rs&6JJq`I
3,I?bE6,^#%:-OZ5B_"N@E;$r-uf@TB2:s`O%+^U+!+H*`7\stMZqW9(G.E+W2eMX][Zi+?+^b%FUJ-K
MrAjCPiXi$X%K7dPuFJF0T)Do-p1?=`9=.Qi8?%\!sN-o`tVef'3`ha:p@?#h<E\+.;),WVIVY!DK7-Z
V4c$Ln0TCGi&&-b=dX!)!B#TtBdTsU\*fh^C:A)q;3Zea0^2>CnptpmYtPW]_c#`ZeQ26D@=#fF!),k`
'rZ\>4.)TIWk5\W#E/_BDpB1NgO@(n#ei+T$X.^rmYk?D\f>lc"rFt_U%,_1f]4o_RLu-D7&/hT-oY%t
P:E+eSO]hG9$)F*4fbn55n$/G(CebJ5u"87@tMjTgB@s0$o^p$QNFaSDA:s%]^>VR>^OX=DG&,BNs2e*
Vco0%fOGsJ4BTkZ.NESu`''s#3:-pXbU`1gA!231Ft_\&XMha?nmckm2#3:&2'S$)-Ic_:W@kOi)-$H2
kRGHt:?a_K)PET>_*\r>k5l89-O1*`3r8?fLF\p?DJ]68BulU)e6&rG.3;qf":;VN28mHGk+T<!@IIbE
7`hLWM,p'&(H1KjQ7sas,6-<~>
%%EndBinary
grestore
np
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
/GVGHYJ+ProximaNovaT-Thin*1 uf
/GVGHYJ+ProximaNovaT-Thin uf
/QAAAAA+ProximaNovaT-Thin uf
/GVGHYI+Helvetica*1 uf
/GVGHYI+Helvetica uf
/RAAAAA+Helvetica uf
/GVGHYH+Helvetica-Bold*1 uf
/GVGHYH+Helvetica-Bold uf
/MAAAAA+Helvetica-Bold uf
/GVGHYG+UniversLTStd*1 uf
/GVGHYG+UniversLTStd uf
/KAAAAA+UniversLTStd uf
/GVGHYF+UniversLTStd-Black*1 uf
/GVGHYF+UniversLTStd-Black uf
/JAAAAA+UniversLTStd-Black uf
/GVGHYE+UniversLTStd-Light*1 uf
/GVGHYE+UniversLTStd-Light uf
/IAAAAA+UniversLTStd-Light uf
/GVGHYD+UniversLTStd-Bold*1 uf
/GVGHYD+UniversLTStd-Bold uf
/HAAAAA+UniversLTStd-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: (PANTONE 2768 C)
%%CMYKCustomColor: 0.8942 0.7726 0.4667 0.7295 (PANTONE 2768 C)
%%RGBCustomColor: 
%%EOF
